var j0=Object.defineProperty;var Z0=(t,e,n)=>e in t?j0(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var Le=(t,e,n)=>Z0(t,typeof e!="symbol"?e+"":e,n);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function n(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=n(s);fetch(s.href,r)}})();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const R1="176",bs={ROTATE:0,DOLLY:1,PAN:2},Ds={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},K0=0,D2=1,e4=2,X3=1,t4=2,Rn=3,ei=0,Ft=1,Ln=2,Zn=0,ws=1,A2=2,b2=3,w2=4,n4=5,vi=100,i4=101,s4=102,r4=103,a4=104,o4=200,c4=201,l4=202,u4=203,zo=204,Go=205,h4=206,d4=207,f4=208,p4=209,m4=210,g4=211,_4=212,M4=213,v4=214,Ho=0,ko=1,Vo=2,Rs=3,Jo=4,Wo=5,Qo=6,Xo=7,q3=0,x4=1,S4=2,Kn=0,T4=1,y4=2,E4=3,D4=4,A4=5,b4=6,w4=7,$3=300,Ls=301,Ps=302,qo=303,$o=304,xa=306,Yo=1e3,Si=1001,jo=1002,gn=1003,C4=1004,wr=1005,Sn=1006,io=1007,Ti=1008,Bn=1009,Y3=1010,j3=1011,nr=1012,L1=1013,Di=1014,Pn=1015,lr=1016,P1=1017,U1=1018,ir=1020,Z3=35902,K3=1021,e5=1022,mn=1023,sr=1026,rr=1027,t5=1028,I1=1029,n5=1030,O1=1031,N1=1033,ra=33776,aa=33777,oa=33778,ca=33779,Zo=35840,Ko=35841,e1=35842,t1=35843,n1=36196,i1=37492,s1=37496,r1=37808,a1=37809,o1=37810,c1=37811,l1=37812,u1=37813,h1=37814,d1=37815,f1=37816,p1=37817,m1=37818,g1=37819,_1=37820,M1=37821,la=36492,v1=36494,x1=36495,i5=36283,S1=36284,T1=36285,y1=36286,R4=3200,L4=3201,P4=0,U4=1,jn="",jt="srgb",Us="srgb-linear",fa="linear",ot="srgb",os=7680,C2=519,I4=512,O4=513,N4=514,s5=515,F4=516,B4=517,z4=518,G4=519,E1=35044,R2="300 es",Un=2e3,pa=2001;class Li{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){const i=this._listeners;if(i===void 0)return;const s=i[e];if(s!==void 0){const r=s.indexOf(n);r!==-1&&s.splice(r,1)}}dispatchEvent(e){const n=this._listeners;if(n===void 0)return;const i=n[e.type];if(i!==void 0){e.target=this;const s=i.slice(0);for(let r=0,a=s.length;r<a;r++)s[r].call(this,e);e.target=null}}}const It=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let L2=1234567;const Ks=Math.PI/180,ar=180/Math.PI;function On(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(It[t&255]+It[t>>8&255]+It[t>>16&255]+It[t>>24&255]+"-"+It[e&255]+It[e>>8&255]+"-"+It[e>>16&15|64]+It[e>>24&255]+"-"+It[n&63|128]+It[n>>8&255]+"-"+It[n>>16&255]+It[n>>24&255]+It[i&255]+It[i>>8&255]+It[i>>16&255]+It[i>>24&255]).toLowerCase()}function Qe(t,e,n){return Math.max(e,Math.min(n,t))}function F1(t,e){return(t%e+e)%e}function H4(t,e,n,i,s){return i+(t-e)*(s-i)/(n-e)}function k4(t,e,n){return t!==e?(n-t)/(e-t):0}function er(t,e,n){return(1-n)*t+n*e}function V4(t,e,n,i){return er(t,e,1-Math.exp(-n*i))}function J4(t,e=1){return e-Math.abs(F1(t,e*2)-e)}function W4(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))}function Q4(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))}function X4(t,e){return t+Math.floor(Math.random()*(e-t+1))}function q4(t,e){return t+Math.random()*(e-t)}function $4(t){return t*(.5-Math.random())}function Y4(t){t!==void 0&&(L2=t);let e=L2+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function j4(t){return t*Ks}function Z4(t){return t*ar}function K4(t){return(t&t-1)===0&&t!==0}function ec(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function tc(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function nc(t,e,n,i,s){const r=Math.cos,a=Math.sin,o=r(n/2),c=a(n/2),l=r((e+i)/2),u=a((e+i)/2),d=r((e-i)/2),m=a((e-i)/2),h=r((i-e)/2),f=a((i-e)/2);switch(s){case"XYX":t.set(o*u,c*d,c*m,o*l);break;case"YZY":t.set(c*m,o*u,c*d,o*l);break;case"ZXZ":t.set(c*d,c*m,o*u,o*l);break;case"XZX":t.set(o*u,c*f,c*h,o*l);break;case"YXY":t.set(c*h,o*u,c*f,o*l);break;case"ZYZ":t.set(c*f,c*h,o*u,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function pn(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function at(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(t*4294967295);case Uint16Array:return Math.round(t*65535);case Uint8Array:return Math.round(t*255);case Int32Array:return Math.round(t*2147483647);case Int16Array:return Math.round(t*32767);case Int8Array:return Math.round(t*127);default:throw new Error("Invalid component type.")}}const B1={DEG2RAD:Ks,RAD2DEG:ar,generateUUID:On,clamp:Qe,euclideanModulo:F1,mapLinear:H4,inverseLerp:k4,lerp:er,damp:V4,pingpong:J4,smoothstep:W4,smootherstep:Q4,randInt:X4,randFloat:q4,randFloatSpread:$4,seededRandom:Y4,degToRad:j4,radToDeg:Z4,isPowerOfTwo:K4,ceilPowerOfTwo:ec,floorPowerOfTwo:tc,setQuaternionFromProperEuler:nc,normalize:at,denormalize:pn};class Fe{constructor(e=0,n=0){Fe.prototype.isVector2=!0,this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6],this.y=s[1]*n+s[4]*i+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Qe(this.x,e.x,n.x),this.y=Qe(this.y,e.y,n.y),this}clampScalar(e,n){return this.x=Qe(this.x,e,n),this.y=Qe(this.y,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Qe(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Qe(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),s=Math.sin(n),r=this.x-e.x,a=this.y-e.y;return this.x=r*i-a*s+e.x,this.y=r*s+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class He{constructor(e,n,i,s,r,a,o,c,l){He.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,n,i,s,r,a,o,c,l)}set(e,n,i,s,r,a,o,c,l){const u=this.elements;return u[0]=e,u[1]=s,u[2]=o,u[3]=n,u[4]=r,u[5]=c,u[6]=i,u[7]=a,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,r=this.elements,a=i[0],o=i[3],c=i[6],l=i[1],u=i[4],d=i[7],m=i[2],h=i[5],f=i[8],g=s[0],p=s[3],_=s[6],D=s[1],T=s[4],S=s[7],L=s[2],A=s[5],w=s[8];return r[0]=a*g+o*D+c*L,r[3]=a*p+o*T+c*A,r[6]=a*_+o*S+c*w,r[1]=l*g+u*D+d*L,r[4]=l*p+u*T+d*A,r[7]=l*_+u*S+d*w,r[2]=m*g+h*D+f*L,r[5]=m*p+h*T+f*A,r[8]=m*_+h*S+f*w,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],u=e[8];return n*a*u-n*o*l-i*r*u+i*o*c+s*r*l-s*a*c}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],u=e[8],d=u*a-o*l,m=o*c-u*r,h=l*r-a*c,f=n*d+i*m+s*h;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/f;return e[0]=d*g,e[1]=(s*l-u*i)*g,e[2]=(o*i-s*a)*g,e[3]=m*g,e[4]=(u*n-s*c)*g,e[5]=(s*r-o*n)*g,e[6]=h*g,e[7]=(i*c-l*n)*g,e[8]=(a*n-i*r)*g,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,s,r,a,o){const c=Math.cos(r),l=Math.sin(r);return this.set(i*c,i*l,-i*(c*a+l*o)+a+e,-s*l,s*c,-s*(-l*a+c*o)+o+n,0,0,1),this}scale(e,n){return this.premultiply(so.makeScale(e,n)),this}rotate(e){return this.premultiply(so.makeRotation(-e)),this}translate(e,n){return this.premultiply(so.makeTranslation(e,n)),this}makeTranslation(e,n){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,n,0,0,1),this}makeRotation(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(e,n){return this.set(e,0,0,0,n,0,0,0,1),this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<9;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const so=new He;function r5(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}function or(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function ic(){const t=or("canvas");return t.style.display="block",t}const P2={};function ua(t){t in P2||(P2[t]=!0,console.warn(t))}function sc(t,e,n){return new Promise(function(i,s){function r(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:s();break;case t.TIMEOUT_EXPIRED:setTimeout(r,n);break;default:i()}}setTimeout(r,n)})}function rc(t){const e=t.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function ac(t){const e=t.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const U2=new He().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),I2=new He().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function oc(){const t={enabled:!0,workingColorSpace:Us,spaces:{},convert:function(s,r,a){return this.enabled===!1||r===a||!r||!a||(this.spaces[r].transfer===ot&&(s.r=Nn(s.r),s.g=Nn(s.g),s.b=Nn(s.b)),this.spaces[r].primaries!==this.spaces[a].primaries&&(s.applyMatrix3(this.spaces[r].toXYZ),s.applyMatrix3(this.spaces[a].fromXYZ)),this.spaces[a].transfer===ot&&(s.r=Cs(s.r),s.g=Cs(s.g),s.b=Cs(s.b))),s},fromWorkingColorSpace:function(s,r){return this.convert(s,this.workingColorSpace,r)},toWorkingColorSpace:function(s,r){return this.convert(s,r,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===jn?fa:this.spaces[s].transfer},getLuminanceCoefficients:function(s,r=this.workingColorSpace){return s.fromArray(this.spaces[r].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,r,a){return s.copy(this.spaces[r].toXYZ).multiply(this.spaces[a].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return t.define({[Us]:{primaries:e,whitePoint:i,transfer:fa,toXYZ:U2,fromXYZ:I2,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:jt},outputColorSpaceConfig:{drawingBufferColorSpace:jt}},[jt]:{primaries:e,whitePoint:i,transfer:ot,toXYZ:U2,fromXYZ:I2,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:jt}}}),t}const et=oc();function Nn(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function Cs(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}let cs;class cc{static getDataURL(e,n="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{cs===void 0&&(cs=or("canvas")),cs.width=e.width,cs.height=e.height;const s=cs.getContext("2d");e instanceof ImageData?s.putImageData(e,0,0):s.drawImage(e,0,0,e.width,e.height),i=cs}return i.toDataURL(n)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const n=or("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const s=i.getImageData(0,0,e.width,e.height),r=s.data;for(let a=0;a<r.length;a++)r[a]=Nn(r[a]/255)*255;return i.putImageData(s,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(Nn(n[i]/255)*255):n[i]=Nn(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let lc=0;class z1{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:lc++}),this.uuid=On(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?r.push(ro(s[a].image)):r.push(ro(s[a]))}else r=ro(s);i.url=r}return n||(e.images[this.uuid]=i),i}}function ro(t){return typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap?cc.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let uc=0;class Bt extends Li{constructor(e=Bt.DEFAULT_IMAGE,n=Bt.DEFAULT_MAPPING,i=Si,s=Si,r=Sn,a=Ti,o=mn,c=Bn,l=Bt.DEFAULT_ANISOTROPY,u=jn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:uc++}),this.uuid=On(),this.name="",this.source=new z1(e),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new Fe(0,0),this.repeat=new Fe(1,1),this.center=new Fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new He,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isTextureArray=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isTextureArray=e.isTextureArray,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==$3)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Yo:e.x=e.x-Math.floor(e.x);break;case Si:e.x=e.x<0?0:1;break;case jo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Yo:e.y=e.y-Math.floor(e.y);break;case Si:e.y=e.y<0?0:1;break;case jo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Bt.DEFAULT_IMAGE=null;Bt.DEFAULT_MAPPING=$3;Bt.DEFAULT_ANISOTROPY=1;class xt{constructor(e=0,n=0,i=0,s=1){xt.prototype.isVector4=!0,this.x=e,this.y=n,this.z=i,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,s){return this.x=e,this.y=n,this.z=i,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,r=this.w,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*s+a[12]*r,this.y=a[1]*n+a[5]*i+a[9]*s+a[13]*r,this.z=a[2]*n+a[6]*i+a[10]*s+a[14]*r,this.w=a[3]*n+a[7]*i+a[11]*s+a[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,s,r;const c=e.elements,l=c[0],u=c[4],d=c[8],m=c[1],h=c[5],f=c[9],g=c[2],p=c[6],_=c[10];if(Math.abs(u-m)<.01&&Math.abs(d-g)<.01&&Math.abs(f-p)<.01){if(Math.abs(u+m)<.1&&Math.abs(d+g)<.1&&Math.abs(f+p)<.1&&Math.abs(l+h+_-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const T=(l+1)/2,S=(h+1)/2,L=(_+1)/2,A=(u+m)/4,w=(d+g)/4,F=(f+p)/4;return T>S&&T>L?T<.01?(i=0,s=.707106781,r=.707106781):(i=Math.sqrt(T),s=A/i,r=w/i):S>L?S<.01?(i=.707106781,s=0,r=.707106781):(s=Math.sqrt(S),i=A/s,r=F/s):L<.01?(i=.707106781,s=.707106781,r=0):(r=Math.sqrt(L),i=w/r,s=F/r),this.set(i,s,r,n),this}let D=Math.sqrt((p-f)*(p-f)+(d-g)*(d-g)+(m-u)*(m-u));return Math.abs(D)<.001&&(D=1),this.x=(p-f)/D,this.y=(d-g)/D,this.z=(m-u)/D,this.w=Math.acos((l+h+_-1)/2),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this.w=n[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Qe(this.x,e.x,n.x),this.y=Qe(this.y,e.y,n.y),this.z=Qe(this.z,e.z,n.z),this.w=Qe(this.w,e.w,n.w),this}clampScalar(e,n){return this.x=Qe(this.x,e,n),this.y=Qe(this.y,e,n),this.z=Qe(this.z,e,n),this.w=Qe(this.w,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Qe(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class hc extends Li{constructor(e=1,n=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=n,this.depth=i.depth?i.depth:1,this.scissor=new xt(0,0,e,n),this.scissorTest=!1,this.viewport=new xt(0,0,e,n);const s={width:e,height:n,depth:this.depth};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Sn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,multiview:!1},i);const r=new Bt(s,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];const a=i.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0,this.textures[o].renderTarget=this;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=e,this.textures[s].image.height=n,this.textures[s].image.depth=i;this.dispose()}this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++){this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0,this.textures[n].renderTarget=this;const s=Object.assign({},e.textures[n].image);this.textures[n].source=new z1(s)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ai extends hc{constructor(e=1,n=1,i={}){super(e,n,i),this.isWebGLRenderTarget=!0}}class a5 extends Bt{constructor(e=null,n=1,i=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=gn,this.minFilter=gn,this.wrapR=Si,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class dc extends Bt{constructor(e=null,n=1,i=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:n,height:i,depth:s},this.magFilter=gn,this.minFilter=gn,this.wrapR=Si,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class bi{constructor(e=0,n=0,i=0,s=1){this.isQuaternion=!0,this._x=e,this._y=n,this._z=i,this._w=s}static slerpFlat(e,n,i,s,r,a,o){let c=i[s+0],l=i[s+1],u=i[s+2],d=i[s+3];const m=r[a+0],h=r[a+1],f=r[a+2],g=r[a+3];if(o===0){e[n+0]=c,e[n+1]=l,e[n+2]=u,e[n+3]=d;return}if(o===1){e[n+0]=m,e[n+1]=h,e[n+2]=f,e[n+3]=g;return}if(d!==g||c!==m||l!==h||u!==f){let p=1-o;const _=c*m+l*h+u*f+d*g,D=_>=0?1:-1,T=1-_*_;if(T>Number.EPSILON){const L=Math.sqrt(T),A=Math.atan2(L,_*D);p=Math.sin(p*A)/L,o=Math.sin(o*A)/L}const S=o*D;if(c=c*p+m*S,l=l*p+h*S,u=u*p+f*S,d=d*p+g*S,p===1-o){const L=1/Math.sqrt(c*c+l*l+u*u+d*d);c*=L,l*=L,u*=L,d*=L}}e[n]=c,e[n+1]=l,e[n+2]=u,e[n+3]=d}static multiplyQuaternionsFlat(e,n,i,s,r,a){const o=i[s],c=i[s+1],l=i[s+2],u=i[s+3],d=r[a],m=r[a+1],h=r[a+2],f=r[a+3];return e[n]=o*f+u*d+c*h-l*m,e[n+1]=c*f+u*m+l*d-o*h,e[n+2]=l*f+u*h+o*m-c*d,e[n+3]=u*f-o*d-c*m-l*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,s){return this._x=e,this._y=n,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n=!0){const i=e._x,s=e._y,r=e._z,a=e._order,o=Math.cos,c=Math.sin,l=o(i/2),u=o(s/2),d=o(r/2),m=c(i/2),h=c(s/2),f=c(r/2);switch(a){case"XYZ":this._x=m*u*d+l*h*f,this._y=l*h*d-m*u*f,this._z=l*u*f+m*h*d,this._w=l*u*d-m*h*f;break;case"YXZ":this._x=m*u*d+l*h*f,this._y=l*h*d-m*u*f,this._z=l*u*f-m*h*d,this._w=l*u*d+m*h*f;break;case"ZXY":this._x=m*u*d-l*h*f,this._y=l*h*d+m*u*f,this._z=l*u*f+m*h*d,this._w=l*u*d-m*h*f;break;case"ZYX":this._x=m*u*d-l*h*f,this._y=l*h*d+m*u*f,this._z=l*u*f-m*h*d,this._w=l*u*d+m*h*f;break;case"YZX":this._x=m*u*d+l*h*f,this._y=l*h*d+m*u*f,this._z=l*u*f-m*h*d,this._w=l*u*d-m*h*f;break;case"XZY":this._x=m*u*d-l*h*f,this._y=l*h*d-m*u*f,this._z=l*u*f+m*h*d,this._w=l*u*d+m*h*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return n===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,s=Math.sin(i);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],s=n[4],r=n[8],a=n[1],o=n[5],c=n[9],l=n[2],u=n[6],d=n[10],m=i+o+d;if(m>0){const h=.5/Math.sqrt(m+1);this._w=.25/h,this._x=(u-c)*h,this._y=(r-l)*h,this._z=(a-s)*h}else if(i>o&&i>d){const h=2*Math.sqrt(1+i-o-d);this._w=(u-c)/h,this._x=.25*h,this._y=(s+a)/h,this._z=(r+l)/h}else if(o>d){const h=2*Math.sqrt(1+o-i-d);this._w=(r-l)/h,this._x=(s+a)/h,this._y=.25*h,this._z=(c+u)/h}else{const h=2*Math.sqrt(1+d-i-o);this._w=(a-s)/h,this._x=(r+l)/h,this._y=(c+u)/h,this._z=.25*h}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Qe(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const s=Math.min(1,n/i);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,s=e._y,r=e._z,a=e._w,o=n._x,c=n._y,l=n._z,u=n._w;return this._x=i*u+a*o+s*l-r*c,this._y=s*u+a*c+r*o-i*l,this._z=r*u+a*l+i*c-s*o,this._w=a*u-i*o-s*c-r*l,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,s=this._y,r=this._z,a=this._w;let o=a*e._w+i*e._x+s*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=s,this._z=r,this;const c=1-o*o;if(c<=Number.EPSILON){const h=1-n;return this._w=h*a+n*this._w,this._x=h*i+n*this._x,this._y=h*s+n*this._y,this._z=h*r+n*this._z,this.normalize(),this}const l=Math.sqrt(c),u=Math.atan2(l,o),d=Math.sin((1-n)*u)/l,m=Math.sin(n*u)/l;return this._w=a*d+this._w*m,this._x=i*d+this._x*m,this._y=s*d+this._y*m,this._z=r*d+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=2*Math.PI*Math.random(),n=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(s*Math.sin(e),s*Math.cos(e),r*Math.sin(n),r*Math.cos(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class O{constructor(e=0,n=0,i=0){O.prototype.isVector3=!0,this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return this.applyQuaternion(O2.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(O2.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,s=this.z,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6]*s,this.y=r[1]*n+r[4]*i+r[7]*s,this.z=r[2]*n+r[5]*i+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,r=e.elements,a=1/(r[3]*n+r[7]*i+r[11]*s+r[15]);return this.x=(r[0]*n+r[4]*i+r[8]*s+r[12])*a,this.y=(r[1]*n+r[5]*i+r[9]*s+r[13])*a,this.z=(r[2]*n+r[6]*i+r[10]*s+r[14])*a,this}applyQuaternion(e){const n=this.x,i=this.y,s=this.z,r=e.x,a=e.y,o=e.z,c=e.w,l=2*(a*s-o*i),u=2*(o*n-r*s),d=2*(r*i-a*n);return this.x=n+c*l+a*d-o*u,this.y=i+c*u+o*l-r*d,this.z=s+c*d+r*u-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,s=this.z,r=e.elements;return this.x=r[0]*n+r[4]*i+r[8]*s,this.y=r[1]*n+r[5]*i+r[9]*s,this.z=r[2]*n+r[6]*i+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Qe(this.x,e.x,n.x),this.y=Qe(this.y,e.y,n.y),this.z=Qe(this.z,e.z,n.z),this}clampScalar(e,n){return this.x=Qe(this.x,e,n),this.y=Qe(this.y,e,n),this.z=Qe(this.z,e,n),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Qe(i,e,n))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,s=e.y,r=e.z,a=n.x,o=n.y,c=n.z;return this.x=s*c-r*o,this.y=r*a-i*c,this.z=i*o-s*a,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return ao.copy(this).projectOnVector(e),this.sub(ao)}reflect(e){return this.sub(ao.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Qe(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,s=this.z-e.z;return n*n+i*i+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const s=Math.sin(n)*e;return this.x=s*Math.sin(i),this.y=Math.cos(n)*e,this.z=s*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=s,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,n=Math.random()*2-1,i=Math.sqrt(1-n*n);return this.x=i*Math.cos(e),this.y=n,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ao=new O,O2=new bi;class ur{constructor(e=new O(1/0,1/0,1/0),n=new O(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n+=3)this.expandByPoint(hn.fromArray(e,n));return this}setFromBufferAttribute(e){this.makeEmpty();for(let n=0,i=e.count;n<i;n++)this.expandByPoint(hn.fromBufferAttribute(e,n));return this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=hn.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const r=i.getAttribute("position");if(n===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,hn):hn.fromBufferAttribute(r,a),hn.applyMatrix4(e.matrixWorld),this.expandByPoint(hn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Cr.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Cr.copy(i.boundingBox)),Cr.applyMatrix4(e.matrixWorld),this.union(Cr)}const s=e.children;for(let r=0,a=s.length;r<a;r++)this.expandByObject(s[r],n);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,hn),hn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Hs),Rr.subVectors(this.max,Hs),ls.subVectors(e.a,Hs),us.subVectors(e.b,Hs),hs.subVectors(e.c,Hs),Vn.subVectors(us,ls),Jn.subVectors(hs,us),li.subVectors(ls,hs);let n=[0,-Vn.z,Vn.y,0,-Jn.z,Jn.y,0,-li.z,li.y,Vn.z,0,-Vn.x,Jn.z,0,-Jn.x,li.z,0,-li.x,-Vn.y,Vn.x,0,-Jn.y,Jn.x,0,-li.y,li.x,0];return!oo(n,ls,us,hs,Rr)||(n=[1,0,0,0,1,0,0,0,1],!oo(n,ls,us,hs,Rr))?!1:(Lr.crossVectors(Vn,Jn),n=[Lr.x,Lr.y,Lr.z],oo(n,ls,us,hs,Rr))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,hn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(hn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Dn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Dn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Dn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Dn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Dn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Dn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Dn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Dn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Dn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Dn=[new O,new O,new O,new O,new O,new O,new O,new O],hn=new O,Cr=new ur,ls=new O,us=new O,hs=new O,Vn=new O,Jn=new O,li=new O,Hs=new O,Rr=new O,Lr=new O,ui=new O;function oo(t,e,n,i,s){for(let r=0,a=t.length-3;r<=a;r+=3){ui.fromArray(t,r);const o=s.x*Math.abs(ui.x)+s.y*Math.abs(ui.y)+s.z*Math.abs(ui.z),c=e.dot(ui),l=n.dot(ui),u=i.dot(ui);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>o)return!1}return!0}const fc=new ur,ks=new O,co=new O;class hr{constructor(e=new O,n=-1){this.isSphere=!0,this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):fc.setFromPoints(e).getCenter(i);let s=0;for(let r=0,a=e.length;r<a;r++)s=Math.max(s,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ks.subVectors(e,this.center);const n=ks.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),s=(i-this.radius)*.5;this.center.addScaledVector(ks,s/i),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(co.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ks.copy(e.center).add(co)),this.expandByPoint(ks.copy(e.center).sub(co))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const An=new O,lo=new O,Pr=new O,Wn=new O,uo=new O,Ur=new O,ho=new O;class dr{constructor(e=new O,n=new O(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,An)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=An.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(An.copy(this.origin).addScaledVector(this.direction,n),An.distanceToSquared(e))}distanceSqToSegment(e,n,i,s){lo.copy(e).add(n).multiplyScalar(.5),Pr.copy(n).sub(e).normalize(),Wn.copy(this.origin).sub(lo);const r=e.distanceTo(n)*.5,a=-this.direction.dot(Pr),o=Wn.dot(this.direction),c=-Wn.dot(Pr),l=Wn.lengthSq(),u=Math.abs(1-a*a);let d,m,h,f;if(u>0)if(d=a*c-o,m=a*o-c,f=r*u,d>=0)if(m>=-f)if(m<=f){const g=1/u;d*=g,m*=g,h=d*(d+a*m+2*o)+m*(a*d+m+2*c)+l}else m=r,d=Math.max(0,-(a*m+o)),h=-d*d+m*(m+2*c)+l;else m=-r,d=Math.max(0,-(a*m+o)),h=-d*d+m*(m+2*c)+l;else m<=-f?(d=Math.max(0,-(-a*r+o)),m=d>0?-r:Math.min(Math.max(-r,-c),r),h=-d*d+m*(m+2*c)+l):m<=f?(d=0,m=Math.min(Math.max(-r,-c),r),h=m*(m+2*c)+l):(d=Math.max(0,-(a*r+o)),m=d>0?r:Math.min(Math.max(-r,-c),r),h=-d*d+m*(m+2*c)+l);else m=a>0?-r:r,d=Math.max(0,-(a*m+o)),h=-d*d+m*(m+2*c)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,d),s&&s.copy(lo).addScaledVector(Pr,m),h}intersectSphere(e,n){An.subVectors(e.center,this.origin);const i=An.dot(this.direction),s=An.dot(An)-i*i,r=e.radius*e.radius;if(s>r)return null;const a=Math.sqrt(r-s),o=i-a,c=i+a;return c<0?null:o<0?this.at(c,n):this.at(o,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,s,r,a,o,c;const l=1/this.direction.x,u=1/this.direction.y,d=1/this.direction.z,m=this.origin;return l>=0?(i=(e.min.x-m.x)*l,s=(e.max.x-m.x)*l):(i=(e.max.x-m.x)*l,s=(e.min.x-m.x)*l),u>=0?(r=(e.min.y-m.y)*u,a=(e.max.y-m.y)*u):(r=(e.max.y-m.y)*u,a=(e.min.y-m.y)*u),i>a||r>s||((r>i||isNaN(i))&&(i=r),(a<s||isNaN(s))&&(s=a),d>=0?(o=(e.min.z-m.z)*d,c=(e.max.z-m.z)*d):(o=(e.max.z-m.z)*d,c=(e.min.z-m.z)*d),i>c||o>s)||((o>i||i!==i)&&(i=o),(c<s||s!==s)&&(s=c),s<0)?null:this.at(i>=0?i:s,n)}intersectsBox(e){return this.intersectBox(e,An)!==null}intersectTriangle(e,n,i,s,r){uo.subVectors(n,e),Ur.subVectors(i,e),ho.crossVectors(uo,Ur);let a=this.direction.dot(ho),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Wn.subVectors(this.origin,e);const c=o*this.direction.dot(Ur.crossVectors(Wn,Ur));if(c<0)return null;const l=o*this.direction.dot(uo.cross(Wn));if(l<0||c+l>a)return null;const u=-o*Wn.dot(ho);return u<0?null:this.at(u/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class mt{constructor(e,n,i,s,r,a,o,c,l,u,d,m,h,f,g,p){mt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,n,i,s,r,a,o,c,l,u,d,m,h,f,g,p)}set(e,n,i,s,r,a,o,c,l,u,d,m,h,f,g,p){const _=this.elements;return _[0]=e,_[4]=n,_[8]=i,_[12]=s,_[1]=r,_[5]=a,_[9]=o,_[13]=c,_[2]=l,_[6]=u,_[10]=d,_[14]=m,_[3]=h,_[7]=f,_[11]=g,_[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new mt().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,s=1/ds.setFromMatrixColumn(e,0).length(),r=1/ds.setFromMatrixColumn(e,1).length(),a=1/ds.setFromMatrixColumn(e,2).length();return n[0]=i[0]*s,n[1]=i[1]*s,n[2]=i[2]*s,n[3]=0,n[4]=i[4]*r,n[5]=i[5]*r,n[6]=i[6]*r,n[7]=0,n[8]=i[8]*a,n[9]=i[9]*a,n[10]=i[10]*a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){const n=this.elements,i=e.x,s=e.y,r=e.z,a=Math.cos(i),o=Math.sin(i),c=Math.cos(s),l=Math.sin(s),u=Math.cos(r),d=Math.sin(r);if(e.order==="XYZ"){const m=a*u,h=a*d,f=o*u,g=o*d;n[0]=c*u,n[4]=-c*d,n[8]=l,n[1]=h+f*l,n[5]=m-g*l,n[9]=-o*c,n[2]=g-m*l,n[6]=f+h*l,n[10]=a*c}else if(e.order==="YXZ"){const m=c*u,h=c*d,f=l*u,g=l*d;n[0]=m+g*o,n[4]=f*o-h,n[8]=a*l,n[1]=a*d,n[5]=a*u,n[9]=-o,n[2]=h*o-f,n[6]=g+m*o,n[10]=a*c}else if(e.order==="ZXY"){const m=c*u,h=c*d,f=l*u,g=l*d;n[0]=m-g*o,n[4]=-a*d,n[8]=f+h*o,n[1]=h+f*o,n[5]=a*u,n[9]=g-m*o,n[2]=-a*l,n[6]=o,n[10]=a*c}else if(e.order==="ZYX"){const m=a*u,h=a*d,f=o*u,g=o*d;n[0]=c*u,n[4]=f*l-h,n[8]=m*l+g,n[1]=c*d,n[5]=g*l+m,n[9]=h*l-f,n[2]=-l,n[6]=o*c,n[10]=a*c}else if(e.order==="YZX"){const m=a*c,h=a*l,f=o*c,g=o*l;n[0]=c*u,n[4]=g-m*d,n[8]=f*d+h,n[1]=d,n[5]=a*u,n[9]=-o*u,n[2]=-l*u,n[6]=h*d+f,n[10]=m-g*d}else if(e.order==="XZY"){const m=a*c,h=a*l,f=o*c,g=o*l;n[0]=c*u,n[4]=-d,n[8]=l*u,n[1]=m*d+g,n[5]=a*u,n[9]=h*d-f,n[2]=f*d-h,n[6]=o*u,n[10]=g*d+m}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(pc,e,mc)}lookAt(e,n,i){const s=this.elements;return qt.subVectors(e,n),qt.lengthSq()===0&&(qt.z=1),qt.normalize(),Qn.crossVectors(i,qt),Qn.lengthSq()===0&&(Math.abs(i.z)===1?qt.x+=1e-4:qt.z+=1e-4,qt.normalize(),Qn.crossVectors(i,qt)),Qn.normalize(),Ir.crossVectors(qt,Qn),s[0]=Qn.x,s[4]=Ir.x,s[8]=qt.x,s[1]=Qn.y,s[5]=Ir.y,s[9]=qt.y,s[2]=Qn.z,s[6]=Ir.z,s[10]=qt.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,r=this.elements,a=i[0],o=i[4],c=i[8],l=i[12],u=i[1],d=i[5],m=i[9],h=i[13],f=i[2],g=i[6],p=i[10],_=i[14],D=i[3],T=i[7],S=i[11],L=i[15],A=s[0],w=s[4],F=s[8],y=s[12],v=s[1],b=s[5],q=s[9],W=s[13],z=s[2],B=s[6],P=s[10],J=s[14],R=s[3],$=s[7],Z=s[11],se=s[15];return r[0]=a*A+o*v+c*z+l*R,r[4]=a*w+o*b+c*B+l*$,r[8]=a*F+o*q+c*P+l*Z,r[12]=a*y+o*W+c*J+l*se,r[1]=u*A+d*v+m*z+h*R,r[5]=u*w+d*b+m*B+h*$,r[9]=u*F+d*q+m*P+h*Z,r[13]=u*y+d*W+m*J+h*se,r[2]=f*A+g*v+p*z+_*R,r[6]=f*w+g*b+p*B+_*$,r[10]=f*F+g*q+p*P+_*Z,r[14]=f*y+g*W+p*J+_*se,r[3]=D*A+T*v+S*z+L*R,r[7]=D*w+T*b+S*B+L*$,r[11]=D*F+T*q+S*P+L*Z,r[15]=D*y+T*W+S*J+L*se,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],s=e[8],r=e[12],a=e[1],o=e[5],c=e[9],l=e[13],u=e[2],d=e[6],m=e[10],h=e[14],f=e[3],g=e[7],p=e[11],_=e[15];return f*(+r*c*d-s*l*d-r*o*m+i*l*m+s*o*h-i*c*h)+g*(+n*c*h-n*l*m+r*a*m-s*a*h+s*l*u-r*c*u)+p*(+n*l*d-n*o*h-r*a*d+i*a*h+r*o*u-i*l*u)+_*(-s*o*u-n*c*d+n*o*m+s*a*d-i*a*m+i*c*u)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=n,s[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],u=e[8],d=e[9],m=e[10],h=e[11],f=e[12],g=e[13],p=e[14],_=e[15],D=d*p*l-g*m*l+g*c*h-o*p*h-d*c*_+o*m*_,T=f*m*l-u*p*l-f*c*h+a*p*h+u*c*_-a*m*_,S=u*g*l-f*d*l+f*o*h-a*g*h-u*o*_+a*d*_,L=f*d*c-u*g*c-f*o*m+a*g*m+u*o*p-a*d*p,A=n*D+i*T+s*S+r*L;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/A;return e[0]=D*w,e[1]=(g*m*r-d*p*r-g*s*h+i*p*h+d*s*_-i*m*_)*w,e[2]=(o*p*r-g*c*r+g*s*l-i*p*l-o*s*_+i*c*_)*w,e[3]=(d*c*r-o*m*r-d*s*l+i*m*l+o*s*h-i*c*h)*w,e[4]=T*w,e[5]=(u*p*r-f*m*r+f*s*h-n*p*h-u*s*_+n*m*_)*w,e[6]=(f*c*r-a*p*r-f*s*l+n*p*l+a*s*_-n*c*_)*w,e[7]=(a*m*r-u*c*r+u*s*l-n*m*l-a*s*h+n*c*h)*w,e[8]=S*w,e[9]=(f*d*r-u*g*r-f*i*h+n*g*h+u*i*_-n*d*_)*w,e[10]=(a*g*r-f*o*r+f*i*l-n*g*l-a*i*_+n*o*_)*w,e[11]=(u*o*r-a*d*r-u*i*l+n*d*l+a*i*h-n*o*h)*w,e[12]=L*w,e[13]=(u*g*s-f*d*s+f*i*m-n*g*m-u*i*p+n*d*p)*w,e[14]=(f*o*s-a*g*s-f*i*c+n*g*c+a*i*p-n*o*p)*w,e[15]=(a*d*s-u*o*s+u*i*c-n*d*c-a*i*m+n*o*m)*w,this}scale(e){const n=this.elements,i=e.x,s=e.y,r=e.z;return n[0]*=i,n[4]*=s,n[8]*=r,n[1]*=i,n[5]*=s,n[9]*=r,n[2]*=i,n[6]*=s,n[10]*=r,n[3]*=i,n[7]*=s,n[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,s))}makeTranslation(e,n,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),s=Math.sin(n),r=1-i,a=e.x,o=e.y,c=e.z,l=r*a,u=r*o;return this.set(l*a+i,l*o-s*c,l*c+s*o,0,l*o+s*c,u*o+i,u*c-s*a,0,l*c-s*o,u*c+s*a,r*c*c+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,s,r,a){return this.set(1,i,r,0,e,1,a,0,n,s,1,0,0,0,0,1),this}compose(e,n,i){const s=this.elements,r=n._x,a=n._y,o=n._z,c=n._w,l=r+r,u=a+a,d=o+o,m=r*l,h=r*u,f=r*d,g=a*u,p=a*d,_=o*d,D=c*l,T=c*u,S=c*d,L=i.x,A=i.y,w=i.z;return s[0]=(1-(g+_))*L,s[1]=(h+S)*L,s[2]=(f-T)*L,s[3]=0,s[4]=(h-S)*A,s[5]=(1-(m+_))*A,s[6]=(p+D)*A,s[7]=0,s[8]=(f+T)*w,s[9]=(p-D)*w,s[10]=(1-(m+g))*w,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,n,i){const s=this.elements;let r=ds.set(s[0],s[1],s[2]).length();const a=ds.set(s[4],s[5],s[6]).length(),o=ds.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],dn.copy(this);const l=1/r,u=1/a,d=1/o;return dn.elements[0]*=l,dn.elements[1]*=l,dn.elements[2]*=l,dn.elements[4]*=u,dn.elements[5]*=u,dn.elements[6]*=u,dn.elements[8]*=d,dn.elements[9]*=d,dn.elements[10]*=d,n.setFromRotationMatrix(dn),i.x=r,i.y=a,i.z=o,this}makePerspective(e,n,i,s,r,a,o=Un){const c=this.elements,l=2*r/(n-e),u=2*r/(i-s),d=(n+e)/(n-e),m=(i+s)/(i-s);let h,f;if(o===Un)h=-(a+r)/(a-r),f=-2*a*r/(a-r);else if(o===pa)h=-a/(a-r),f=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return c[0]=l,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=u,c[9]=m,c[13]=0,c[2]=0,c[6]=0,c[10]=h,c[14]=f,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,n,i,s,r,a,o=Un){const c=this.elements,l=1/(n-e),u=1/(i-s),d=1/(a-r),m=(n+e)*l,h=(i+s)*u;let f,g;if(o===Un)f=(a+r)*d,g=-2*d;else if(o===pa)f=r*d,g=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-m,c[1]=0,c[5]=2*u,c[9]=0,c[13]=-h,c[2]=0,c[6]=0,c[10]=g,c[14]=-f,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<16;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const ds=new O,dn=new mt,pc=new O(0,0,0),mc=new O(1,1,1),Qn=new O,Ir=new O,qt=new O,N2=new mt,F2=new bi;class zn{constructor(e=0,n=0,i=0,s=zn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,s=this._order){return this._x=e,this._y=n,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const s=e.elements,r=s[0],a=s[4],o=s[8],c=s[1],l=s[5],u=s[9],d=s[2],m=s[6],h=s[10];switch(n){case"XYZ":this._y=Math.asin(Qe(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,h),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(m,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Qe(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,h),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-d,r),this._z=0);break;case"ZXY":this._x=Math.asin(Qe(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-d,h),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-Qe(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(m,h),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(Qe(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-d,r)):(this._x=0,this._y=Math.atan2(o,h));break;case"XZY":this._z=Math.asin(-Qe(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-u,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return N2.makeRotationFromQuaternion(e),this.setFromRotationMatrix(N2,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return F2.setFromEuler(this),this.setFromQuaternion(F2,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}zn.DEFAULT_ORDER="XYZ";class G1{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let gc=0;const B2=new O,fs=new bi,bn=new mt,Or=new O,Vs=new O,_c=new O,Mc=new bi,z2=new O(1,0,0),G2=new O(0,1,0),H2=new O(0,0,1),k2={type:"added"},vc={type:"removed"},ps={type:"childadded",child:null},fo={type:"childremoved",child:null};class zt extends Li{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:gc++}),this.uuid=On(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=zt.DEFAULT_UP.clone();const e=new O,n=new zn,i=new bi,s=new O(1,1,1);function r(){i.setFromEuler(n,!1)}function a(){n.setFromQuaternion(i,void 0,!1)}n._onChange(r),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new mt},normalMatrix:{value:new He}}),this.matrix=new mt,this.matrixWorld=new mt,this.matrixAutoUpdate=zt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=zt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new G1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return fs.setFromAxisAngle(e,n),this.quaternion.multiply(fs),this}rotateOnWorldAxis(e,n){return fs.setFromAxisAngle(e,n),this.quaternion.premultiply(fs),this}rotateX(e){return this.rotateOnAxis(z2,e)}rotateY(e){return this.rotateOnAxis(G2,e)}rotateZ(e){return this.rotateOnAxis(H2,e)}translateOnAxis(e,n){return B2.copy(e).applyQuaternion(this.quaternion),this.position.add(B2.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(z2,e)}translateY(e){return this.translateOnAxis(G2,e)}translateZ(e){return this.translateOnAxis(H2,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(bn.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?Or.copy(e):Or.set(e,n,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Vs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?bn.lookAt(Vs,Or,this.up):bn.lookAt(Or,Vs,this.up),this.quaternion.setFromRotationMatrix(bn),s&&(bn.extractRotation(s.matrixWorld),fs.setFromRotationMatrix(bn),this.quaternion.premultiply(fs.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(k2),ps.child=e,this.dispatchEvent(ps),ps.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(vc),fo.child=e,this.dispatchEvent(fo),fo.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),bn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),bn.multiply(e.parent.matrixWorld)),e.applyMatrix4(bn),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(k2),ps.child=e,this.dispatchEvent(ps),ps.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,s=this.children.length;i<s;i++){const a=this.children[i].getObjectByProperty(e,n);if(a!==void 0)return a}}getObjectsByProperty(e,n,i=[]){this[e]===n&&i.push(this);const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].getObjectsByProperty(e,n,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vs,e,_c),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vs,Mc,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,s=n.length;i<s;i++)n[i].updateMatrixWorld(e)}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),n===!0){const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].updateWorldMatrix(!1,!0)}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.geometryInfo=this._geometryInfo.map(o=>({...o,boundingBox:o.boundingBox?{min:o.boundingBox.min.toArray(),max:o.boundingBox.max.toArray()}:void 0,boundingSphere:o.boundingSphere?{radius:o.boundingSphere.radius,center:o.boundingSphere.center.toArray()}:void 0})),s.instanceInfo=this._instanceInfo.map(o=>({...o})),s.availableInstanceIds=this._availableInstanceIds.slice(),s.availableGeometryIds=this._availableGeometryIds.slice(),s.nextIndexStart=this._nextIndexStart,s.nextVertexStart=this._nextVertexStart,s.geometryCount=this._geometryCount,s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.matricesTexture=this._matricesTexture.toJSON(e),s.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(s.boundingSphere={center:this.boundingSphere.center.toArray(),radius:this.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:this.boundingBox.min.toArray(),max:this.boundingBox.max.toArray()}));function r(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const d=c[l];r(e.shapes,d)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(r(e.materials,this.material[c]));s.material=o}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];s.animations.push(r(e.animations,c))}}if(n){const o=a(e.geometries),c=a(e.materials),l=a(e.textures),u=a(e.images),d=a(e.shapes),m=a(e.skeletons),h=a(e.animations),f=a(e.nodes);o.length>0&&(i.geometries=o),c.length>0&&(i.materials=c),l.length>0&&(i.textures=l),u.length>0&&(i.images=u),d.length>0&&(i.shapes=d),m.length>0&&(i.skeletons=m),h.length>0&&(i.animations=h),f.length>0&&(i.nodes=f)}return i.object=s,i;function a(o){const c=[];for(const l in o){const u=o[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const s=e.children[i];this.add(s.clone())}return this}}zt.DEFAULT_UP=new O(0,1,0);zt.DEFAULT_MATRIX_AUTO_UPDATE=!0;zt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const fn=new O,wn=new O,po=new O,Cn=new O,ms=new O,gs=new O,V2=new O,mo=new O,go=new O,_o=new O,Mo=new xt,vo=new xt,xo=new xt;class an{constructor(e=new O,n=new O,i=new O){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,s){s.subVectors(i,n),fn.subVectors(e,n),s.cross(fn);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,n,i,s,r){fn.subVectors(s,n),wn.subVectors(i,n),po.subVectors(e,n);const a=fn.dot(fn),o=fn.dot(wn),c=fn.dot(po),l=wn.dot(wn),u=wn.dot(po),d=a*l-o*o;if(d===0)return r.set(0,0,0),null;const m=1/d,h=(l*c-o*u)*m,f=(a*u-o*c)*m;return r.set(1-h-f,f,h)}static containsPoint(e,n,i,s){return this.getBarycoord(e,n,i,s,Cn)===null?!1:Cn.x>=0&&Cn.y>=0&&Cn.x+Cn.y<=1}static getInterpolation(e,n,i,s,r,a,o,c){return this.getBarycoord(e,n,i,s,Cn)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Cn.x),c.addScaledVector(a,Cn.y),c.addScaledVector(o,Cn.z),c)}static getInterpolatedAttribute(e,n,i,s,r,a){return Mo.setScalar(0),vo.setScalar(0),xo.setScalar(0),Mo.fromBufferAttribute(e,n),vo.fromBufferAttribute(e,i),xo.fromBufferAttribute(e,s),a.setScalar(0),a.addScaledVector(Mo,r.x),a.addScaledVector(vo,r.y),a.addScaledVector(xo,r.z),a}static isFrontFacing(e,n,i,s){return fn.subVectors(i,n),wn.subVectors(e,n),fn.cross(wn).dot(s)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,s){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,n,i,s){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return fn.subVectors(this.c,this.b),wn.subVectors(this.a,this.b),fn.cross(wn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return an.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return an.getBarycoord(e,this.a,this.b,this.c,n)}getInterpolation(e,n,i,s,r){return an.getInterpolation(e,this.a,this.b,this.c,n,i,s,r)}containsPoint(e){return an.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return an.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,s=this.b,r=this.c;let a,o;ms.subVectors(s,i),gs.subVectors(r,i),mo.subVectors(e,i);const c=ms.dot(mo),l=gs.dot(mo);if(c<=0&&l<=0)return n.copy(i);go.subVectors(e,s);const u=ms.dot(go),d=gs.dot(go);if(u>=0&&d<=u)return n.copy(s);const m=c*d-u*l;if(m<=0&&c>=0&&u<=0)return a=c/(c-u),n.copy(i).addScaledVector(ms,a);_o.subVectors(e,r);const h=ms.dot(_o),f=gs.dot(_o);if(f>=0&&h<=f)return n.copy(r);const g=h*l-c*f;if(g<=0&&l>=0&&f<=0)return o=l/(l-f),n.copy(i).addScaledVector(gs,o);const p=u*f-h*d;if(p<=0&&d-u>=0&&h-f>=0)return V2.subVectors(r,s),o=(d-u)/(d-u+(h-f)),n.copy(s).addScaledVector(V2,o);const _=1/(p+g+m);return a=g*_,o=m*_,n.copy(i).addScaledVector(ms,a).addScaledVector(gs,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const o5={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Xn={h:0,s:0,l:0},Nr={h:0,s:0,l:0};function So(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}class $e{constructor(e,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,n,i)}set(e,n,i){if(n===void 0&&i===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,n,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=jt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,et.toWorkingColorSpace(this,n),this}setRGB(e,n,i,s=et.workingColorSpace){return this.r=e,this.g=n,this.b=i,et.toWorkingColorSpace(this,s),this}setHSL(e,n,i,s=et.workingColorSpace){if(e=F1(e,1),n=Qe(n,0,1),i=Qe(i,0,1),n===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,a=2*i-r;this.r=So(a,r,e+1/3),this.g=So(a,r,e),this.b=So(a,r,e-1/3)}return et.toWorkingColorSpace(this,s),this}setStyle(e,n=jt){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,n);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,n);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=s[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,n);if(a===6)return this.setHex(parseInt(r,16),n);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,n);return this}setColorName(e,n=jt){const i=o5[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Nn(e.r),this.g=Nn(e.g),this.b=Nn(e.b),this}copyLinearToSRGB(e){return this.r=Cs(e.r),this.g=Cs(e.g),this.b=Cs(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=jt){return et.fromWorkingColorSpace(Ot.copy(this),e),Math.round(Qe(Ot.r*255,0,255))*65536+Math.round(Qe(Ot.g*255,0,255))*256+Math.round(Qe(Ot.b*255,0,255))}getHexString(e=jt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=et.workingColorSpace){et.fromWorkingColorSpace(Ot.copy(this),n);const i=Ot.r,s=Ot.g,r=Ot.b,a=Math.max(i,s,r),o=Math.min(i,s,r);let c,l;const u=(o+a)/2;if(o===a)c=0,l=0;else{const d=a-o;switch(l=u<=.5?d/(a+o):d/(2-a-o),a){case i:c=(s-r)/d+(s<r?6:0);break;case s:c=(r-i)/d+2;break;case r:c=(i-s)/d+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,n=et.workingColorSpace){return et.fromWorkingColorSpace(Ot.copy(this),n),e.r=Ot.r,e.g=Ot.g,e.b=Ot.b,e}getStyle(e=jt){et.fromWorkingColorSpace(Ot.copy(this),e);const n=Ot.r,i=Ot.g,s=Ot.b;return e!==jt?`color(${e} ${n.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(e,n,i){return this.getHSL(Xn),this.setHSL(Xn.h+e,Xn.s+n,Xn.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(Xn),e.getHSL(Nr);const i=er(Xn.h,Nr.h,n),s=er(Xn.s,Nr.s,n),r=er(Xn.l,Nr.l,n);return this.setHSL(i,s,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const n=this.r,i=this.g,s=this.b,r=e.elements;return this.r=r[0]*n+r[3]*i+r[6]*s,this.g=r[1]*n+r[4]*i+r[7]*s,this.b=r[2]*n+r[5]*i+r[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ot=new $e;$e.NAMES=o5;let xc=0;class Pi extends Li{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:xc++}),this.uuid=On(),this.name="",this.type="Material",this.blending=ws,this.side=ei,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=zo,this.blendDst=Go,this.blendEquation=vi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new $e(0,0,0),this.blendAlpha=0,this.depthFunc=Rs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=C2,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=os,this.stencilZFail=os,this.stencilZPass=os,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const s=this[n];if(s===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==ws&&(i.blending=this.blending),this.side!==ei&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==zo&&(i.blendSrc=this.blendSrc),this.blendDst!==Go&&(i.blendDst=this.blendDst),this.blendEquation!==vi&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Rs&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==C2&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==os&&(i.stencilFail=this.stencilFail),this.stencilZFail!==os&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==os&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(r){const a=[];for(const o in r){const c=r[o];delete c.metadata,a.push(c)}return a}if(n){const r=s(e.textures),a=s(e.images);r.length>0&&(i.textures=r),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const s=n.length;i=new Array(s);for(let r=0;r!==s;++r)i[r]=n[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class kn extends Pi{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new $e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new zn,this.combine=q3,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const yt=new O,Fr=new Fe;let Sc=0;class on{constructor(e,n,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Sc++}),this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i,this.usage=E1,this.updateRanges=[],this.gpuType=Pn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=n.array[i+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)Fr.fromBufferAttribute(this,n),Fr.applyMatrix3(e),this.setXY(n,Fr.x,Fr.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)yt.fromBufferAttribute(this,n),yt.applyMatrix3(e),this.setXYZ(n,yt.x,yt.y,yt.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)yt.fromBufferAttribute(this,n),yt.applyMatrix4(e),this.setXYZ(n,yt.x,yt.y,yt.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)yt.fromBufferAttribute(this,n),yt.applyNormalMatrix(e),this.setXYZ(n,yt.x,yt.y,yt.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)yt.fromBufferAttribute(this,n),yt.transformDirection(e),this.setXYZ(n,yt.x,yt.y,yt.z);return this}set(e,n=0){return this.array.set(e,n),this}getComponent(e,n){let i=this.array[e*this.itemSize+n];return this.normalized&&(i=pn(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=at(i,this.array)),this.array[e*this.itemSize+n]=i,this}getX(e){let n=this.array[e*this.itemSize];return this.normalized&&(n=pn(n,this.array)),n}setX(e,n){return this.normalized&&(n=at(n,this.array)),this.array[e*this.itemSize]=n,this}getY(e){let n=this.array[e*this.itemSize+1];return this.normalized&&(n=pn(n,this.array)),n}setY(e,n){return this.normalized&&(n=at(n,this.array)),this.array[e*this.itemSize+1]=n,this}getZ(e){let n=this.array[e*this.itemSize+2];return this.normalized&&(n=pn(n,this.array)),n}setZ(e,n){return this.normalized&&(n=at(n,this.array)),this.array[e*this.itemSize+2]=n,this}getW(e){let n=this.array[e*this.itemSize+3];return this.normalized&&(n=pn(n,this.array)),n}setW(e,n){return this.normalized&&(n=at(n,this.array)),this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=at(n,this.array),i=at(i,this.array)),this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,s){return e*=this.itemSize,this.normalized&&(n=at(n,this.array),i=at(i,this.array),s=at(s,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this}setXYZW(e,n,i,s,r){return e*=this.itemSize,this.normalized&&(n=at(n,this.array),i=at(i,this.array),s=at(s,this.array),r=at(r,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==E1&&(e.usage=this.usage),e}}class c5 extends on{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class l5 extends on{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class Wt extends on{constructor(e,n,i){super(new Float32Array(e),n,i)}}let Tc=0;const tn=new mt,To=new zt,_s=new O,$t=new ur,Js=new ur,Rt=new O;class vt extends Li{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Tc++}),this.uuid=On(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(r5(e)?l5:c5)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new He().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return tn.makeRotationFromQuaternion(e),this.applyMatrix4(tn),this}rotateX(e){return tn.makeRotationX(e),this.applyMatrix4(tn),this}rotateY(e){return tn.makeRotationY(e),this.applyMatrix4(tn),this}rotateZ(e){return tn.makeRotationZ(e),this.applyMatrix4(tn),this}translate(e,n,i){return tn.makeTranslation(e,n,i),this.applyMatrix4(tn),this}scale(e,n,i){return tn.makeScale(e,n,i),this.applyMatrix4(tn),this}lookAt(e){return To.lookAt(e),To.updateMatrix(),this.applyMatrix4(To.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(_s).negate(),this.translate(_s.x,_s.y,_s.z),this}setFromPoints(e){const n=this.getAttribute("position");if(n===void 0){const i=[];for(let s=0,r=e.length;s<r;s++){const a=e[s];i.push(a.x,a.y,a.z||0)}this.setAttribute("position",new Wt(i,3))}else{const i=Math.min(e.length,n.count);for(let s=0;s<i;s++){const r=e[s];n.setXYZ(s,r.x,r.y,r.z||0)}e.length>n.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),n.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ur);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new O(-1/0,-1/0,-1/0),new O(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,s=n.length;i<s;i++){const r=n[i];$t.setFromBufferAttribute(r),this.morphTargetsRelative?(Rt.addVectors(this.boundingBox.min,$t.min),this.boundingBox.expandByPoint(Rt),Rt.addVectors(this.boundingBox.max,$t.max),this.boundingBox.expandByPoint(Rt)):(this.boundingBox.expandByPoint($t.min),this.boundingBox.expandByPoint($t.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new hr);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new O,1/0);return}if(e){const i=this.boundingSphere.center;if($t.setFromBufferAttribute(e),n)for(let r=0,a=n.length;r<a;r++){const o=n[r];Js.setFromBufferAttribute(o),this.morphTargetsRelative?(Rt.addVectors($t.min,Js.min),$t.expandByPoint(Rt),Rt.addVectors($t.max,Js.max),$t.expandByPoint(Rt)):($t.expandByPoint(Js.min),$t.expandByPoint(Js.max))}$t.getCenter(i);let s=0;for(let r=0,a=e.count;r<a;r++)Rt.fromBufferAttribute(e,r),s=Math.max(s,i.distanceToSquared(Rt));if(n)for(let r=0,a=n.length;r<a;r++){const o=n[r],c=this.morphTargetsRelative;for(let l=0,u=o.count;l<u;l++)Rt.fromBufferAttribute(o,l),c&&(_s.fromBufferAttribute(e,l),Rt.add(_s)),s=Math.max(s,i.distanceToSquared(Rt))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=n.position,s=n.normal,r=n.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new on(new Float32Array(4*i.count),4));const a=this.getAttribute("tangent"),o=[],c=[];for(let F=0;F<i.count;F++)o[F]=new O,c[F]=new O;const l=new O,u=new O,d=new O,m=new Fe,h=new Fe,f=new Fe,g=new O,p=new O;function _(F,y,v){l.fromBufferAttribute(i,F),u.fromBufferAttribute(i,y),d.fromBufferAttribute(i,v),m.fromBufferAttribute(r,F),h.fromBufferAttribute(r,y),f.fromBufferAttribute(r,v),u.sub(l),d.sub(l),h.sub(m),f.sub(m);const b=1/(h.x*f.y-f.x*h.y);isFinite(b)&&(g.copy(u).multiplyScalar(f.y).addScaledVector(d,-h.y).multiplyScalar(b),p.copy(d).multiplyScalar(h.x).addScaledVector(u,-f.x).multiplyScalar(b),o[F].add(g),o[y].add(g),o[v].add(g),c[F].add(p),c[y].add(p),c[v].add(p))}let D=this.groups;D.length===0&&(D=[{start:0,count:e.count}]);for(let F=0,y=D.length;F<y;++F){const v=D[F],b=v.start,q=v.count;for(let W=b,z=b+q;W<z;W+=3)_(e.getX(W+0),e.getX(W+1),e.getX(W+2))}const T=new O,S=new O,L=new O,A=new O;function w(F){L.fromBufferAttribute(s,F),A.copy(L);const y=o[F];T.copy(y),T.sub(L.multiplyScalar(L.dot(y))).normalize(),S.crossVectors(A,y);const b=S.dot(c[F])<0?-1:1;a.setXYZW(F,T.x,T.y,T.z,b)}for(let F=0,y=D.length;F<y;++F){const v=D[F],b=v.start,q=v.count;for(let W=b,z=b+q;W<z;W+=3)w(e.getX(W+0)),w(e.getX(W+1)),w(e.getX(W+2))}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new on(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let m=0,h=i.count;m<h;m++)i.setXYZ(m,0,0,0);const s=new O,r=new O,a=new O,o=new O,c=new O,l=new O,u=new O,d=new O;if(e)for(let m=0,h=e.count;m<h;m+=3){const f=e.getX(m+0),g=e.getX(m+1),p=e.getX(m+2);s.fromBufferAttribute(n,f),r.fromBufferAttribute(n,g),a.fromBufferAttribute(n,p),u.subVectors(a,r),d.subVectors(s,r),u.cross(d),o.fromBufferAttribute(i,f),c.fromBufferAttribute(i,g),l.fromBufferAttribute(i,p),o.add(u),c.add(u),l.add(u),i.setXYZ(f,o.x,o.y,o.z),i.setXYZ(g,c.x,c.y,c.z),i.setXYZ(p,l.x,l.y,l.z)}else for(let m=0,h=n.count;m<h;m+=3)s.fromBufferAttribute(n,m+0),r.fromBufferAttribute(n,m+1),a.fromBufferAttribute(n,m+2),u.subVectors(a,r),d.subVectors(s,r),u.cross(d),i.setXYZ(m+0,u.x,u.y,u.z),i.setXYZ(m+1,u.x,u.y,u.z),i.setXYZ(m+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)Rt.fromBufferAttribute(e,n),Rt.normalize(),e.setXYZ(n,Rt.x,Rt.y,Rt.z)}toNonIndexed(){function e(o,c){const l=o.array,u=o.itemSize,d=o.normalized,m=new l.constructor(c.length*u);let h=0,f=0;for(let g=0,p=c.length;g<p;g++){o.isInterleavedBufferAttribute?h=c[g]*o.data.stride+o.offset:h=c[g]*u;for(let _=0;_<u;_++)m[f++]=l[h++]}return new on(m,u,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new vt,i=this.index.array,s=this.attributes;for(const o in s){const c=s[o],l=e(c,i);n.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const c=[],l=r[o];for(let u=0,d=l.length;u<d;u++){const m=l[u],h=e(m,i);c.push(h)}n.morphAttributes[o]=c}n.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];n.addGroup(l.start,l.count,l.materialIndex)}return n}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const c in i){const l=i[c];e.data.attributes[c]=l.toJSON(e.data)}const s={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let d=0,m=l.length;d<m;d++){const h=l[d];u.push(h.toJSON(e.data))}u.length>0&&(s[c]=u,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const s=e.attributes;for(const l in s){const u=s[l];this.setAttribute(l,u.clone(n))}const r=e.morphAttributes;for(const l in r){const u=[],d=r[l];for(let m=0,h=d.length;m<h;m++)u.push(d[m].clone(n));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let l=0,u=a.length;l<u;l++){const d=a[l];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const J2=new mt,hi=new dr,Br=new hr,W2=new O,zr=new O,Gr=new O,Hr=new O,yo=new O,kr=new O,Q2=new O,Vr=new O;class Nt extends zt{constructor(e=new vt,n=new kn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=n,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,n){const i=this.geometry,s=i.attributes.position,r=i.morphAttributes.position,a=i.morphTargetsRelative;n.fromBufferAttribute(s,e);const o=this.morphTargetInfluences;if(r&&o){kr.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const u=o[c],d=r[c];u!==0&&(yo.fromBufferAttribute(d,e),a?kr.addScaledVector(yo,u):kr.addScaledVector(yo.sub(n),u))}n.add(kr)}return n}raycast(e,n){const i=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Br.copy(i.boundingSphere),Br.applyMatrix4(r),hi.copy(e.ray).recast(e.near),!(Br.containsPoint(hi.origin)===!1&&(hi.intersectSphere(Br,W2)===null||hi.origin.distanceToSquared(W2)>(e.far-e.near)**2))&&(J2.copy(r).invert(),hi.copy(e.ray).applyMatrix4(J2),!(i.boundingBox!==null&&hi.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,n,hi)))}_computeIntersections(e,n,i){let s;const r=this.geometry,a=this.material,o=r.index,c=r.attributes.position,l=r.attributes.uv,u=r.attributes.uv1,d=r.attributes.normal,m=r.groups,h=r.drawRange;if(o!==null)if(Array.isArray(a))for(let f=0,g=m.length;f<g;f++){const p=m[f],_=a[p.materialIndex],D=Math.max(p.start,h.start),T=Math.min(o.count,Math.min(p.start+p.count,h.start+h.count));for(let S=D,L=T;S<L;S+=3){const A=o.getX(S),w=o.getX(S+1),F=o.getX(S+2);s=Jr(this,_,e,i,l,u,d,A,w,F),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,n.push(s))}}else{const f=Math.max(0,h.start),g=Math.min(o.count,h.start+h.count);for(let p=f,_=g;p<_;p+=3){const D=o.getX(p),T=o.getX(p+1),S=o.getX(p+2);s=Jr(this,a,e,i,l,u,d,D,T,S),s&&(s.faceIndex=Math.floor(p/3),n.push(s))}}else if(c!==void 0)if(Array.isArray(a))for(let f=0,g=m.length;f<g;f++){const p=m[f],_=a[p.materialIndex],D=Math.max(p.start,h.start),T=Math.min(c.count,Math.min(p.start+p.count,h.start+h.count));for(let S=D,L=T;S<L;S+=3){const A=S,w=S+1,F=S+2;s=Jr(this,_,e,i,l,u,d,A,w,F),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,n.push(s))}}else{const f=Math.max(0,h.start),g=Math.min(c.count,h.start+h.count);for(let p=f,_=g;p<_;p+=3){const D=p,T=p+1,S=p+2;s=Jr(this,a,e,i,l,u,d,D,T,S),s&&(s.faceIndex=Math.floor(p/3),n.push(s))}}}}function yc(t,e,n,i,s,r,a,o){let c;if(e.side===Ft?c=i.intersectTriangle(a,r,s,!0,o):c=i.intersectTriangle(s,r,a,e.side===ei,o),c===null)return null;Vr.copy(o),Vr.applyMatrix4(t.matrixWorld);const l=n.ray.origin.distanceTo(Vr);return l<n.near||l>n.far?null:{distance:l,point:Vr.clone(),object:t}}function Jr(t,e,n,i,s,r,a,o,c,l){t.getVertexPosition(o,zr),t.getVertexPosition(c,Gr),t.getVertexPosition(l,Hr);const u=yc(t,e,n,i,zr,Gr,Hr,Q2);if(u){const d=new O;an.getBarycoord(Q2,zr,Gr,Hr,d),s&&(u.uv=an.getInterpolatedAttribute(s,o,c,l,d,new Fe)),r&&(u.uv1=an.getInterpolatedAttribute(r,o,c,l,d,new Fe)),a&&(u.normal=an.getInterpolatedAttribute(a,o,c,l,d,new O),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const m={a:o,b:c,c:l,normal:new O,materialIndex:0};an.getNormal(zr,Gr,Hr,m.normal),u.face=m,u.barycoord=d}return u}class Os extends vt{constructor(e=1,n=1,i=1,s=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:s,heightSegments:r,depthSegments:a};const o=this;s=Math.floor(s),r=Math.floor(r),a=Math.floor(a);const c=[],l=[],u=[],d=[];let m=0,h=0;f("z","y","x",-1,-1,i,n,e,a,r,0),f("z","y","x",1,-1,i,n,-e,a,r,1),f("x","z","y",1,1,e,i,n,s,a,2),f("x","z","y",1,-1,e,i,-n,s,a,3),f("x","y","z",1,-1,e,n,i,s,r,4),f("x","y","z",-1,-1,e,n,-i,s,r,5),this.setIndex(c),this.setAttribute("position",new Wt(l,3)),this.setAttribute("normal",new Wt(u,3)),this.setAttribute("uv",new Wt(d,2));function f(g,p,_,D,T,S,L,A,w,F,y){const v=S/w,b=L/F,q=S/2,W=L/2,z=A/2,B=w+1,P=F+1;let J=0,R=0;const $=new O;for(let Z=0;Z<P;Z++){const se=Z*b-W;for(let ve=0;ve<B;ve++){const we=ve*v-q;$[g]=we*D,$[p]=se*T,$[_]=z,l.push($.x,$.y,$.z),$[g]=0,$[p]=0,$[_]=A>0?1:-1,u.push($.x,$.y,$.z),d.push(ve/w),d.push(1-Z/F),J+=1}}for(let Z=0;Z<F;Z++)for(let se=0;se<w;se++){const ve=m+se+B*Z,we=m+se+B*(Z+1),Q=m+(se+1)+B*(Z+1),te=m+(se+1)+B*Z;c.push(ve,we,te),c.push(we,Q,te),R+=6}o.addGroup(h,R,y),h+=R,m+=J}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Os(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Is(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const s=t[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function kt(t){const e={};for(let n=0;n<t.length;n++){const i=Is(t[n]);for(const s in i)e[s]=i[s]}return e}function Ec(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}function u5(t){const e=t.getRenderTarget();return e===null?t.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:et.workingColorSpace}const Dc={clone:Is,merge:kt};var Ac=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,bc=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Gn extends Pi{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Ac,this.fragmentShader=bc,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Is(e.uniforms),this.uniformsGroups=Ec(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?n.uniforms[s]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?n.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?n.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?n.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?n.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?n.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?n.uniforms[s]={type:"m4",value:a.toArray()}:n.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}class h5 extends zt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new mt,this.projectionMatrix=new mt,this.projectionMatrixInverse=new mt,this.coordinateSystem=Un}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const qn=new O,X2=new Fe,q2=new Fe;class rn extends h5{constructor(e=50,n=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=ar*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ks*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ar*2*Math.atan(Math.tan(Ks*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,n,i){qn.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(qn.x,qn.y).multiplyScalar(-e/qn.z),qn.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(qn.x,qn.y).multiplyScalar(-e/qn.z)}getViewSize(e,n){return this.getViewBounds(e,X2,q2),n.subVectors(q2,X2)}setViewOffset(e,n,i,s,r,a){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(Ks*.5*this.fov)/this.zoom,i=2*n,s=this.aspect*i,r=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;r+=a.offsetX*s/c,n-=a.offsetY*i/l,s*=a.width/c,i*=a.height/l}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,n,n-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}const Ms=-90,vs=1;class wc extends zt{constructor(e,n,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new rn(Ms,vs,e,n);s.layers=this.layers,this.add(s);const r=new rn(Ms,vs,e,n);r.layers=this.layers,this.add(r);const a=new rn(Ms,vs,e,n);a.layers=this.layers,this.add(a);const o=new rn(Ms,vs,e,n);o.layers=this.layers,this.add(o);const c=new rn(Ms,vs,e,n);c.layers=this.layers,this.add(c);const l=new rn(Ms,vs,e,n);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,n=this.children.concat(),[i,s,r,a,o,c]=n;for(const l of n)this.remove(l);if(e===Un)i.up.set(0,1,0),i.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===pa)i.up.set(0,-1,0),i.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of n)this.add(l),l.updateMatrixWorld()}update(e,n){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,c,l,u]=this.children,d=e.getRenderTarget(),m=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),f=e.xr.enabled;e.xr.enabled=!1;const g=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,s),e.render(n,r),e.setRenderTarget(i,1,s),e.render(n,a),e.setRenderTarget(i,2,s),e.render(n,o),e.setRenderTarget(i,3,s),e.render(n,c),e.setRenderTarget(i,4,s),e.render(n,l),i.texture.generateMipmaps=g,e.setRenderTarget(i,5,s),e.render(n,u),e.setRenderTarget(d,m,h),e.xr.enabled=f,i.texture.needsPMREMUpdate=!0}}class d5 extends Bt{constructor(e=[],n=Ls,i,s,r,a,o,c,l,u){super(e,n,i,s,r,a,o,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Cc extends Ai{constructor(e=1,n={}){super(e,e,n),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},s=[i,i,i,i,i,i];this.texture=new d5(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Sn}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new Os(5,5,5),r=new Gn({name:"CubemapFromEquirect",uniforms:Is(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Ft,blending:Zn});r.uniforms.tEquirect.value=n;const a=new Nt(s,r),o=n.minFilter;return n.minFilter===Ti&&(n.minFilter=Sn),new wc(1,10,this).update(e,a),n.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,n=!0,i=!0,s=!0){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(n,i,s);e.setRenderTarget(r)}}class St extends zt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Rc={type:"move"};class Eo{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new St,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new St,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new O,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new O),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new St,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new O,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new O),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const n=this._hand;if(n)for(const i of e.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let s=null,r=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(e&&n.session.visibilityState!=="visible-blurred"){if(l&&e.hand){a=!0;for(const g of e.hand.values()){const p=n.getJointPose(g,i),_=this._getHandJoint(l,g);p!==null&&(_.matrix.fromArray(p.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=p.radius),_.visible=p!==null}const u=l.joints["index-finger-tip"],d=l.joints["thumb-tip"],m=u.position.distanceTo(d.position),h=.02,f=.005;l.inputState.pinching&&m>h+f?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&m<=h-f&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=n.getPose(e.gripSpace,i),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(s=n.getPose(e.targetRaySpace,i),s===null&&r!==null&&(s=r),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Rc)))}return o!==null&&(o.visible=s!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=a!==null),this}_getHandJoint(e,n){if(e.joints[n.jointName]===void 0){const i=new St;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[n.jointName]=i,e.add(i)}return e.joints[n.jointName]}}class Lc extends zt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new zn,this.environmentIntensity=1,this.environmentRotation=new zn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(n.object.environmentIntensity=this.environmentIntensity),n.object.environmentRotation=this.environmentRotation.toArray(),n}}class Pc{constructor(e,n){this.isInterleavedBuffer=!0,this.array=e,this.stride=n,this.count=e!==void 0?e.length/n:0,this.usage=E1,this.updateRanges=[],this.version=0,this.uuid=On()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,n,i){e*=this.stride,i*=n.stride;for(let s=0,r=this.stride;s<r;s++)this.array[e+s]=n.array[i+s];return this}set(e,n=0){return this.array.set(e,n),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=On()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(n,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=On()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ht=new O;class ma{constructor(e,n,i,s=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=n,this.offset=i,this.normalized=s}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let n=0,i=this.data.count;n<i;n++)Ht.fromBufferAttribute(this,n),Ht.applyMatrix4(e),this.setXYZ(n,Ht.x,Ht.y,Ht.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)Ht.fromBufferAttribute(this,n),Ht.applyNormalMatrix(e),this.setXYZ(n,Ht.x,Ht.y,Ht.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)Ht.fromBufferAttribute(this,n),Ht.transformDirection(e),this.setXYZ(n,Ht.x,Ht.y,Ht.z);return this}getComponent(e,n){let i=this.array[e*this.data.stride+this.offset+n];return this.normalized&&(i=pn(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=at(i,this.array)),this.data.array[e*this.data.stride+this.offset+n]=i,this}setX(e,n){return this.normalized&&(n=at(n,this.array)),this.data.array[e*this.data.stride+this.offset]=n,this}setY(e,n){return this.normalized&&(n=at(n,this.array)),this.data.array[e*this.data.stride+this.offset+1]=n,this}setZ(e,n){return this.normalized&&(n=at(n,this.array)),this.data.array[e*this.data.stride+this.offset+2]=n,this}setW(e,n){return this.normalized&&(n=at(n,this.array)),this.data.array[e*this.data.stride+this.offset+3]=n,this}getX(e){let n=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(n=pn(n,this.array)),n}getY(e){let n=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(n=pn(n,this.array)),n}getZ(e){let n=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(n=pn(n,this.array)),n}getW(e){let n=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(n=pn(n,this.array)),n}setXY(e,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(n=at(n,this.array),i=at(i,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this}setXYZ(e,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(n=at(n,this.array),i=at(i,this.array),s=at(s,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=s,this}setXYZW(e,n,i,s,r){return e=e*this.data.stride+this.offset,this.normalized&&(n=at(n,this.array),i=at(i,this.array),s=at(s,this.array),r=at(r,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=s,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const s=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)n.push(this.data.array[s+r])}return new on(new this.array.constructor(n),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ma(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const s=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)n.push(this.data.array[s+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class f5 extends Pi{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new $e(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let xs;const Ws=new O,Ss=new O,Ts=new O,ys=new Fe,Qs=new Fe,p5=new mt,Wr=new O,Xs=new O,Qr=new O,$2=new Fe,Do=new Fe,Y2=new Fe;class Uc extends zt{constructor(e=new f5){if(super(),this.isSprite=!0,this.type="Sprite",xs===void 0){xs=new vt;const n=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Pc(n,5);xs.setIndex([0,1,2,0,2,3]),xs.setAttribute("position",new ma(i,3,0,!1)),xs.setAttribute("uv",new ma(i,2,3,!1))}this.geometry=xs,this.material=e,this.center=new Fe(.5,.5)}raycast(e,n){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ss.setFromMatrixScale(this.matrixWorld),p5.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ts.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ss.multiplyScalar(-Ts.z);const i=this.material.rotation;let s,r;i!==0&&(r=Math.cos(i),s=Math.sin(i));const a=this.center;Xr(Wr.set(-.5,-.5,0),Ts,a,Ss,s,r),Xr(Xs.set(.5,-.5,0),Ts,a,Ss,s,r),Xr(Qr.set(.5,.5,0),Ts,a,Ss,s,r),$2.set(0,0),Do.set(1,0),Y2.set(1,1);let o=e.ray.intersectTriangle(Wr,Xs,Qr,!1,Ws);if(o===null&&(Xr(Xs.set(-.5,.5,0),Ts,a,Ss,s,r),Do.set(0,1),o=e.ray.intersectTriangle(Wr,Qr,Xs,!1,Ws),o===null))return;const c=e.ray.origin.distanceTo(Ws);c<e.near||c>e.far||n.push({distance:c,point:Ws.clone(),uv:an.getInterpolation(Ws,Wr,Xs,Qr,$2,Do,Y2,new Fe),face:null,object:this})}copy(e,n){return super.copy(e,n),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Xr(t,e,n,i,s,r){ys.subVectors(t,n).addScalar(.5).multiply(i),s!==void 0?(Qs.x=r*ys.x-s*ys.y,Qs.y=s*ys.x+r*ys.y):Qs.copy(ys),t.copy(e),t.x+=Qs.x,t.y+=Qs.y,t.applyMatrix4(p5)}const Ao=new O,Ic=new O,Oc=new He;class Yn{constructor(e=new O(1,0,0),n=0){this.isPlane=!0,this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,s){return this.normal.set(e,n,i),this.constant=s,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const s=Ao.subVectors(i,n).cross(Ic.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,n){const i=e.delta(Ao),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:n.copy(e.start).addScaledVector(i,r)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||Oc.getNormalMatrix(e),s=this.coplanarPoint(Ao).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const di=new hr,qr=new O;class m5{constructor(e=new Yn,n=new Yn,i=new Yn,s=new Yn,r=new Yn,a=new Yn){this.planes=[e,n,i,s,r,a]}set(e,n,i,s,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(n),o[2].copy(i),o[3].copy(s),o[4].copy(r),o[5].copy(a),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,n=Un){const i=this.planes,s=e.elements,r=s[0],a=s[1],o=s[2],c=s[3],l=s[4],u=s[5],d=s[6],m=s[7],h=s[8],f=s[9],g=s[10],p=s[11],_=s[12],D=s[13],T=s[14],S=s[15];if(i[0].setComponents(c-r,m-l,p-h,S-_).normalize(),i[1].setComponents(c+r,m+l,p+h,S+_).normalize(),i[2].setComponents(c+a,m+u,p+f,S+D).normalize(),i[3].setComponents(c-a,m-u,p-f,S-D).normalize(),i[4].setComponents(c-o,m-d,p-g,S-T).normalize(),n===Un)i[5].setComponents(c+o,m+d,p+g,S+T).normalize();else if(n===pa)i[5].setComponents(o,d,g,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+n);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),di.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const n=e.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),di.copy(n.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(di)}intersectsSprite(e){return di.center.set(0,0,0),di.radius=.7071067811865476,di.applyMatrix4(e.matrixWorld),this.intersectsSphere(di)}intersectsSphere(e){const n=this.planes,i=e.center,s=-e.radius;for(let r=0;r<6;r++)if(n[r].distanceToPoint(i)<s)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const s=n[i];if(qr.x=s.normal.x>0?e.max.x:e.min.x,qr.y=s.normal.y>0?e.max.y:e.min.y,qr.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(qr)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class _n extends Pi{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new $e(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const ga=new O,_a=new O,j2=new mt,qs=new dr,$r=new hr,bo=new O,Z2=new O;class Tn extends zt{constructor(e=new vt,n=new _n){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=n,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[0];for(let s=1,r=n.count;s<r;s++)ga.fromBufferAttribute(n,s-1),_a.fromBufferAttribute(n,s),i[s]=i[s-1],i[s]+=ga.distanceTo(_a);e.setAttribute("lineDistance",new Wt(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,n){const i=this.geometry,s=this.matrixWorld,r=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),$r.copy(i.boundingSphere),$r.applyMatrix4(s),$r.radius+=r,e.ray.intersectsSphere($r)===!1)return;j2.copy(s).invert(),qs.copy(e.ray).applyMatrix4(j2);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=this.isLineSegments?2:1,u=i.index,m=i.attributes.position;if(u!==null){const h=Math.max(0,a.start),f=Math.min(u.count,a.start+a.count);for(let g=h,p=f-1;g<p;g+=l){const _=u.getX(g),D=u.getX(g+1),T=Yr(this,e,qs,c,_,D,g);T&&n.push(T)}if(this.isLineLoop){const g=u.getX(f-1),p=u.getX(h),_=Yr(this,e,qs,c,g,p,f-1);_&&n.push(_)}}else{const h=Math.max(0,a.start),f=Math.min(m.count,a.start+a.count);for(let g=h,p=f-1;g<p;g+=l){const _=Yr(this,e,qs,c,g,g+1,g);_&&n.push(_)}if(this.isLineLoop){const g=Yr(this,e,qs,c,f-1,h,f-1);g&&n.push(g)}}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function Yr(t,e,n,i,s,r,a){const o=t.geometry.attributes.position;if(ga.fromBufferAttribute(o,s),_a.fromBufferAttribute(o,r),n.distanceSqToSegment(ga,_a,bo,Z2)>i)return;bo.applyMatrix4(t.matrixWorld);const l=e.ray.origin.distanceTo(bo);if(!(l<e.near||l>e.far))return{distance:l,point:Z2.clone().applyMatrix4(t.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:t}}const K2=new O,e3=new O;class Nc extends Tn{constructor(e,n){super(e,n),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[];for(let s=0,r=n.count;s<r;s+=2)K2.fromBufferAttribute(n,s),e3.fromBufferAttribute(n,s+1),i[s]=s===0?0:i[s-1],i[s+1]=i[s]+K2.distanceTo(e3);e.setAttribute("lineDistance",new Wt(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Fc extends Pi{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new $e(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const t3=new mt,D1=new dr,jr=new hr,Zr=new O;class Bc extends zt{constructor(e=new vt,n=new Fc){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=n,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,n){const i=this.geometry,s=this.matrixWorld,r=e.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),jr.copy(i.boundingSphere),jr.applyMatrix4(s),jr.radius+=r,e.ray.intersectsSphere(jr)===!1)return;t3.copy(s).invert(),D1.copy(e.ray).applyMatrix4(t3);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=i.index,d=i.attributes.position;if(l!==null){const m=Math.max(0,a.start),h=Math.min(l.count,a.start+a.count);for(let f=m,g=h;f<g;f++){const p=l.getX(f);Zr.fromBufferAttribute(d,p),n3(Zr,p,c,s,e,n,this)}}else{const m=Math.max(0,a.start),h=Math.min(d.count,a.start+a.count);for(let f=m,g=h;f<g;f++)Zr.fromBufferAttribute(d,f),n3(Zr,f,c,s,e,n,this)}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const s=n[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function n3(t,e,n,i,s,r,a){const o=D1.distanceSqToPoint(t);if(o<n){const c=new O;D1.closestPointToPoint(t,c),c.applyMatrix4(i);const l=s.ray.origin.distanceTo(c);if(l<s.near||l>s.far)return;r.push({distance:l,distanceToRay:Math.sqrt(o),point:c,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class zc extends Bt{constructor(e,n,i,s,r,a,o,c,l){super(e,n,i,s,r,a,o,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class g5 extends Bt{constructor(e,n,i=Di,s,r,a,o=gn,c=gn,l,u=sr){if(u!==sr&&u!==rr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,s,r,a,o,c,u,i,l),this.isDepthTexture=!0,this.image={width:e,height:n},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new z1(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const n=super.toJSON(e);return this.compareFunction!==null&&(n.compareFunction=this.compareFunction),n}}class Sa extends vt{constructor(e=1,n=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:s};const r=e/2,a=n/2,o=Math.floor(i),c=Math.floor(s),l=o+1,u=c+1,d=e/o,m=n/c,h=[],f=[],g=[],p=[];for(let _=0;_<u;_++){const D=_*m-a;for(let T=0;T<l;T++){const S=T*d-r;f.push(S,-D,0),g.push(0,0,1),p.push(T/o),p.push(1-_/c)}}for(let _=0;_<c;_++)for(let D=0;D<o;D++){const T=D+l*_,S=D+l*(_+1),L=D+1+l*(_+1),A=D+1+l*_;h.push(T,S,A),h.push(S,L,A)}this.setIndex(h),this.setAttribute("position",new Wt(f,3)),this.setAttribute("normal",new Wt(g,3)),this.setAttribute("uv",new Wt(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Sa(e.width,e.height,e.widthSegments,e.heightSegments)}}class ti extends vt{constructor(e=1,n=32,i=16,s=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:s,phiLength:r,thetaStart:a,thetaLength:o},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const c=Math.min(a+o,Math.PI);let l=0;const u=[],d=new O,m=new O,h=[],f=[],g=[],p=[];for(let _=0;_<=i;_++){const D=[],T=_/i;let S=0;_===0&&a===0?S=.5/n:_===i&&c===Math.PI&&(S=-.5/n);for(let L=0;L<=n;L++){const A=L/n;d.x=-e*Math.cos(s+A*r)*Math.sin(a+T*o),d.y=e*Math.cos(a+T*o),d.z=e*Math.sin(s+A*r)*Math.sin(a+T*o),f.push(d.x,d.y,d.z),m.copy(d).normalize(),g.push(m.x,m.y,m.z),p.push(A+S,1-T),D.push(l++)}u.push(D)}for(let _=0;_<i;_++)for(let D=0;D<n;D++){const T=u[_][D+1],S=u[_][D],L=u[_+1][D],A=u[_+1][D+1];(_!==0||a>0)&&h.push(T,S,A),(_!==i-1||c<Math.PI)&&h.push(S,L,A)}this.setIndex(h),this.setAttribute("position",new Wt(f,3)),this.setAttribute("normal",new Wt(g,3)),this.setAttribute("uv",new Wt(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ti(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Gc extends Pi{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=R4,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Hc extends Pi{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const i3={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class kc{constructor(e,n,i){const s=this;let r=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.itemStart=function(u){o++,r===!1&&s.onStart!==void 0&&s.onStart(u,a,o),r=!0},this.itemEnd=function(u){a++,s.onProgress!==void 0&&s.onProgress(u,a,o),a===o&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(u){s.onError!==void 0&&s.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,d){return l.push(u,d),this},this.removeHandler=function(u){const d=l.indexOf(u);return d!==-1&&l.splice(d,2),this},this.getHandler=function(u){for(let d=0,m=l.length;d<m;d+=2){const h=l[d],f=l[d+1];if(h.global&&(h.lastIndex=0),h.test(u))return f}return null}}}const Vc=new kc;class H1{constructor(e){this.manager=e!==void 0?e:Vc,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(s,r){i.load(e,s,n,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}H1.DEFAULT_MATERIAL_NAME="__DEFAULT";class Jc extends H1{constructor(e){super(e)}load(e,n,i,s){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=i3.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){n&&n(a),r.manager.itemEnd(e)},0),a;const o=or("img");function c(){u(),i3.add(e,this),n&&n(this),r.manager.itemEnd(e)}function l(d){u(),s&&s(d),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class Wc extends H1{constructor(e){super(e)}load(e,n,i,s){const r=new Bt,a=new Jc(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,n!==void 0&&n(r)},i,s),r}}class Qc extends h5{constructor(e=-1,n=1,i=1,s=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=s,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,s,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=i-e,a=i+e,o=s+n,c=s-n;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,o-=u*this.view.offsetY,c=o-u*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}class Xc extends rn{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}const s3=new mt;class qc{constructor(e,n,i=0,s=1/0){this.ray=new dr(e,n),this.near=i,this.far=s,this.camera=null,this.layers=new G1,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,n){this.ray.set(e,n)}setFromCamera(e,n){n.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(n).sub(this.ray.origin).normalize(),this.camera=n):n.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(n.near+n.far)/(n.near-n.far)).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld),this.camera=n):console.error("THREE.Raycaster: Unsupported camera type: "+n.type)}setFromXRController(e){return s3.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(s3),this}intersectObject(e,n=!0,i=[]){return A1(e,this,i,n),i.sort(r3),i}intersectObjects(e,n=!0,i=[]){for(let s=0,r=e.length;s<r;s++)A1(e[s],this,i,n);return i.sort(r3),i}}function r3(t,e){return t.distance-e.distance}function A1(t,e,n,i){let s=!0;if(t.layers.test(e.layers)&&t.raycast(e,n)===!1&&(s=!1),s===!0&&i===!0){const r=t.children;for(let a=0,o=r.length;a<o;a++)A1(r[a],e,n,!0)}}class a3{constructor(e=1,n=0,i=0){this.radius=e,this.phi=n,this.theta=i}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Qe(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Qe(n/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class $c extends Li{constructor(e,n=null){super(),this.object=e,this.domElement=n,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function o3(t,e,n,i){const s=Yc(i);switch(n){case K3:return t*e;case t5:return t*e/s.components*s.byteLength;case I1:return t*e/s.components*s.byteLength;case n5:return t*e*2/s.components*s.byteLength;case O1:return t*e*2/s.components*s.byteLength;case e5:return t*e*3/s.components*s.byteLength;case mn:return t*e*4/s.components*s.byteLength;case N1:return t*e*4/s.components*s.byteLength;case ra:case aa:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case oa:case ca:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case Ko:case t1:return Math.max(t,16)*Math.max(e,8)/4;case Zo:case e1:return Math.max(t,8)*Math.max(e,8)/2;case n1:case i1:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case s1:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case r1:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case a1:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case o1:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case c1:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case l1:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case u1:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case h1:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case d1:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case f1:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case p1:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case m1:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case g1:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case _1:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case M1:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case la:case v1:case x1:return Math.ceil(t/4)*Math.ceil(e/4)*16;case i5:case S1:return Math.ceil(t/4)*Math.ceil(e/4)*8;case T1:case y1:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}function Yc(t){switch(t){case Bn:case Y3:return{byteLength:1,components:1};case nr:case j3:case lr:return{byteLength:2,components:1};case P1:case U1:return{byteLength:2,components:4};case Di:case L1:case Pn:return{byteLength:4,components:1};case Z3:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:R1}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=R1);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function _5(){let t=null,e=!1,n=null,i=null;function s(r,a){n(r,a),i=t.requestAnimationFrame(s)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(s),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){n=r},setContext:function(r){t=r}}}function jc(t){const e=new WeakMap;function n(o,c){const l=o.array,u=o.usage,d=l.byteLength,m=t.createBuffer();t.bindBuffer(c,m),t.bufferData(c,l,u),o.onUploadCallback();let h;if(l instanceof Float32Array)h=t.FLOAT;else if(l instanceof Uint16Array)o.isFloat16BufferAttribute?h=t.HALF_FLOAT:h=t.UNSIGNED_SHORT;else if(l instanceof Int16Array)h=t.SHORT;else if(l instanceof Uint32Array)h=t.UNSIGNED_INT;else if(l instanceof Int32Array)h=t.INT;else if(l instanceof Int8Array)h=t.BYTE;else if(l instanceof Uint8Array)h=t.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)h=t.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:m,type:h,bytesPerElement:l.BYTES_PER_ELEMENT,version:o.version,size:d}}function i(o,c,l){const u=c.array,d=c.updateRanges;if(t.bindBuffer(l,o),d.length===0)t.bufferSubData(l,0,u);else{d.sort((h,f)=>h.start-f.start);let m=0;for(let h=1;h<d.length;h++){const f=d[m],g=d[h];g.start<=f.start+f.count+1?f.count=Math.max(f.count,g.start+g.count-f.start):(++m,d[m]=g)}d.length=m+1;for(let h=0,f=d.length;h<f;h++){const g=d[h];t.bufferSubData(l,g.start*u.BYTES_PER_ELEMENT,u,g.start,g.count)}c.clearUpdateRanges()}c.onUploadCallback()}function s(o){return o.isInterleavedBufferAttribute&&(o=o.data),e.get(o)}function r(o){o.isInterleavedBufferAttribute&&(o=o.data);const c=e.get(o);c&&(t.deleteBuffer(c.buffer),e.delete(o))}function a(o,c){if(o.isInterleavedBufferAttribute&&(o=o.data),o.isGLBufferAttribute){const u=e.get(o);(!u||u.version<o.version)&&e.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}const l=e.get(o);if(l===void 0)e.set(o,n(o,c));else if(l.version<o.version){if(l.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(l.buffer,o,c),l.version=o.version}}return{get:s,remove:r,update:a}}var Zc=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,Kc=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,el=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,tl=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,nl=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,il=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,sl=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,rl=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,al=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,ol=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,cl=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,ll=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,ul=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,hl=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,dl=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,fl=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,pl=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,ml=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,gl=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,_l=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Ml=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,vl=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,xl=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Sl=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Tl=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,yl=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,El=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Dl=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Al=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,bl=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,wl="gl_FragColor = linearToOutputTexel( gl_FragColor );",Cl=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Rl=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Ll=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Pl=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ul=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Il=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Ol=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Nl=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Fl=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Bl=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,zl=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Gl=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Hl=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,kl=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Vl=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Jl=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Wl=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Ql=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Xl=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,ql=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,$l=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Yl=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,jl=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Zl=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Kl=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,e6=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,t6=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,n6=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,i6=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,s6=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,r6=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,a6=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,o6=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,c6=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,l6=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,u6=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,h6=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,d6=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,f6=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,p6=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,m6=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,g6=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,_6=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,M6=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,v6=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,x6=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,S6=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,T6=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,y6=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,E6=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,D6=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,A6=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,b6=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,w6=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,C6=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,R6=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,L6=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,P6=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,U6=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,I6=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,O6=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,N6=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,F6=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,B6=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,z6=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,G6=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,H6=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,k6=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,V6=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,J6=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,W6=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Q6=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,X6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,q6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,$6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Y6=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const j6=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Z6=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,K6=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,e9=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,t9=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,n9=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,i9=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,s9=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,r9=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,a9=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,o9=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,c9=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,l9=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,u9=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,h9=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,d9=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,f9=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,p9=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,m9=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,g9=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_9=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,M9=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,v9=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,x9=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,S9=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,T9=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,y9=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,E9=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,D9=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,A9=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,b9=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,w9=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,C9=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,R9=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ve={alphahash_fragment:Zc,alphahash_pars_fragment:Kc,alphamap_fragment:el,alphamap_pars_fragment:tl,alphatest_fragment:nl,alphatest_pars_fragment:il,aomap_fragment:sl,aomap_pars_fragment:rl,batching_pars_vertex:al,batching_vertex:ol,begin_vertex:cl,beginnormal_vertex:ll,bsdfs:ul,iridescence_fragment:hl,bumpmap_pars_fragment:dl,clipping_planes_fragment:fl,clipping_planes_pars_fragment:pl,clipping_planes_pars_vertex:ml,clipping_planes_vertex:gl,color_fragment:_l,color_pars_fragment:Ml,color_pars_vertex:vl,color_vertex:xl,common:Sl,cube_uv_reflection_fragment:Tl,defaultnormal_vertex:yl,displacementmap_pars_vertex:El,displacementmap_vertex:Dl,emissivemap_fragment:Al,emissivemap_pars_fragment:bl,colorspace_fragment:wl,colorspace_pars_fragment:Cl,envmap_fragment:Rl,envmap_common_pars_fragment:Ll,envmap_pars_fragment:Pl,envmap_pars_vertex:Ul,envmap_physical_pars_fragment:Jl,envmap_vertex:Il,fog_vertex:Ol,fog_pars_vertex:Nl,fog_fragment:Fl,fog_pars_fragment:Bl,gradientmap_pars_fragment:zl,lightmap_pars_fragment:Gl,lights_lambert_fragment:Hl,lights_lambert_pars_fragment:kl,lights_pars_begin:Vl,lights_toon_fragment:Wl,lights_toon_pars_fragment:Ql,lights_phong_fragment:Xl,lights_phong_pars_fragment:ql,lights_physical_fragment:$l,lights_physical_pars_fragment:Yl,lights_fragment_begin:jl,lights_fragment_maps:Zl,lights_fragment_end:Kl,logdepthbuf_fragment:e6,logdepthbuf_pars_fragment:t6,logdepthbuf_pars_vertex:n6,logdepthbuf_vertex:i6,map_fragment:s6,map_pars_fragment:r6,map_particle_fragment:a6,map_particle_pars_fragment:o6,metalnessmap_fragment:c6,metalnessmap_pars_fragment:l6,morphinstance_vertex:u6,morphcolor_vertex:h6,morphnormal_vertex:d6,morphtarget_pars_vertex:f6,morphtarget_vertex:p6,normal_fragment_begin:m6,normal_fragment_maps:g6,normal_pars_fragment:_6,normal_pars_vertex:M6,normal_vertex:v6,normalmap_pars_fragment:x6,clearcoat_normal_fragment_begin:S6,clearcoat_normal_fragment_maps:T6,clearcoat_pars_fragment:y6,iridescence_pars_fragment:E6,opaque_fragment:D6,packing:A6,premultiplied_alpha_fragment:b6,project_vertex:w6,dithering_fragment:C6,dithering_pars_fragment:R6,roughnessmap_fragment:L6,roughnessmap_pars_fragment:P6,shadowmap_pars_fragment:U6,shadowmap_pars_vertex:I6,shadowmap_vertex:O6,shadowmask_pars_fragment:N6,skinbase_vertex:F6,skinning_pars_vertex:B6,skinning_vertex:z6,skinnormal_vertex:G6,specularmap_fragment:H6,specularmap_pars_fragment:k6,tonemapping_fragment:V6,tonemapping_pars_fragment:J6,transmission_fragment:W6,transmission_pars_fragment:Q6,uv_pars_fragment:X6,uv_pars_vertex:q6,uv_vertex:$6,worldpos_vertex:Y6,background_vert:j6,background_frag:Z6,backgroundCube_vert:K6,backgroundCube_frag:e9,cube_vert:t9,cube_frag:n9,depth_vert:i9,depth_frag:s9,distanceRGBA_vert:r9,distanceRGBA_frag:a9,equirect_vert:o9,equirect_frag:c9,linedashed_vert:l9,linedashed_frag:u9,meshbasic_vert:h9,meshbasic_frag:d9,meshlambert_vert:f9,meshlambert_frag:p9,meshmatcap_vert:m9,meshmatcap_frag:g9,meshnormal_vert:_9,meshnormal_frag:M9,meshphong_vert:v9,meshphong_frag:x9,meshphysical_vert:S9,meshphysical_frag:T9,meshtoon_vert:y9,meshtoon_frag:E9,points_vert:D9,points_frag:A9,shadow_vert:b9,shadow_frag:w9,sprite_vert:C9,sprite_frag:R9},ae={common:{diffuse:{value:new $e(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new He},alphaMap:{value:null},alphaMapTransform:{value:new He},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new He}},envmap:{envMap:{value:null},envMapRotation:{value:new He},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new He}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new He}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new He},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new He},normalScale:{value:new Fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new He},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new He}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new He}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new He}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new $e(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new $e(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new He},alphaTest:{value:0},uvTransform:{value:new He}},sprite:{diffuse:{value:new $e(16777215)},opacity:{value:1},center:{value:new Fe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new He},alphaMap:{value:null},alphaMapTransform:{value:new He},alphaTest:{value:0}}},xn={basic:{uniforms:kt([ae.common,ae.specularmap,ae.envmap,ae.aomap,ae.lightmap,ae.fog]),vertexShader:Ve.meshbasic_vert,fragmentShader:Ve.meshbasic_frag},lambert:{uniforms:kt([ae.common,ae.specularmap,ae.envmap,ae.aomap,ae.lightmap,ae.emissivemap,ae.bumpmap,ae.normalmap,ae.displacementmap,ae.fog,ae.lights,{emissive:{value:new $e(0)}}]),vertexShader:Ve.meshlambert_vert,fragmentShader:Ve.meshlambert_frag},phong:{uniforms:kt([ae.common,ae.specularmap,ae.envmap,ae.aomap,ae.lightmap,ae.emissivemap,ae.bumpmap,ae.normalmap,ae.displacementmap,ae.fog,ae.lights,{emissive:{value:new $e(0)},specular:{value:new $e(1118481)},shininess:{value:30}}]),vertexShader:Ve.meshphong_vert,fragmentShader:Ve.meshphong_frag},standard:{uniforms:kt([ae.common,ae.envmap,ae.aomap,ae.lightmap,ae.emissivemap,ae.bumpmap,ae.normalmap,ae.displacementmap,ae.roughnessmap,ae.metalnessmap,ae.fog,ae.lights,{emissive:{value:new $e(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ve.meshphysical_vert,fragmentShader:Ve.meshphysical_frag},toon:{uniforms:kt([ae.common,ae.aomap,ae.lightmap,ae.emissivemap,ae.bumpmap,ae.normalmap,ae.displacementmap,ae.gradientmap,ae.fog,ae.lights,{emissive:{value:new $e(0)}}]),vertexShader:Ve.meshtoon_vert,fragmentShader:Ve.meshtoon_frag},matcap:{uniforms:kt([ae.common,ae.bumpmap,ae.normalmap,ae.displacementmap,ae.fog,{matcap:{value:null}}]),vertexShader:Ve.meshmatcap_vert,fragmentShader:Ve.meshmatcap_frag},points:{uniforms:kt([ae.points,ae.fog]),vertexShader:Ve.points_vert,fragmentShader:Ve.points_frag},dashed:{uniforms:kt([ae.common,ae.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ve.linedashed_vert,fragmentShader:Ve.linedashed_frag},depth:{uniforms:kt([ae.common,ae.displacementmap]),vertexShader:Ve.depth_vert,fragmentShader:Ve.depth_frag},normal:{uniforms:kt([ae.common,ae.bumpmap,ae.normalmap,ae.displacementmap,{opacity:{value:1}}]),vertexShader:Ve.meshnormal_vert,fragmentShader:Ve.meshnormal_frag},sprite:{uniforms:kt([ae.sprite,ae.fog]),vertexShader:Ve.sprite_vert,fragmentShader:Ve.sprite_frag},background:{uniforms:{uvTransform:{value:new He},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ve.background_vert,fragmentShader:Ve.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new He}},vertexShader:Ve.backgroundCube_vert,fragmentShader:Ve.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ve.cube_vert,fragmentShader:Ve.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ve.equirect_vert,fragmentShader:Ve.equirect_frag},distanceRGBA:{uniforms:kt([ae.common,ae.displacementmap,{referencePosition:{value:new O},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ve.distanceRGBA_vert,fragmentShader:Ve.distanceRGBA_frag},shadow:{uniforms:kt([ae.lights,ae.fog,{color:{value:new $e(0)},opacity:{value:1}}]),vertexShader:Ve.shadow_vert,fragmentShader:Ve.shadow_frag}};xn.physical={uniforms:kt([xn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new He},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new He},clearcoatNormalScale:{value:new Fe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new He},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new He},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new He},sheen:{value:0},sheenColor:{value:new $e(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new He},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new He},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new He},transmissionSamplerSize:{value:new Fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new He},attenuationDistance:{value:0},attenuationColor:{value:new $e(0)},specularColor:{value:new $e(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new He},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new He},anisotropyVector:{value:new Fe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new He}}]),vertexShader:Ve.meshphysical_vert,fragmentShader:Ve.meshphysical_frag};const Kr={r:0,b:0,g:0},fi=new zn,L9=new mt;function P9(t,e,n,i,s,r,a){const o=new $e(0);let c=r===!0?0:1,l,u,d=null,m=0,h=null;function f(T){let S=T.isScene===!0?T.background:null;return S&&S.isTexture&&(S=(T.backgroundBlurriness>0?n:e).get(S)),S}function g(T){let S=!1;const L=f(T);L===null?_(o,c):L&&L.isColor&&(_(L,1),S=!0);const A=t.xr.getEnvironmentBlendMode();A==="additive"?i.buffers.color.setClear(0,0,0,1,a):A==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,a),(t.autoClear||S)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))}function p(T,S){const L=f(S);L&&(L.isCubeTexture||L.mapping===xa)?(u===void 0&&(u=new Nt(new Os(1,1,1),new Gn({name:"BackgroundCubeMaterial",uniforms:Is(xn.backgroundCube.uniforms),vertexShader:xn.backgroundCube.vertexShader,fragmentShader:xn.backgroundCube.fragmentShader,side:Ft,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(A,w,F){this.matrixWorld.copyPosition(F.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(u)),fi.copy(S.backgroundRotation),fi.x*=-1,fi.y*=-1,fi.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(fi.y*=-1,fi.z*=-1),u.material.uniforms.envMap.value=L,u.material.uniforms.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=S.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=S.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(L9.makeRotationFromEuler(fi)),u.material.toneMapped=et.getTransfer(L.colorSpace)!==ot,(d!==L||m!==L.version||h!==t.toneMapping)&&(u.material.needsUpdate=!0,d=L,m=L.version,h=t.toneMapping),u.layers.enableAll(),T.unshift(u,u.geometry,u.material,0,0,null)):L&&L.isTexture&&(l===void 0&&(l=new Nt(new Sa(2,2),new Gn({name:"BackgroundMaterial",uniforms:Is(xn.background.uniforms),vertexShader:xn.background.vertexShader,fragmentShader:xn.background.fragmentShader,side:ei,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=L,l.material.uniforms.backgroundIntensity.value=S.backgroundIntensity,l.material.toneMapped=et.getTransfer(L.colorSpace)!==ot,L.matrixAutoUpdate===!0&&L.updateMatrix(),l.material.uniforms.uvTransform.value.copy(L.matrix),(d!==L||m!==L.version||h!==t.toneMapping)&&(l.material.needsUpdate=!0,d=L,m=L.version,h=t.toneMapping),l.layers.enableAll(),T.unshift(l,l.geometry,l.material,0,0,null))}function _(T,S){T.getRGB(Kr,u5(t)),i.buffers.color.setClear(Kr.r,Kr.g,Kr.b,S,a)}function D(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}return{getClearColor:function(){return o},setClearColor:function(T,S=1){o.set(T),c=S,_(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(T){c=T,_(o,c)},render:g,addToRenderList:p,dispose:D}}function U9(t,e){const n=t.getParameter(t.MAX_VERTEX_ATTRIBS),i={},s=m(null);let r=s,a=!1;function o(v,b,q,W,z){let B=!1;const P=d(W,q,b);r!==P&&(r=P,l(r.object)),B=h(v,W,q,z),B&&f(v,W,q,z),z!==null&&e.update(z,t.ELEMENT_ARRAY_BUFFER),(B||a)&&(a=!1,S(v,b,q,W),z!==null&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(z).buffer))}function c(){return t.createVertexArray()}function l(v){return t.bindVertexArray(v)}function u(v){return t.deleteVertexArray(v)}function d(v,b,q){const W=q.wireframe===!0;let z=i[v.id];z===void 0&&(z={},i[v.id]=z);let B=z[b.id];B===void 0&&(B={},z[b.id]=B);let P=B[W];return P===void 0&&(P=m(c()),B[W]=P),P}function m(v){const b=[],q=[],W=[];for(let z=0;z<n;z++)b[z]=0,q[z]=0,W[z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:q,attributeDivisors:W,object:v,attributes:{},index:null}}function h(v,b,q,W){const z=r.attributes,B=b.attributes;let P=0;const J=q.getAttributes();for(const R in J)if(J[R].location>=0){const Z=z[R];let se=B[R];if(se===void 0&&(R==="instanceMatrix"&&v.instanceMatrix&&(se=v.instanceMatrix),R==="instanceColor"&&v.instanceColor&&(se=v.instanceColor)),Z===void 0||Z.attribute!==se||se&&Z.data!==se.data)return!0;P++}return r.attributesNum!==P||r.index!==W}function f(v,b,q,W){const z={},B=b.attributes;let P=0;const J=q.getAttributes();for(const R in J)if(J[R].location>=0){let Z=B[R];Z===void 0&&(R==="instanceMatrix"&&v.instanceMatrix&&(Z=v.instanceMatrix),R==="instanceColor"&&v.instanceColor&&(Z=v.instanceColor));const se={};se.attribute=Z,Z&&Z.data&&(se.data=Z.data),z[R]=se,P++}r.attributes=z,r.attributesNum=P,r.index=W}function g(){const v=r.newAttributes;for(let b=0,q=v.length;b<q;b++)v[b]=0}function p(v){_(v,0)}function _(v,b){const q=r.newAttributes,W=r.enabledAttributes,z=r.attributeDivisors;q[v]=1,W[v]===0&&(t.enableVertexAttribArray(v),W[v]=1),z[v]!==b&&(t.vertexAttribDivisor(v,b),z[v]=b)}function D(){const v=r.newAttributes,b=r.enabledAttributes;for(let q=0,W=b.length;q<W;q++)b[q]!==v[q]&&(t.disableVertexAttribArray(q),b[q]=0)}function T(v,b,q,W,z,B,P){P===!0?t.vertexAttribIPointer(v,b,q,z,B):t.vertexAttribPointer(v,b,q,W,z,B)}function S(v,b,q,W){g();const z=W.attributes,B=q.getAttributes(),P=b.defaultAttributeValues;for(const J in B){const R=B[J];if(R.location>=0){let $=z[J];if($===void 0&&(J==="instanceMatrix"&&v.instanceMatrix&&($=v.instanceMatrix),J==="instanceColor"&&v.instanceColor&&($=v.instanceColor)),$!==void 0){const Z=$.normalized,se=$.itemSize,ve=e.get($);if(ve===void 0)continue;const we=ve.buffer,Q=ve.type,te=ve.bytesPerElement,pe=Q===t.INT||Q===t.UNSIGNED_INT||$.gpuType===L1;if($.isInterleavedBufferAttribute){const re=$.data,Te=re.stride,Je=$.offset;if(re.isInstancedInterleavedBuffer){for(let xe=0;xe<R.locationSize;xe++)_(R.location+xe,re.meshPerAttribute);v.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=re.meshPerAttribute*re.count)}else for(let xe=0;xe<R.locationSize;xe++)p(R.location+xe);t.bindBuffer(t.ARRAY_BUFFER,we);for(let xe=0;xe<R.locationSize;xe++)T(R.location+xe,se/R.locationSize,Q,Z,Te*te,(Je+se/R.locationSize*xe)*te,pe)}else{if($.isInstancedBufferAttribute){for(let re=0;re<R.locationSize;re++)_(R.location+re,$.meshPerAttribute);v.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=$.meshPerAttribute*$.count)}else for(let re=0;re<R.locationSize;re++)p(R.location+re);t.bindBuffer(t.ARRAY_BUFFER,we);for(let re=0;re<R.locationSize;re++)T(R.location+re,se/R.locationSize,Q,Z,se*te,se/R.locationSize*re*te,pe)}}else if(P!==void 0){const Z=P[J];if(Z!==void 0)switch(Z.length){case 2:t.vertexAttrib2fv(R.location,Z);break;case 3:t.vertexAttrib3fv(R.location,Z);break;case 4:t.vertexAttrib4fv(R.location,Z);break;default:t.vertexAttrib1fv(R.location,Z)}}}}D()}function L(){F();for(const v in i){const b=i[v];for(const q in b){const W=b[q];for(const z in W)u(W[z].object),delete W[z];delete b[q]}delete i[v]}}function A(v){if(i[v.id]===void 0)return;const b=i[v.id];for(const q in b){const W=b[q];for(const z in W)u(W[z].object),delete W[z];delete b[q]}delete i[v.id]}function w(v){for(const b in i){const q=i[b];if(q[v.id]===void 0)continue;const W=q[v.id];for(const z in W)u(W[z].object),delete W[z];delete q[v.id]}}function F(){y(),a=!0,r!==s&&(r=s,l(r.object))}function y(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:o,reset:F,resetDefaultState:y,dispose:L,releaseStatesOfGeometry:A,releaseStatesOfProgram:w,initAttributes:g,enableAttribute:p,disableUnusedAttributes:D}}function I9(t,e,n){let i;function s(l){i=l}function r(l,u){t.drawArrays(i,l,u),n.update(u,i,1)}function a(l,u,d){d!==0&&(t.drawArraysInstanced(i,l,u,d),n.update(u,i,d))}function o(l,u,d){if(d===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,l,0,u,0,d);let h=0;for(let f=0;f<d;f++)h+=u[f];n.update(h,i,1)}function c(l,u,d,m){if(d===0)return;const h=e.get("WEBGL_multi_draw");if(h===null)for(let f=0;f<l.length;f++)a(l[f],u[f],m[f]);else{h.multiDrawArraysInstancedWEBGL(i,l,0,u,0,m,0,d);let f=0;for(let g=0;g<d;g++)f+=u[g]*m[g];n.update(f,i,1)}}this.setMode=s,this.render=r,this.renderInstances=a,this.renderMultiDraw=o,this.renderMultiDrawInstances=c}function O9(t,e,n,i){let s;function r(){if(s!==void 0)return s;if(e.has("EXT_texture_filter_anisotropic")===!0){const w=e.get("EXT_texture_filter_anisotropic");s=t.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else s=0;return s}function a(w){return!(w!==mn&&i.convert(w)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT))}function o(w){const F=w===lr&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(w!==Bn&&i.convert(w)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&w!==Pn&&!F)}function c(w){if(w==="highp"){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";w="mediump"}return w==="mediump"&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=n.precision!==void 0?n.precision:"highp";const u=c(l);u!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",u,"instead."),l=u);const d=n.logarithmicDepthBuffer===!0,m=n.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),f=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),_=t.getParameter(t.MAX_VERTEX_ATTRIBS),D=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),T=t.getParameter(t.MAX_VARYING_VECTORS),S=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),L=f>0,A=t.getParameter(t.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:a,textureTypeReadable:o,precision:l,logarithmicDepthBuffer:d,reverseDepthBuffer:m,maxTextures:h,maxVertexTextures:f,maxTextureSize:g,maxCubemapSize:p,maxAttributes:_,maxVertexUniforms:D,maxVaryings:T,maxFragmentUniforms:S,vertexTextures:L,maxSamples:A}}function N9(t){const e=this;let n=null,i=0,s=!1,r=!1;const a=new Yn,o=new He,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(d,m){const h=d.length!==0||m||i!==0||s;return s=m,i=d.length,h},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(d,m){n=u(d,m,0)},this.setState=function(d,m,h){const f=d.clippingPlanes,g=d.clipIntersection,p=d.clipShadows,_=t.get(d);if(!s||f===null||f.length===0||r&&!p)r?u(null):l();else{const D=r?0:i,T=D*4;let S=_.clippingState||null;c.value=S,S=u(f,m,T,h);for(let L=0;L!==T;++L)S[L]=n[L];_.clippingState=S,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=D}};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(d,m,h,f){const g=d!==null?d.length:0;let p=null;if(g!==0){if(p=c.value,f!==!0||p===null){const _=h+g*4,D=m.matrixWorldInverse;o.getNormalMatrix(D),(p===null||p.length<_)&&(p=new Float32Array(_));for(let T=0,S=h;T!==g;++T,S+=4)a.copy(d[T]).applyMatrix4(D,o),a.normal.toArray(p,S),p[S+3]=a.constant}c.value=p,c.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,p}}function F9(t){let e=new WeakMap;function n(a,o){return o===qo?a.mapping=Ls:o===$o&&(a.mapping=Ps),a}function i(a){if(a&&a.isTexture){const o=a.mapping;if(o===qo||o===$o)if(e.has(a)){const c=e.get(a).texture;return n(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=new Cc(c.height);return l.fromEquirectangularTexture(t,a),e.set(a,l),a.addEventListener("dispose",s),n(l.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function r(){e=new WeakMap}return{get:i,dispose:r}}const As=4,c3=[.125,.215,.35,.446,.526,.582],xi=20,wo=new Qc,l3=new $e;let Co=null,Ro=0,Lo=0,Po=!1;const gi=(1+Math.sqrt(5))/2,Es=1/gi,u3=[new O(-gi,Es,0),new O(gi,Es,0),new O(-Es,0,gi),new O(Es,0,gi),new O(0,gi,-Es),new O(0,gi,Es),new O(-1,1,-1),new O(1,1,-1),new O(-1,1,1),new O(1,1,1)],B9=new O;class h3{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,s=100,r={}){const{size:a=256,position:o=B9}=r;Co=this._renderer.getRenderTarget(),Ro=this._renderer.getActiveCubeFace(),Lo=this._renderer.getActiveMipmapLevel(),Po=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,i,s,c,o),n>0&&this._blur(c,0,0,n),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=p3(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=f3(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Co,Ro,Lo),this._renderer.xr.enabled=Po,e.scissorTest=!1,ea(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===Ls||e.mapping===Ps?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Co=this._renderer.getRenderTarget(),Ro=this._renderer.getActiveCubeFace(),Lo=this._renderer.getActiveMipmapLevel(),Po=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:Sn,minFilter:Sn,generateMipmaps:!1,type:lr,format:mn,colorSpace:Us,depthBuffer:!1},s=d3(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=d3(e,n,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=z9(r)),this._blurMaterial=G9(r,e,n)}return s}_compileMaterial(e){const n=new Nt(this._lodPlanes[0],e);this._renderer.compile(n,wo)}_sceneToCubeUV(e,n,i,s,r){const c=new rn(90,1,n,i),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],d=this._renderer,m=d.autoClear,h=d.toneMapping;d.getClearColor(l3),d.toneMapping=Kn,d.autoClear=!1;const f=new kn({name:"PMREM.Background",side:Ft,depthWrite:!1,depthTest:!1}),g=new Nt(new Os,f);let p=!1;const _=e.background;_?_.isColor&&(f.color.copy(_),e.background=null,p=!0):(f.color.copy(l3),p=!0);for(let D=0;D<6;D++){const T=D%3;T===0?(c.up.set(0,l[D],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x+u[D],r.y,r.z)):T===1?(c.up.set(0,0,l[D]),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y+u[D],r.z)):(c.up.set(0,l[D],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y,r.z+u[D]));const S=this._cubeSize;ea(s,T*S,D>2?S:0,S,S),d.setRenderTarget(s),p&&d.render(g,c),d.render(e,c)}g.geometry.dispose(),g.material.dispose(),d.toneMapping=h,d.autoClear=m,e.background=_}_textureToCubeUV(e,n){const i=this._renderer,s=e.mapping===Ls||e.mapping===Ps;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=p3()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=f3());const r=s?this._cubemapMaterial:this._equirectMaterial,a=new Nt(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const c=this._cubeSize;ea(n,0,0,3*c,2*c),i.setRenderTarget(n),i.render(a,wo)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;const s=this._lodPlanes.length;for(let r=1;r<s;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=u3[(s-r-1)%u3.length];this._blur(e,r-1,r,a,o)}n.autoClear=i}_blur(e,n,i,s,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,n,i,s,"latitudinal",r),this._halfBlur(a,e,i,i,s,"longitudinal",r)}_halfBlur(e,n,i,s,r,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,d=new Nt(this._lodPlanes[s],l),m=l.uniforms,h=this._sizeLods[i]-1,f=isFinite(r)?Math.PI/(2*h):2*Math.PI/(2*xi-1),g=r/f,p=isFinite(r)?1+Math.floor(u*g):xi;p>xi&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${xi}`);const _=[];let D=0;for(let w=0;w<xi;++w){const F=w/g,y=Math.exp(-F*F/2);_.push(y),w===0?D+=y:w<p&&(D+=2*y)}for(let w=0;w<_.length;w++)_[w]=_[w]/D;m.envMap.value=e.texture,m.samples.value=p,m.weights.value=_,m.latitudinal.value=a==="latitudinal",o&&(m.poleAxis.value=o);const{_lodMax:T}=this;m.dTheta.value=f,m.mipInt.value=T-i;const S=this._sizeLods[s],L=3*S*(s>T-As?s-T+As:0),A=4*(this._cubeSize-S);ea(n,L,A,3*S,2*S),c.setRenderTarget(n),c.render(d,wo)}}function z9(t){const e=[],n=[],i=[];let s=t;const r=t-As+1+c3.length;for(let a=0;a<r;a++){const o=Math.pow(2,s);n.push(o);let c=1/o;a>t-As?c=c3[a-t+As-1]:a===0&&(c=0),i.push(c);const l=1/(o-2),u=-l,d=1+l,m=[u,u,d,u,d,d,u,u,d,d,u,d],h=6,f=6,g=3,p=2,_=1,D=new Float32Array(g*f*h),T=new Float32Array(p*f*h),S=new Float32Array(_*f*h);for(let A=0;A<h;A++){const w=A%3*2/3-1,F=A>2?0:-1,y=[w,F,0,w+2/3,F,0,w+2/3,F+1,0,w,F,0,w+2/3,F+1,0,w,F+1,0];D.set(y,g*f*A),T.set(m,p*f*A);const v=[A,A,A,A,A,A];S.set(v,_*f*A)}const L=new vt;L.setAttribute("position",new on(D,g)),L.setAttribute("uv",new on(T,p)),L.setAttribute("faceIndex",new on(S,_)),e.push(L),s>As&&s--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function d3(t,e,n){const i=new Ai(t,e,n);return i.texture.mapping=xa,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function ea(t,e,n,i,s){t.viewport.set(e,n,i,s),t.scissor.set(e,n,i,s)}function G9(t,e,n){const i=new Float32Array(xi),s=new O(0,1,0);return new Gn({name:"SphericalGaussianBlur",defines:{n:xi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:k1(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Zn,depthTest:!1,depthWrite:!1})}function f3(){return new Gn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:k1(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Zn,depthTest:!1,depthWrite:!1})}function p3(){return new Gn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:k1(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Zn,depthTest:!1,depthWrite:!1})}function k1(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function H9(t){let e=new WeakMap,n=null;function i(o){if(o&&o.isTexture){const c=o.mapping,l=c===qo||c===$o,u=c===Ls||c===Ps;if(l||u){let d=e.get(o);const m=d!==void 0?d.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==m)return n===null&&(n=new h3(t)),d=l?n.fromEquirectangular(o,d):n.fromCubemap(o,d),d.texture.pmremVersion=o.pmremVersion,e.set(o,d),d.texture;if(d!==void 0)return d.texture;{const h=o.image;return l&&h&&h.height>0||u&&h&&s(h)?(n===null&&(n=new h3(t)),d=l?n.fromEquirectangular(o):n.fromCubemap(o),d.texture.pmremVersion=o.pmremVersion,e.set(o,d),o.addEventListener("dispose",r),d.texture):null}}}return o}function s(o){let c=0;const l=6;for(let u=0;u<l;u++)o[u]!==void 0&&c++;return c===l}function r(o){const c=o.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function a(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:a}}function k9(t){const e={};function n(i){if(e[i]!==void 0)return e[i];let s;switch(i){case"WEBGL_depth_texture":s=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=t.getExtension(i)}return e[i]=s,s}return{has:function(i){return n(i)!==null},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(i){const s=n(i);return s===null&&ua("THREE.WebGLRenderer: "+i+" extension not supported."),s}}}function V9(t,e,n,i){const s={},r=new WeakMap;function a(d){const m=d.target;m.index!==null&&e.remove(m.index);for(const f in m.attributes)e.remove(m.attributes[f]);m.removeEventListener("dispose",a),delete s[m.id];const h=r.get(m);h&&(e.remove(h),r.delete(m)),i.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,n.memory.geometries--}function o(d,m){return s[m.id]===!0||(m.addEventListener("dispose",a),s[m.id]=!0,n.memory.geometries++),m}function c(d){const m=d.attributes;for(const h in m)e.update(m[h],t.ARRAY_BUFFER)}function l(d){const m=[],h=d.index,f=d.attributes.position;let g=0;if(h!==null){const D=h.array;g=h.version;for(let T=0,S=D.length;T<S;T+=3){const L=D[T+0],A=D[T+1],w=D[T+2];m.push(L,A,A,w,w,L)}}else if(f!==void 0){const D=f.array;g=f.version;for(let T=0,S=D.length/3-1;T<S;T+=3){const L=T+0,A=T+1,w=T+2;m.push(L,A,A,w,w,L)}}else return;const p=new(r5(m)?l5:c5)(m,1);p.version=g;const _=r.get(d);_&&e.remove(_),r.set(d,p)}function u(d){const m=r.get(d);if(m){const h=d.index;h!==null&&m.version<h.version&&l(d)}else l(d);return r.get(d)}return{get:o,update:c,getWireframeAttribute:u}}function J9(t,e,n){let i;function s(m){i=m}let r,a;function o(m){r=m.type,a=m.bytesPerElement}function c(m,h){t.drawElements(i,h,r,m*a),n.update(h,i,1)}function l(m,h,f){f!==0&&(t.drawElementsInstanced(i,h,r,m*a,f),n.update(h,i,f))}function u(m,h,f){if(f===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,h,0,r,m,0,f);let p=0;for(let _=0;_<f;_++)p+=h[_];n.update(p,i,1)}function d(m,h,f,g){if(f===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let _=0;_<m.length;_++)l(m[_]/a,h[_],g[_]);else{p.multiDrawElementsInstancedWEBGL(i,h,0,r,m,0,g,0,f);let _=0;for(let D=0;D<f;D++)_+=h[D]*g[D];n.update(_,i,1)}}this.setMode=s,this.setIndex=o,this.render=c,this.renderInstances=l,this.renderMultiDraw=u,this.renderMultiDrawInstances=d}function W9(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(r,a,o){switch(n.calls++,a){case t.TRIANGLES:n.triangles+=o*(r/3);break;case t.LINES:n.lines+=o*(r/2);break;case t.LINE_STRIP:n.lines+=o*(r-1);break;case t.LINE_LOOP:n.lines+=o*r;break;case t.POINTS:n.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:s,update:i}}function Q9(t,e,n){const i=new WeakMap,s=new xt;function r(a,o,c){const l=a.morphTargetInfluences,u=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,d=u!==void 0?u.length:0;let m=i.get(o);if(m===void 0||m.count!==d){let y=function(){w.dispose(),i.delete(o),o.removeEventListener("dispose",y)};m!==void 0&&m.texture.dispose();const h=o.morphAttributes.position!==void 0,f=o.morphAttributes.normal!==void 0,g=o.morphAttributes.color!==void 0,p=o.morphAttributes.position||[],_=o.morphAttributes.normal||[],D=o.morphAttributes.color||[];let T=0;h===!0&&(T=1),f===!0&&(T=2),g===!0&&(T=3);let S=o.attributes.position.count*T,L=1;S>e.maxTextureSize&&(L=Math.ceil(S/e.maxTextureSize),S=e.maxTextureSize);const A=new Float32Array(S*L*4*d),w=new a5(A,S,L,d);w.type=Pn,w.needsUpdate=!0;const F=T*4;for(let v=0;v<d;v++){const b=p[v],q=_[v],W=D[v],z=S*L*4*v;for(let B=0;B<b.count;B++){const P=B*F;h===!0&&(s.fromBufferAttribute(b,B),A[z+P+0]=s.x,A[z+P+1]=s.y,A[z+P+2]=s.z,A[z+P+3]=0),f===!0&&(s.fromBufferAttribute(q,B),A[z+P+4]=s.x,A[z+P+5]=s.y,A[z+P+6]=s.z,A[z+P+7]=0),g===!0&&(s.fromBufferAttribute(W,B),A[z+P+8]=s.x,A[z+P+9]=s.y,A[z+P+10]=s.z,A[z+P+11]=W.itemSize===4?s.w:1)}}m={count:d,texture:w,size:new Fe(S,L)},i.set(o,m),o.addEventListener("dispose",y)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)c.getUniforms().setValue(t,"morphTexture",a.morphTexture,n);else{let h=0;for(let g=0;g<l.length;g++)h+=l[g];const f=o.morphTargetsRelative?1:1-h;c.getUniforms().setValue(t,"morphTargetBaseInfluence",f),c.getUniforms().setValue(t,"morphTargetInfluences",l)}c.getUniforms().setValue(t,"morphTargetsTexture",m.texture,n),c.getUniforms().setValue(t,"morphTargetsTextureSize",m.size)}return{update:r}}function X9(t,e,n,i){let s=new WeakMap;function r(c){const l=i.render.frame,u=c.geometry,d=e.get(c,u);if(s.get(d)!==l&&(e.update(d),s.set(d,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),s.get(c)!==l&&(n.update(c.instanceMatrix,t.ARRAY_BUFFER),c.instanceColor!==null&&n.update(c.instanceColor,t.ARRAY_BUFFER),s.set(c,l))),c.isSkinnedMesh){const m=c.skeleton;s.get(m)!==l&&(m.update(),s.set(m,l))}return d}function a(){s=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),n.remove(l.instanceMatrix),l.instanceColor!==null&&n.remove(l.instanceColor)}return{update:r,dispose:a}}const M5=new Bt,m3=new g5(1,1),v5=new a5,x5=new dc,S5=new d5,g3=[],_3=[],M3=new Float32Array(16),v3=new Float32Array(9),x3=new Float32Array(4);function Ns(t,e,n){const i=t[0];if(i<=0||i>0)return t;const s=e*n;let r=g3[s];if(r===void 0&&(r=new Float32Array(s),g3[s]=r),e!==0){i.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=n,t[a].toArray(r,o)}return r}function wt(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Ct(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Ta(t,e){let n=_3[e];n===void 0&&(n=new Int32Array(e),_3[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function q9(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function $9(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(wt(n,e))return;t.uniform2fv(this.addr,e),Ct(n,e)}}function Y9(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(wt(n,e))return;t.uniform3fv(this.addr,e),Ct(n,e)}}function j9(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(wt(n,e))return;t.uniform4fv(this.addr,e),Ct(n,e)}}function Z9(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(wt(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Ct(n,e)}else{if(wt(n,i))return;x3.set(i),t.uniformMatrix2fv(this.addr,!1,x3),Ct(n,i)}}function K9(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(wt(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Ct(n,e)}else{if(wt(n,i))return;v3.set(i),t.uniformMatrix3fv(this.addr,!1,v3),Ct(n,i)}}function e7(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(wt(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Ct(n,e)}else{if(wt(n,i))return;M3.set(i),t.uniformMatrix4fv(this.addr,!1,M3),Ct(n,i)}}function t7(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function n7(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(wt(n,e))return;t.uniform2iv(this.addr,e),Ct(n,e)}}function i7(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(wt(n,e))return;t.uniform3iv(this.addr,e),Ct(n,e)}}function s7(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(wt(n,e))return;t.uniform4iv(this.addr,e),Ct(n,e)}}function r7(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function a7(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(wt(n,e))return;t.uniform2uiv(this.addr,e),Ct(n,e)}}function o7(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(wt(n,e))return;t.uniform3uiv(this.addr,e),Ct(n,e)}}function c7(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(wt(n,e))return;t.uniform4uiv(this.addr,e),Ct(n,e)}}function l7(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s);let r;this.type===t.SAMPLER_2D_SHADOW?(m3.compareFunction=s5,r=m3):r=M5,n.setTexture2D(e||r,s)}function u7(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||x5,s)}function h7(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(e||S5,s)}function d7(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||v5,s)}function f7(t){switch(t){case 5126:return q9;case 35664:return $9;case 35665:return Y9;case 35666:return j9;case 35674:return Z9;case 35675:return K9;case 35676:return e7;case 5124:case 35670:return t7;case 35667:case 35671:return n7;case 35668:case 35672:return i7;case 35669:case 35673:return s7;case 5125:return r7;case 36294:return a7;case 36295:return o7;case 36296:return c7;case 35678:case 36198:case 36298:case 36306:case 35682:return l7;case 35679:case 36299:case 36307:return u7;case 35680:case 36300:case 36308:case 36293:return h7;case 36289:case 36303:case 36311:case 36292:return d7}}function p7(t,e){t.uniform1fv(this.addr,e)}function m7(t,e){const n=Ns(e,this.size,2);t.uniform2fv(this.addr,n)}function g7(t,e){const n=Ns(e,this.size,3);t.uniform3fv(this.addr,n)}function _7(t,e){const n=Ns(e,this.size,4);t.uniform4fv(this.addr,n)}function M7(t,e){const n=Ns(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function v7(t,e){const n=Ns(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function x7(t,e){const n=Ns(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function S7(t,e){t.uniform1iv(this.addr,e)}function T7(t,e){t.uniform2iv(this.addr,e)}function y7(t,e){t.uniform3iv(this.addr,e)}function E7(t,e){t.uniform4iv(this.addr,e)}function D7(t,e){t.uniform1uiv(this.addr,e)}function A7(t,e){t.uniform2uiv(this.addr,e)}function b7(t,e){t.uniform3uiv(this.addr,e)}function w7(t,e){t.uniform4uiv(this.addr,e)}function C7(t,e,n){const i=this.cache,s=e.length,r=Ta(n,s);wt(i,r)||(t.uniform1iv(this.addr,r),Ct(i,r));for(let a=0;a!==s;++a)n.setTexture2D(e[a]||M5,r[a])}function R7(t,e,n){const i=this.cache,s=e.length,r=Ta(n,s);wt(i,r)||(t.uniform1iv(this.addr,r),Ct(i,r));for(let a=0;a!==s;++a)n.setTexture3D(e[a]||x5,r[a])}function L7(t,e,n){const i=this.cache,s=e.length,r=Ta(n,s);wt(i,r)||(t.uniform1iv(this.addr,r),Ct(i,r));for(let a=0;a!==s;++a)n.setTextureCube(e[a]||S5,r[a])}function P7(t,e,n){const i=this.cache,s=e.length,r=Ta(n,s);wt(i,r)||(t.uniform1iv(this.addr,r),Ct(i,r));for(let a=0;a!==s;++a)n.setTexture2DArray(e[a]||v5,r[a])}function U7(t){switch(t){case 5126:return p7;case 35664:return m7;case 35665:return g7;case 35666:return _7;case 35674:return M7;case 35675:return v7;case 35676:return x7;case 5124:case 35670:return S7;case 35667:case 35671:return T7;case 35668:case 35672:return y7;case 35669:case 35673:return E7;case 5125:return D7;case 36294:return A7;case 36295:return b7;case 36296:return w7;case 35678:case 36198:case 36298:case 36306:case 35682:return C7;case 35679:case 36299:case 36307:return R7;case 35680:case 36300:case 36308:case 36293:return L7;case 36289:case 36303:case 36311:case 36292:return P7}}class I7{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.setValue=f7(n.type)}}class O7{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.size=n.size,this.setValue=U7(n.type)}}class N7{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,n,i){const s=this.seq;for(let r=0,a=s.length;r!==a;++r){const o=s[r];o.setValue(e,n[o.id],i)}}}const Uo=/(\w+)(\])?(\[|\.)?/g;function S3(t,e){t.seq.push(e),t.map[e.id]=e}function F7(t,e,n){const i=t.name,s=i.length;for(Uo.lastIndex=0;;){const r=Uo.exec(i),a=Uo.lastIndex;let o=r[1];const c=r[2]==="]",l=r[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===s){S3(n,l===void 0?new I7(o,t,e):new O7(o,t,e));break}else{let d=n.map[o];d===void 0&&(d=new N7(o),S3(n,d)),n=d}}}class ha{constructor(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(let s=0;s<i;++s){const r=e.getActiveUniform(n,s),a=e.getUniformLocation(n,r.name);F7(r,a,this)}}setValue(e,n,i,s){const r=this.map[n];r!==void 0&&r.setValue(e,i,s)}setOptional(e,n,i){const s=n[i];s!==void 0&&this.setValue(e,i,s)}static upload(e,n,i,s){for(let r=0,a=n.length;r!==a;++r){const o=n[r],c=i[o.id];c.needsUpdate!==!1&&o.setValue(e,c.value,s)}}static seqWithValue(e,n){const i=[];for(let s=0,r=e.length;s!==r;++s){const a=e[s];a.id in n&&i.push(a)}return i}}function T3(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}const B7=37297;let z7=0;function G7(t,e){const n=t.split(`
`),i=[],s=Math.max(e-6,0),r=Math.min(e+6,n.length);for(let a=s;a<r;a++){const o=a+1;i.push(`${o===e?">":" "} ${o}: ${n[a]}`)}return i.join(`
`)}const y3=new He;function H7(t){et._getMatrix(y3,et.workingColorSpace,t);const e=`mat3( ${y3.elements.map(n=>n.toFixed(4))} )`;switch(et.getTransfer(t)){case fa:return[e,"LinearTransferOETF"];case ot:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",t),[e,"LinearTransferOETF"]}}function E3(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),s=t.getShaderInfoLog(e).trim();if(i&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const a=parseInt(r[1]);return n.toUpperCase()+`

`+s+`

`+G7(t.getShaderSource(e),a)}else return s}function k7(t,e){const n=H7(e);return[`vec4 ${t}( vec4 value ) {`,`	return ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join(`
`)}function V7(t,e){let n;switch(e){case T4:n="Linear";break;case y4:n="Reinhard";break;case E4:n="Cineon";break;case D4:n="ACESFilmic";break;case b4:n="AgX";break;case w4:n="Neutral";break;case A4:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const ta=new O;function J7(){et.getLuminanceCoefficients(ta);const t=ta.x.toFixed(4),e=ta.y.toFixed(4),n=ta.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${t}, ${e}, ${n} );`,"	return dot( weights, rgb );","}"].join(`
`)}function W7(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Zs).join(`
`)}function Q7(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function X7(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let s=0;s<i;s++){const r=t.getActiveAttrib(e,s),a=r.name;let o=1;r.type===t.FLOAT_MAT2&&(o=2),r.type===t.FLOAT_MAT3&&(o=3),r.type===t.FLOAT_MAT4&&(o=4),n[a]={type:r.type,location:t.getAttribLocation(e,a),locationSize:o}}return n}function Zs(t){return t!==""}function D3(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function A3(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const q7=/^[ \t]*#include +<([\w\d./]+)>/gm;function b1(t){return t.replace(q7,Y7)}const $7=new Map;function Y7(t,e){let n=Ve[e];if(n===void 0){const i=$7.get(e);if(i!==void 0)n=Ve[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return b1(n)}const j7=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function b3(t){return t.replace(j7,Z7)}function Z7(t,e,n,i){let s="";for(let r=parseInt(e);r<parseInt(n);r++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function w3(t){let e=`precision ${t.precision} float;
	precision ${t.precision} int;
	precision ${t.precision} sampler2D;
	precision ${t.precision} samplerCube;
	precision ${t.precision} sampler3D;
	precision ${t.precision} sampler2DArray;
	precision ${t.precision} sampler2DShadow;
	precision ${t.precision} samplerCubeShadow;
	precision ${t.precision} sampler2DArrayShadow;
	precision ${t.precision} isampler2D;
	precision ${t.precision} isampler3D;
	precision ${t.precision} isamplerCube;
	precision ${t.precision} isampler2DArray;
	precision ${t.precision} usampler2D;
	precision ${t.precision} usampler3D;
	precision ${t.precision} usamplerCube;
	precision ${t.precision} usampler2DArray;
	`;return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function K7(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===X3?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===t4?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===Rn&&(e="SHADOWMAP_TYPE_VSM"),e}function eu(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Ls:case Ps:e="ENVMAP_TYPE_CUBE";break;case xa:e="ENVMAP_TYPE_CUBE_UV";break}return e}function tu(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Ps:e="ENVMAP_MODE_REFRACTION";break}return e}function nu(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case q3:e="ENVMAP_BLENDING_MULTIPLY";break;case x4:e="ENVMAP_BLENDING_MIX";break;case S4:e="ENVMAP_BLENDING_ADD";break}return e}function iu(t){const e=t.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function su(t,e,n,i){const s=t.getContext(),r=n.defines;let a=n.vertexShader,o=n.fragmentShader;const c=K7(n),l=eu(n),u=tu(n),d=nu(n),m=iu(n),h=W7(n),f=Q7(r),g=s.createProgram();let p,_,D=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(p=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(Zs).join(`
`),p.length>0&&(p+=`
`),_=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(Zs).join(`
`),_.length>0&&(_+=`
`)):(p=[w3(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Zs).join(`
`),_=[w3(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+u:"",n.envMap?"#define "+d:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Kn?"#define TONE_MAPPING":"",n.toneMapping!==Kn?Ve.tonemapping_pars_fragment:"",n.toneMapping!==Kn?V7("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Ve.colorspace_pars_fragment,k7("linearToOutputTexel",n.outputColorSpace),J7(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Zs).join(`
`)),a=b1(a),a=D3(a,n),a=A3(a,n),o=b1(o),o=D3(o,n),o=A3(o,n),a=b3(a),o=b3(o),n.isRawShaderMaterial!==!0&&(D=`#version 300 es
`,p=[h,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,_=["#define varying in",n.glslVersion===R2?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===R2?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const T=D+p+a,S=D+_+o,L=T3(s,s.VERTEX_SHADER,T),A=T3(s,s.FRAGMENT_SHADER,S);s.attachShader(g,L),s.attachShader(g,A),n.index0AttributeName!==void 0?s.bindAttribLocation(g,0,n.index0AttributeName):n.morphTargets===!0&&s.bindAttribLocation(g,0,"position"),s.linkProgram(g);function w(b){if(t.debug.checkShaderErrors){const q=s.getProgramInfoLog(g).trim(),W=s.getShaderInfoLog(L).trim(),z=s.getShaderInfoLog(A).trim();let B=!0,P=!0;if(s.getProgramParameter(g,s.LINK_STATUS)===!1)if(B=!1,typeof t.debug.onShaderError=="function")t.debug.onShaderError(s,g,L,A);else{const J=E3(s,L,"vertex"),R=E3(s,A,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(g,s.VALIDATE_STATUS)+`

Material Name: `+b.name+`
Material Type: `+b.type+`

Program Info Log: `+q+`
`+J+`
`+R)}else q!==""?console.warn("THREE.WebGLProgram: Program Info Log:",q):(W===""||z==="")&&(P=!1);P&&(b.diagnostics={runnable:B,programLog:q,vertexShader:{log:W,prefix:p},fragmentShader:{log:z,prefix:_}})}s.deleteShader(L),s.deleteShader(A),F=new ha(s,g),y=X7(s,g)}let F;this.getUniforms=function(){return F===void 0&&w(this),F};let y;this.getAttributes=function(){return y===void 0&&w(this),y};let v=n.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return v===!1&&(v=s.getProgramParameter(g,B7)),v},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(g),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=z7++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=L,this.fragmentShader=A,this}let ru=0;class au{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,s=this._getShaderStage(n),r=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;let i=n.get(e);return i===void 0&&(i=new Set,n.set(e,i)),i}_getShaderStage(e){const n=this.shaderCache;let i=n.get(e);return i===void 0&&(i=new ou(e),n.set(e,i)),i}}class ou{constructor(e){this.id=ru++,this.code=e,this.usedTimes=0}}function cu(t,e,n,i,s,r,a){const o=new G1,c=new au,l=new Set,u=[],d=s.logarithmicDepthBuffer,m=s.vertexTextures;let h=s.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(y){return l.add(y),y===0?"uv":`uv${y}`}function p(y,v,b,q,W){const z=q.fog,B=W.geometry,P=y.isMeshStandardMaterial?q.environment:null,J=(y.isMeshStandardMaterial?n:e).get(y.envMap||P),R=J&&J.mapping===xa?J.image.height:null,$=f[y.type];y.precision!==null&&(h=s.getMaxPrecision(y.precision),h!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",h,"instead."));const Z=B.morphAttributes.position||B.morphAttributes.normal||B.morphAttributes.color,se=Z!==void 0?Z.length:0;let ve=0;B.morphAttributes.position!==void 0&&(ve=1),B.morphAttributes.normal!==void 0&&(ve=2),B.morphAttributes.color!==void 0&&(ve=3);let we,Q,te,pe;if($){const rt=xn[$];we=rt.vertexShader,Q=rt.fragmentShader}else we=y.vertexShader,Q=y.fragmentShader,c.update(y),te=c.getVertexShaderID(y),pe=c.getFragmentShaderID(y);const re=t.getRenderTarget(),Te=t.state.buffers.depth.getReversed(),Je=W.isInstancedMesh===!0,xe=W.isBatchedMesh===!0,tt=!!y.map,st=!!y.matcap,We=!!J,C=!!y.aoMap,Zt=!!y.lightMap,Ye=!!y.bumpMap,Xe=!!y.normalMap,Ee=!!y.displacementMap,dt=!!y.emissiveMap,ye=!!y.metalnessMap,E=!!y.roughnessMap,M=y.anisotropy>0,G=y.clearcoat>0,j=y.dispersion>0,ee=y.iridescence>0,Y=y.sheen>0,Se=y.transmission>0,ce=M&&!!y.anisotropyMap,Ce=G&&!!y.clearcoatMap,Ue=G&&!!y.clearcoatNormalMap,ne=G&&!!y.clearcoatRoughnessMap,ge=ee&&!!y.iridescenceMap,Ie=ee&&!!y.iridescenceThicknessMap,Be=Y&&!!y.sheenColorMap,_e=Y&&!!y.sheenRoughnessMap,qe=!!y.specularMap,ke=!!y.specularColorMap,ht=!!y.specularIntensityMap,U=Se&&!!y.transmissionMap,le=Se&&!!y.thicknessMap,X=!!y.gradientMap,K=!!y.alphaMap,de=y.alphaTest>0,ue=!!y.alphaHash,Ge=!!y.extensions;let _t=Kn;y.toneMapped&&(re===null||re.isXRRenderTarget===!0)&&(_t=t.toneMapping);const Ut={shaderID:$,shaderType:y.type,shaderName:y.name,vertexShader:we,fragmentShader:Q,defines:y.defines,customVertexShaderID:te,customFragmentShaderID:pe,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:h,batching:xe,batchingColor:xe&&W._colorsTexture!==null,instancing:Je,instancingColor:Je&&W.instanceColor!==null,instancingMorph:Je&&W.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:re===null?t.outputColorSpace:re.isXRRenderTarget===!0?re.texture.colorSpace:Us,alphaToCoverage:!!y.alphaToCoverage,map:tt,matcap:st,envMap:We,envMapMode:We&&J.mapping,envMapCubeUVHeight:R,aoMap:C,lightMap:Zt,bumpMap:Ye,normalMap:Xe,displacementMap:m&&Ee,emissiveMap:dt,normalMapObjectSpace:Xe&&y.normalMapType===U4,normalMapTangentSpace:Xe&&y.normalMapType===P4,metalnessMap:ye,roughnessMap:E,anisotropy:M,anisotropyMap:ce,clearcoat:G,clearcoatMap:Ce,clearcoatNormalMap:Ue,clearcoatRoughnessMap:ne,dispersion:j,iridescence:ee,iridescenceMap:ge,iridescenceThicknessMap:Ie,sheen:Y,sheenColorMap:Be,sheenRoughnessMap:_e,specularMap:qe,specularColorMap:ke,specularIntensityMap:ht,transmission:Se,transmissionMap:U,thicknessMap:le,gradientMap:X,opaque:y.transparent===!1&&y.blending===ws&&y.alphaToCoverage===!1,alphaMap:K,alphaTest:de,alphaHash:ue,combine:y.combine,mapUv:tt&&g(y.map.channel),aoMapUv:C&&g(y.aoMap.channel),lightMapUv:Zt&&g(y.lightMap.channel),bumpMapUv:Ye&&g(y.bumpMap.channel),normalMapUv:Xe&&g(y.normalMap.channel),displacementMapUv:Ee&&g(y.displacementMap.channel),emissiveMapUv:dt&&g(y.emissiveMap.channel),metalnessMapUv:ye&&g(y.metalnessMap.channel),roughnessMapUv:E&&g(y.roughnessMap.channel),anisotropyMapUv:ce&&g(y.anisotropyMap.channel),clearcoatMapUv:Ce&&g(y.clearcoatMap.channel),clearcoatNormalMapUv:Ue&&g(y.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ne&&g(y.clearcoatRoughnessMap.channel),iridescenceMapUv:ge&&g(y.iridescenceMap.channel),iridescenceThicknessMapUv:Ie&&g(y.iridescenceThicknessMap.channel),sheenColorMapUv:Be&&g(y.sheenColorMap.channel),sheenRoughnessMapUv:_e&&g(y.sheenRoughnessMap.channel),specularMapUv:qe&&g(y.specularMap.channel),specularColorMapUv:ke&&g(y.specularColorMap.channel),specularIntensityMapUv:ht&&g(y.specularIntensityMap.channel),transmissionMapUv:U&&g(y.transmissionMap.channel),thicknessMapUv:le&&g(y.thicknessMap.channel),alphaMapUv:K&&g(y.alphaMap.channel),vertexTangents:!!B.attributes.tangent&&(Xe||M),vertexColors:y.vertexColors,vertexAlphas:y.vertexColors===!0&&!!B.attributes.color&&B.attributes.color.itemSize===4,pointsUvs:W.isPoints===!0&&!!B.attributes.uv&&(tt||K),fog:!!z,useFog:y.fog===!0,fogExp2:!!z&&z.isFogExp2,flatShading:y.flatShading===!0,sizeAttenuation:y.sizeAttenuation===!0,logarithmicDepthBuffer:d,reverseDepthBuffer:Te,skinning:W.isSkinnedMesh===!0,morphTargets:B.morphAttributes.position!==void 0,morphNormals:B.morphAttributes.normal!==void 0,morphColors:B.morphAttributes.color!==void 0,morphTargetsCount:se,morphTextureStride:ve,numDirLights:v.directional.length,numPointLights:v.point.length,numSpotLights:v.spot.length,numSpotLightMaps:v.spotLightMap.length,numRectAreaLights:v.rectArea.length,numHemiLights:v.hemi.length,numDirLightShadows:v.directionalShadowMap.length,numPointLightShadows:v.pointShadowMap.length,numSpotLightShadows:v.spotShadowMap.length,numSpotLightShadowsWithMaps:v.numSpotLightShadowsWithMaps,numLightProbes:v.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:y.dithering,shadowMapEnabled:t.shadowMap.enabled&&b.length>0,shadowMapType:t.shadowMap.type,toneMapping:_t,decodeVideoTexture:tt&&y.map.isVideoTexture===!0&&et.getTransfer(y.map.colorSpace)===ot,decodeVideoTextureEmissive:dt&&y.emissiveMap.isVideoTexture===!0&&et.getTransfer(y.emissiveMap.colorSpace)===ot,premultipliedAlpha:y.premultipliedAlpha,doubleSided:y.side===Ln,flipSided:y.side===Ft,useDepthPacking:y.depthPacking>=0,depthPacking:y.depthPacking||0,index0AttributeName:y.index0AttributeName,extensionClipCullDistance:Ge&&y.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ge&&y.extensions.multiDraw===!0||xe)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:y.customProgramCacheKey()};return Ut.vertexUv1s=l.has(1),Ut.vertexUv2s=l.has(2),Ut.vertexUv3s=l.has(3),l.clear(),Ut}function _(y){const v=[];if(y.shaderID?v.push(y.shaderID):(v.push(y.customVertexShaderID),v.push(y.customFragmentShaderID)),y.defines!==void 0)for(const b in y.defines)v.push(b),v.push(y.defines[b]);return y.isRawShaderMaterial===!1&&(D(v,y),T(v,y),v.push(t.outputColorSpace)),v.push(y.customProgramCacheKey),v.join()}function D(y,v){y.push(v.precision),y.push(v.outputColorSpace),y.push(v.envMapMode),y.push(v.envMapCubeUVHeight),y.push(v.mapUv),y.push(v.alphaMapUv),y.push(v.lightMapUv),y.push(v.aoMapUv),y.push(v.bumpMapUv),y.push(v.normalMapUv),y.push(v.displacementMapUv),y.push(v.emissiveMapUv),y.push(v.metalnessMapUv),y.push(v.roughnessMapUv),y.push(v.anisotropyMapUv),y.push(v.clearcoatMapUv),y.push(v.clearcoatNormalMapUv),y.push(v.clearcoatRoughnessMapUv),y.push(v.iridescenceMapUv),y.push(v.iridescenceThicknessMapUv),y.push(v.sheenColorMapUv),y.push(v.sheenRoughnessMapUv),y.push(v.specularMapUv),y.push(v.specularColorMapUv),y.push(v.specularIntensityMapUv),y.push(v.transmissionMapUv),y.push(v.thicknessMapUv),y.push(v.combine),y.push(v.fogExp2),y.push(v.sizeAttenuation),y.push(v.morphTargetsCount),y.push(v.morphAttributeCount),y.push(v.numDirLights),y.push(v.numPointLights),y.push(v.numSpotLights),y.push(v.numSpotLightMaps),y.push(v.numHemiLights),y.push(v.numRectAreaLights),y.push(v.numDirLightShadows),y.push(v.numPointLightShadows),y.push(v.numSpotLightShadows),y.push(v.numSpotLightShadowsWithMaps),y.push(v.numLightProbes),y.push(v.shadowMapType),y.push(v.toneMapping),y.push(v.numClippingPlanes),y.push(v.numClipIntersection),y.push(v.depthPacking)}function T(y,v){o.disableAll(),v.supportsVertexTextures&&o.enable(0),v.instancing&&o.enable(1),v.instancingColor&&o.enable(2),v.instancingMorph&&o.enable(3),v.matcap&&o.enable(4),v.envMap&&o.enable(5),v.normalMapObjectSpace&&o.enable(6),v.normalMapTangentSpace&&o.enable(7),v.clearcoat&&o.enable(8),v.iridescence&&o.enable(9),v.alphaTest&&o.enable(10),v.vertexColors&&o.enable(11),v.vertexAlphas&&o.enable(12),v.vertexUv1s&&o.enable(13),v.vertexUv2s&&o.enable(14),v.vertexUv3s&&o.enable(15),v.vertexTangents&&o.enable(16),v.anisotropy&&o.enable(17),v.alphaHash&&o.enable(18),v.batching&&o.enable(19),v.dispersion&&o.enable(20),v.batchingColor&&o.enable(21),y.push(o.mask),o.disableAll(),v.fog&&o.enable(0),v.useFog&&o.enable(1),v.flatShading&&o.enable(2),v.logarithmicDepthBuffer&&o.enable(3),v.reverseDepthBuffer&&o.enable(4),v.skinning&&o.enable(5),v.morphTargets&&o.enable(6),v.morphNormals&&o.enable(7),v.morphColors&&o.enable(8),v.premultipliedAlpha&&o.enable(9),v.shadowMapEnabled&&o.enable(10),v.doubleSided&&o.enable(11),v.flipSided&&o.enable(12),v.useDepthPacking&&o.enable(13),v.dithering&&o.enable(14),v.transmission&&o.enable(15),v.sheen&&o.enable(16),v.opaque&&o.enable(17),v.pointsUvs&&o.enable(18),v.decodeVideoTexture&&o.enable(19),v.decodeVideoTextureEmissive&&o.enable(20),v.alphaToCoverage&&o.enable(21),y.push(o.mask)}function S(y){const v=f[y.type];let b;if(v){const q=xn[v];b=Dc.clone(q.uniforms)}else b=y.uniforms;return b}function L(y,v){let b;for(let q=0,W=u.length;q<W;q++){const z=u[q];if(z.cacheKey===v){b=z,++b.usedTimes;break}}return b===void 0&&(b=new su(t,v,y,r),u.push(b)),b}function A(y){if(--y.usedTimes===0){const v=u.indexOf(y);u[v]=u[u.length-1],u.pop(),y.destroy()}}function w(y){c.remove(y)}function F(){c.dispose()}return{getParameters:p,getProgramCacheKey:_,getUniforms:S,acquireProgram:L,releaseProgram:A,releaseShaderCache:w,programs:u,dispose:F}}function lu(){let t=new WeakMap;function e(a){return t.has(a)}function n(a){let o=t.get(a);return o===void 0&&(o={},t.set(a,o)),o}function i(a){t.delete(a)}function s(a,o,c){t.get(a)[o]=c}function r(){t=new WeakMap}return{has:e,get:n,remove:i,update:s,dispose:r}}function uu(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function C3(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function R3(){const t=[];let e=0;const n=[],i=[],s=[];function r(){e=0,n.length=0,i.length=0,s.length=0}function a(d,m,h,f,g,p){let _=t[e];return _===void 0?(_={id:d.id,object:d,geometry:m,material:h,groupOrder:f,renderOrder:d.renderOrder,z:g,group:p},t[e]=_):(_.id=d.id,_.object=d,_.geometry=m,_.material=h,_.groupOrder=f,_.renderOrder=d.renderOrder,_.z=g,_.group=p),e++,_}function o(d,m,h,f,g,p){const _=a(d,m,h,f,g,p);h.transmission>0?i.push(_):h.transparent===!0?s.push(_):n.push(_)}function c(d,m,h,f,g,p){const _=a(d,m,h,f,g,p);h.transmission>0?i.unshift(_):h.transparent===!0?s.unshift(_):n.unshift(_)}function l(d,m){n.length>1&&n.sort(d||uu),i.length>1&&i.sort(m||C3),s.length>1&&s.sort(m||C3)}function u(){for(let d=e,m=t.length;d<m;d++){const h=t[d];if(h.id===null)break;h.id=null,h.object=null,h.geometry=null,h.material=null,h.group=null}}return{opaque:n,transmissive:i,transparent:s,init:r,push:o,unshift:c,finish:u,sort:l}}function hu(){let t=new WeakMap;function e(i,s){const r=t.get(i);let a;return r===void 0?(a=new R3,t.set(i,[a])):s>=r.length?(a=new R3,r.push(a)):a=r[s],a}function n(){t=new WeakMap}return{get:e,dispose:n}}function du(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new O,color:new $e};break;case"SpotLight":n={position:new O,direction:new O,color:new $e,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new O,color:new $e,distance:0,decay:0};break;case"HemisphereLight":n={direction:new O,skyColor:new $e,groundColor:new $e};break;case"RectAreaLight":n={color:new $e,position:new O,halfWidth:new O,halfHeight:new O};break}return t[e.id]=n,n}}}function fu(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Fe};break;case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Fe};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let pu=0;function mu(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function gu(t){const e=new du,n=fu(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)i.probe.push(new O);const s=new O,r=new mt,a=new mt;function o(l){let u=0,d=0,m=0;for(let y=0;y<9;y++)i.probe[y].set(0,0,0);let h=0,f=0,g=0,p=0,_=0,D=0,T=0,S=0,L=0,A=0,w=0;l.sort(mu);for(let y=0,v=l.length;y<v;y++){const b=l[y],q=b.color,W=b.intensity,z=b.distance,B=b.shadow&&b.shadow.map?b.shadow.map.texture:null;if(b.isAmbientLight)u+=q.r*W,d+=q.g*W,m+=q.b*W;else if(b.isLightProbe){for(let P=0;P<9;P++)i.probe[P].addScaledVector(b.sh.coefficients[P],W);w++}else if(b.isDirectionalLight){const P=e.get(b);if(P.color.copy(b.color).multiplyScalar(b.intensity),b.castShadow){const J=b.shadow,R=n.get(b);R.shadowIntensity=J.intensity,R.shadowBias=J.bias,R.shadowNormalBias=J.normalBias,R.shadowRadius=J.radius,R.shadowMapSize=J.mapSize,i.directionalShadow[h]=R,i.directionalShadowMap[h]=B,i.directionalShadowMatrix[h]=b.shadow.matrix,D++}i.directional[h]=P,h++}else if(b.isSpotLight){const P=e.get(b);P.position.setFromMatrixPosition(b.matrixWorld),P.color.copy(q).multiplyScalar(W),P.distance=z,P.coneCos=Math.cos(b.angle),P.penumbraCos=Math.cos(b.angle*(1-b.penumbra)),P.decay=b.decay,i.spot[g]=P;const J=b.shadow;if(b.map&&(i.spotLightMap[L]=b.map,L++,J.updateMatrices(b),b.castShadow&&A++),i.spotLightMatrix[g]=J.matrix,b.castShadow){const R=n.get(b);R.shadowIntensity=J.intensity,R.shadowBias=J.bias,R.shadowNormalBias=J.normalBias,R.shadowRadius=J.radius,R.shadowMapSize=J.mapSize,i.spotShadow[g]=R,i.spotShadowMap[g]=B,S++}g++}else if(b.isRectAreaLight){const P=e.get(b);P.color.copy(q).multiplyScalar(W),P.halfWidth.set(b.width*.5,0,0),P.halfHeight.set(0,b.height*.5,0),i.rectArea[p]=P,p++}else if(b.isPointLight){const P=e.get(b);if(P.color.copy(b.color).multiplyScalar(b.intensity),P.distance=b.distance,P.decay=b.decay,b.castShadow){const J=b.shadow,R=n.get(b);R.shadowIntensity=J.intensity,R.shadowBias=J.bias,R.shadowNormalBias=J.normalBias,R.shadowRadius=J.radius,R.shadowMapSize=J.mapSize,R.shadowCameraNear=J.camera.near,R.shadowCameraFar=J.camera.far,i.pointShadow[f]=R,i.pointShadowMap[f]=B,i.pointShadowMatrix[f]=b.shadow.matrix,T++}i.point[f]=P,f++}else if(b.isHemisphereLight){const P=e.get(b);P.skyColor.copy(b.color).multiplyScalar(W),P.groundColor.copy(b.groundColor).multiplyScalar(W),i.hemi[_]=P,_++}}p>0&&(t.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ae.LTC_FLOAT_1,i.rectAreaLTC2=ae.LTC_FLOAT_2):(i.rectAreaLTC1=ae.LTC_HALF_1,i.rectAreaLTC2=ae.LTC_HALF_2)),i.ambient[0]=u,i.ambient[1]=d,i.ambient[2]=m;const F=i.hash;(F.directionalLength!==h||F.pointLength!==f||F.spotLength!==g||F.rectAreaLength!==p||F.hemiLength!==_||F.numDirectionalShadows!==D||F.numPointShadows!==T||F.numSpotShadows!==S||F.numSpotMaps!==L||F.numLightProbes!==w)&&(i.directional.length=h,i.spot.length=g,i.rectArea.length=p,i.point.length=f,i.hemi.length=_,i.directionalShadow.length=D,i.directionalShadowMap.length=D,i.pointShadow.length=T,i.pointShadowMap.length=T,i.spotShadow.length=S,i.spotShadowMap.length=S,i.directionalShadowMatrix.length=D,i.pointShadowMatrix.length=T,i.spotLightMatrix.length=S+L-A,i.spotLightMap.length=L,i.numSpotLightShadowsWithMaps=A,i.numLightProbes=w,F.directionalLength=h,F.pointLength=f,F.spotLength=g,F.rectAreaLength=p,F.hemiLength=_,F.numDirectionalShadows=D,F.numPointShadows=T,F.numSpotShadows=S,F.numSpotMaps=L,F.numLightProbes=w,i.version=pu++)}function c(l,u){let d=0,m=0,h=0,f=0,g=0;const p=u.matrixWorldInverse;for(let _=0,D=l.length;_<D;_++){const T=l[_];if(T.isDirectionalLight){const S=i.directional[d];S.direction.setFromMatrixPosition(T.matrixWorld),s.setFromMatrixPosition(T.target.matrixWorld),S.direction.sub(s),S.direction.transformDirection(p),d++}else if(T.isSpotLight){const S=i.spot[h];S.position.setFromMatrixPosition(T.matrixWorld),S.position.applyMatrix4(p),S.direction.setFromMatrixPosition(T.matrixWorld),s.setFromMatrixPosition(T.target.matrixWorld),S.direction.sub(s),S.direction.transformDirection(p),h++}else if(T.isRectAreaLight){const S=i.rectArea[f];S.position.setFromMatrixPosition(T.matrixWorld),S.position.applyMatrix4(p),a.identity(),r.copy(T.matrixWorld),r.premultiply(p),a.extractRotation(r),S.halfWidth.set(T.width*.5,0,0),S.halfHeight.set(0,T.height*.5,0),S.halfWidth.applyMatrix4(a),S.halfHeight.applyMatrix4(a),f++}else if(T.isPointLight){const S=i.point[m];S.position.setFromMatrixPosition(T.matrixWorld),S.position.applyMatrix4(p),m++}else if(T.isHemisphereLight){const S=i.hemi[g];S.direction.setFromMatrixPosition(T.matrixWorld),S.direction.transformDirection(p),g++}}}return{setup:o,setupView:c,state:i}}function L3(t){const e=new gu(t),n=[],i=[];function s(u){l.camera=u,n.length=0,i.length=0}function r(u){n.push(u)}function a(u){i.push(u)}function o(){e.setup(n)}function c(u){e.setupView(n,u)}const l={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:s,state:l,setupLights:o,setupLightsView:c,pushLight:r,pushShadow:a}}function _u(t){let e=new WeakMap;function n(s,r=0){const a=e.get(s);let o;return a===void 0?(o=new L3(t),e.set(s,[o])):r>=a.length?(o=new L3(t),a.push(o)):o=a[r],o}function i(){e=new WeakMap}return{get:n,dispose:i}}const Mu=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,vu=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function xu(t,e,n){let i=new m5;const s=new Fe,r=new Fe,a=new xt,o=new Gc({depthPacking:L4}),c=new Hc,l={},u=n.maxTextureSize,d={[ei]:Ft,[Ft]:ei,[Ln]:Ln},m=new Gn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Fe},radius:{value:4}},vertexShader:Mu,fragmentShader:vu}),h=m.clone();h.defines.HORIZONTAL_PASS=1;const f=new vt;f.setAttribute("position",new on(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Nt(f,m),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=X3;let _=this.type;this.render=function(A,w,F){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||A.length===0)return;const y=t.getRenderTarget(),v=t.getActiveCubeFace(),b=t.getActiveMipmapLevel(),q=t.state;q.setBlending(Zn),q.buffers.color.setClear(1,1,1,1),q.buffers.depth.setTest(!0),q.setScissorTest(!1);const W=_!==Rn&&this.type===Rn,z=_===Rn&&this.type!==Rn;for(let B=0,P=A.length;B<P;B++){const J=A[B],R=J.shadow;if(R===void 0){console.warn("THREE.WebGLShadowMap:",J,"has no shadow.");continue}if(R.autoUpdate===!1&&R.needsUpdate===!1)continue;s.copy(R.mapSize);const $=R.getFrameExtents();if(s.multiply($),r.copy(R.mapSize),(s.x>u||s.y>u)&&(s.x>u&&(r.x=Math.floor(u/$.x),s.x=r.x*$.x,R.mapSize.x=r.x),s.y>u&&(r.y=Math.floor(u/$.y),s.y=r.y*$.y,R.mapSize.y=r.y)),R.map===null||W===!0||z===!0){const se=this.type!==Rn?{minFilter:gn,magFilter:gn}:{};R.map!==null&&R.map.dispose(),R.map=new Ai(s.x,s.y,se),R.map.texture.name=J.name+".shadowMap",R.camera.updateProjectionMatrix()}t.setRenderTarget(R.map),t.clear();const Z=R.getViewportCount();for(let se=0;se<Z;se++){const ve=R.getViewport(se);a.set(r.x*ve.x,r.y*ve.y,r.x*ve.z,r.y*ve.w),q.viewport(a),R.updateMatrices(J,se),i=R.getFrustum(),S(w,F,R.camera,J,this.type)}R.isPointLightShadow!==!0&&this.type===Rn&&D(R,F),R.needsUpdate=!1}_=this.type,p.needsUpdate=!1,t.setRenderTarget(y,v,b)};function D(A,w){const F=e.update(g);m.defines.VSM_SAMPLES!==A.blurSamples&&(m.defines.VSM_SAMPLES=A.blurSamples,h.defines.VSM_SAMPLES=A.blurSamples,m.needsUpdate=!0,h.needsUpdate=!0),A.mapPass===null&&(A.mapPass=new Ai(s.x,s.y)),m.uniforms.shadow_pass.value=A.map.texture,m.uniforms.resolution.value=A.mapSize,m.uniforms.radius.value=A.radius,t.setRenderTarget(A.mapPass),t.clear(),t.renderBufferDirect(w,null,F,m,g,null),h.uniforms.shadow_pass.value=A.mapPass.texture,h.uniforms.resolution.value=A.mapSize,h.uniforms.radius.value=A.radius,t.setRenderTarget(A.map),t.clear(),t.renderBufferDirect(w,null,F,h,g,null)}function T(A,w,F,y){let v=null;const b=F.isPointLight===!0?A.customDistanceMaterial:A.customDepthMaterial;if(b!==void 0)v=b;else if(v=F.isPointLight===!0?c:o,t.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0||w.alphaToCoverage===!0){const q=v.uuid,W=w.uuid;let z=l[q];z===void 0&&(z={},l[q]=z);let B=z[W];B===void 0&&(B=v.clone(),z[W]=B,w.addEventListener("dispose",L)),v=B}if(v.visible=w.visible,v.wireframe=w.wireframe,y===Rn?v.side=w.shadowSide!==null?w.shadowSide:w.side:v.side=w.shadowSide!==null?w.shadowSide:d[w.side],v.alphaMap=w.alphaMap,v.alphaTest=w.alphaToCoverage===!0?.5:w.alphaTest,v.map=w.map,v.clipShadows=w.clipShadows,v.clippingPlanes=w.clippingPlanes,v.clipIntersection=w.clipIntersection,v.displacementMap=w.displacementMap,v.displacementScale=w.displacementScale,v.displacementBias=w.displacementBias,v.wireframeLinewidth=w.wireframeLinewidth,v.linewidth=w.linewidth,F.isPointLight===!0&&v.isMeshDistanceMaterial===!0){const q=t.properties.get(v);q.light=F}return v}function S(A,w,F,y,v){if(A.visible===!1)return;if(A.layers.test(w.layers)&&(A.isMesh||A.isLine||A.isPoints)&&(A.castShadow||A.receiveShadow&&v===Rn)&&(!A.frustumCulled||i.intersectsObject(A))){A.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,A.matrixWorld);const W=e.update(A),z=A.material;if(Array.isArray(z)){const B=W.groups;for(let P=0,J=B.length;P<J;P++){const R=B[P],$=z[R.materialIndex];if($&&$.visible){const Z=T(A,$,y,v);A.onBeforeShadow(t,A,w,F,W,Z,R),t.renderBufferDirect(F,null,W,Z,A,R),A.onAfterShadow(t,A,w,F,W,Z,R)}}}else if(z.visible){const B=T(A,z,y,v);A.onBeforeShadow(t,A,w,F,W,B,null),t.renderBufferDirect(F,null,W,B,A,null),A.onAfterShadow(t,A,w,F,W,B,null)}}const q=A.children;for(let W=0,z=q.length;W<z;W++)S(q[W],w,F,y,v)}function L(A){A.target.removeEventListener("dispose",L);for(const F in l){const y=l[F],v=A.target.uuid;v in y&&(y[v].dispose(),delete y[v])}}}const Su={[Ho]:ko,[Vo]:Qo,[Jo]:Xo,[Rs]:Wo,[ko]:Ho,[Qo]:Vo,[Xo]:Jo,[Wo]:Rs};function Tu(t,e){function n(){let U=!1;const le=new xt;let X=null;const K=new xt(0,0,0,0);return{setMask:function(de){X!==de&&!U&&(t.colorMask(de,de,de,de),X=de)},setLocked:function(de){U=de},setClear:function(de,ue,Ge,_t,Ut){Ut===!0&&(de*=_t,ue*=_t,Ge*=_t),le.set(de,ue,Ge,_t),K.equals(le)===!1&&(t.clearColor(de,ue,Ge,_t),K.copy(le))},reset:function(){U=!1,X=null,K.set(-1,0,0,0)}}}function i(){let U=!1,le=!1,X=null,K=null,de=null;return{setReversed:function(ue){if(le!==ue){const Ge=e.get("EXT_clip_control");ue?Ge.clipControlEXT(Ge.LOWER_LEFT_EXT,Ge.ZERO_TO_ONE_EXT):Ge.clipControlEXT(Ge.LOWER_LEFT_EXT,Ge.NEGATIVE_ONE_TO_ONE_EXT),le=ue;const _t=de;de=null,this.setClear(_t)}},getReversed:function(){return le},setTest:function(ue){ue?re(t.DEPTH_TEST):Te(t.DEPTH_TEST)},setMask:function(ue){X!==ue&&!U&&(t.depthMask(ue),X=ue)},setFunc:function(ue){if(le&&(ue=Su[ue]),K!==ue){switch(ue){case Ho:t.depthFunc(t.NEVER);break;case ko:t.depthFunc(t.ALWAYS);break;case Vo:t.depthFunc(t.LESS);break;case Rs:t.depthFunc(t.LEQUAL);break;case Jo:t.depthFunc(t.EQUAL);break;case Wo:t.depthFunc(t.GEQUAL);break;case Qo:t.depthFunc(t.GREATER);break;case Xo:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}K=ue}},setLocked:function(ue){U=ue},setClear:function(ue){de!==ue&&(le&&(ue=1-ue),t.clearDepth(ue),de=ue)},reset:function(){U=!1,X=null,K=null,de=null,le=!1}}}function s(){let U=!1,le=null,X=null,K=null,de=null,ue=null,Ge=null,_t=null,Ut=null;return{setTest:function(rt){U||(rt?re(t.STENCIL_TEST):Te(t.STENCIL_TEST))},setMask:function(rt){le!==rt&&!U&&(t.stencilMask(rt),le=rt)},setFunc:function(rt,ln,En){(X!==rt||K!==ln||de!==En)&&(t.stencilFunc(rt,ln,En),X=rt,K=ln,de=En)},setOp:function(rt,ln,En){(ue!==rt||Ge!==ln||_t!==En)&&(t.stencilOp(rt,ln,En),ue=rt,Ge=ln,_t=En)},setLocked:function(rt){U=rt},setClear:function(rt){Ut!==rt&&(t.clearStencil(rt),Ut=rt)},reset:function(){U=!1,le=null,X=null,K=null,de=null,ue=null,Ge=null,_t=null,Ut=null}}}const r=new n,a=new i,o=new s,c=new WeakMap,l=new WeakMap;let u={},d={},m=new WeakMap,h=[],f=null,g=!1,p=null,_=null,D=null,T=null,S=null,L=null,A=null,w=new $e(0,0,0),F=0,y=!1,v=null,b=null,q=null,W=null,z=null;const B=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let P=!1,J=0;const R=t.getParameter(t.VERSION);R.indexOf("WebGL")!==-1?(J=parseFloat(/^WebGL (\d)/.exec(R)[1]),P=J>=1):R.indexOf("OpenGL ES")!==-1&&(J=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),P=J>=2);let $=null,Z={};const se=t.getParameter(t.SCISSOR_BOX),ve=t.getParameter(t.VIEWPORT),we=new xt().fromArray(se),Q=new xt().fromArray(ve);function te(U,le,X,K){const de=new Uint8Array(4),ue=t.createTexture();t.bindTexture(U,ue),t.texParameteri(U,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(U,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let Ge=0;Ge<X;Ge++)U===t.TEXTURE_3D||U===t.TEXTURE_2D_ARRAY?t.texImage3D(le,0,t.RGBA,1,1,K,0,t.RGBA,t.UNSIGNED_BYTE,de):t.texImage2D(le+Ge,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,de);return ue}const pe={};pe[t.TEXTURE_2D]=te(t.TEXTURE_2D,t.TEXTURE_2D,1),pe[t.TEXTURE_CUBE_MAP]=te(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),pe[t.TEXTURE_2D_ARRAY]=te(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),pe[t.TEXTURE_3D]=te(t.TEXTURE_3D,t.TEXTURE_3D,1,1),r.setClear(0,0,0,1),a.setClear(1),o.setClear(0),re(t.DEPTH_TEST),a.setFunc(Rs),Ye(!1),Xe(D2),re(t.CULL_FACE),C(Zn);function re(U){u[U]!==!0&&(t.enable(U),u[U]=!0)}function Te(U){u[U]!==!1&&(t.disable(U),u[U]=!1)}function Je(U,le){return d[U]!==le?(t.bindFramebuffer(U,le),d[U]=le,U===t.DRAW_FRAMEBUFFER&&(d[t.FRAMEBUFFER]=le),U===t.FRAMEBUFFER&&(d[t.DRAW_FRAMEBUFFER]=le),!0):!1}function xe(U,le){let X=h,K=!1;if(U){X=m.get(le),X===void 0&&(X=[],m.set(le,X));const de=U.textures;if(X.length!==de.length||X[0]!==t.COLOR_ATTACHMENT0){for(let ue=0,Ge=de.length;ue<Ge;ue++)X[ue]=t.COLOR_ATTACHMENT0+ue;X.length=de.length,K=!0}}else X[0]!==t.BACK&&(X[0]=t.BACK,K=!0);K&&t.drawBuffers(X)}function tt(U){return f!==U?(t.useProgram(U),f=U,!0):!1}const st={[vi]:t.FUNC_ADD,[i4]:t.FUNC_SUBTRACT,[s4]:t.FUNC_REVERSE_SUBTRACT};st[r4]=t.MIN,st[a4]=t.MAX;const We={[o4]:t.ZERO,[c4]:t.ONE,[l4]:t.SRC_COLOR,[zo]:t.SRC_ALPHA,[m4]:t.SRC_ALPHA_SATURATE,[f4]:t.DST_COLOR,[h4]:t.DST_ALPHA,[u4]:t.ONE_MINUS_SRC_COLOR,[Go]:t.ONE_MINUS_SRC_ALPHA,[p4]:t.ONE_MINUS_DST_COLOR,[d4]:t.ONE_MINUS_DST_ALPHA,[g4]:t.CONSTANT_COLOR,[_4]:t.ONE_MINUS_CONSTANT_COLOR,[M4]:t.CONSTANT_ALPHA,[v4]:t.ONE_MINUS_CONSTANT_ALPHA};function C(U,le,X,K,de,ue,Ge,_t,Ut,rt){if(U===Zn){g===!0&&(Te(t.BLEND),g=!1);return}if(g===!1&&(re(t.BLEND),g=!0),U!==n4){if(U!==p||rt!==y){if((_!==vi||S!==vi)&&(t.blendEquation(t.FUNC_ADD),_=vi,S=vi),rt)switch(U){case ws:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case A2:t.blendFunc(t.ONE,t.ONE);break;case b2:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case w2:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}else switch(U){case ws:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case A2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case b2:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case w2:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}D=null,T=null,L=null,A=null,w.set(0,0,0),F=0,p=U,y=rt}return}de=de||le,ue=ue||X,Ge=Ge||K,(le!==_||de!==S)&&(t.blendEquationSeparate(st[le],st[de]),_=le,S=de),(X!==D||K!==T||ue!==L||Ge!==A)&&(t.blendFuncSeparate(We[X],We[K],We[ue],We[Ge]),D=X,T=K,L=ue,A=Ge),(_t.equals(w)===!1||Ut!==F)&&(t.blendColor(_t.r,_t.g,_t.b,Ut),w.copy(_t),F=Ut),p=U,y=!1}function Zt(U,le){U.side===Ln?Te(t.CULL_FACE):re(t.CULL_FACE);let X=U.side===Ft;le&&(X=!X),Ye(X),U.blending===ws&&U.transparent===!1?C(Zn):C(U.blending,U.blendEquation,U.blendSrc,U.blendDst,U.blendEquationAlpha,U.blendSrcAlpha,U.blendDstAlpha,U.blendColor,U.blendAlpha,U.premultipliedAlpha),a.setFunc(U.depthFunc),a.setTest(U.depthTest),a.setMask(U.depthWrite),r.setMask(U.colorWrite);const K=U.stencilWrite;o.setTest(K),K&&(o.setMask(U.stencilWriteMask),o.setFunc(U.stencilFunc,U.stencilRef,U.stencilFuncMask),o.setOp(U.stencilFail,U.stencilZFail,U.stencilZPass)),dt(U.polygonOffset,U.polygonOffsetFactor,U.polygonOffsetUnits),U.alphaToCoverage===!0?re(t.SAMPLE_ALPHA_TO_COVERAGE):Te(t.SAMPLE_ALPHA_TO_COVERAGE)}function Ye(U){v!==U&&(U?t.frontFace(t.CW):t.frontFace(t.CCW),v=U)}function Xe(U){U!==K0?(re(t.CULL_FACE),U!==b&&(U===D2?t.cullFace(t.BACK):U===e4?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):Te(t.CULL_FACE),b=U}function Ee(U){U!==q&&(P&&t.lineWidth(U),q=U)}function dt(U,le,X){U?(re(t.POLYGON_OFFSET_FILL),(W!==le||z!==X)&&(t.polygonOffset(le,X),W=le,z=X)):Te(t.POLYGON_OFFSET_FILL)}function ye(U){U?re(t.SCISSOR_TEST):Te(t.SCISSOR_TEST)}function E(U){U===void 0&&(U=t.TEXTURE0+B-1),$!==U&&(t.activeTexture(U),$=U)}function M(U,le,X){X===void 0&&($===null?X=t.TEXTURE0+B-1:X=$);let K=Z[X];K===void 0&&(K={type:void 0,texture:void 0},Z[X]=K),(K.type!==U||K.texture!==le)&&($!==X&&(t.activeTexture(X),$=X),t.bindTexture(U,le||pe[U]),K.type=U,K.texture=le)}function G(){const U=Z[$];U!==void 0&&U.type!==void 0&&(t.bindTexture(U.type,null),U.type=void 0,U.texture=void 0)}function j(){try{t.compressedTexImage2D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ee(){try{t.compressedTexImage3D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Y(){try{t.texSubImage2D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Se(){try{t.texSubImage3D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ce(){try{t.compressedTexSubImage2D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ce(){try{t.compressedTexSubImage3D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ue(){try{t.texStorage2D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ne(){try{t.texStorage3D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ge(){try{t.texImage2D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ie(){try{t.texImage3D(...arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Be(U){we.equals(U)===!1&&(t.scissor(U.x,U.y,U.z,U.w),we.copy(U))}function _e(U){Q.equals(U)===!1&&(t.viewport(U.x,U.y,U.z,U.w),Q.copy(U))}function qe(U,le){let X=l.get(le);X===void 0&&(X=new WeakMap,l.set(le,X));let K=X.get(U);K===void 0&&(K=t.getUniformBlockIndex(le,U.name),X.set(U,K))}function ke(U,le){const K=l.get(le).get(U);c.get(le)!==K&&(t.uniformBlockBinding(le,K,U.__bindingPointIndex),c.set(le,K))}function ht(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),a.setReversed(!1),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),u={},$=null,Z={},d={},m=new WeakMap,h=[],f=null,g=!1,p=null,_=null,D=null,T=null,S=null,L=null,A=null,w=new $e(0,0,0),F=0,y=!1,v=null,b=null,q=null,W=null,z=null,we.set(0,0,t.canvas.width,t.canvas.height),Q.set(0,0,t.canvas.width,t.canvas.height),r.reset(),a.reset(),o.reset()}return{buffers:{color:r,depth:a,stencil:o},enable:re,disable:Te,bindFramebuffer:Je,drawBuffers:xe,useProgram:tt,setBlending:C,setMaterial:Zt,setFlipSided:Ye,setCullFace:Xe,setLineWidth:Ee,setPolygonOffset:dt,setScissorTest:ye,activeTexture:E,bindTexture:M,unbindTexture:G,compressedTexImage2D:j,compressedTexImage3D:ee,texImage2D:ge,texImage3D:Ie,updateUBOMapping:qe,uniformBlockBinding:ke,texStorage2D:Ue,texStorage3D:ne,texSubImage2D:Y,texSubImage3D:Se,compressedTexSubImage2D:ce,compressedTexSubImage3D:Ce,scissor:Be,viewport:_e,reset:ht}}function yu(t,e,n,i,s,r,a){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new Fe,u=new WeakMap;let d;const m=new WeakMap;let h=!1;try{h=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function f(E,M){return h?new OffscreenCanvas(E,M):or("canvas")}function g(E,M,G){let j=1;const ee=ye(E);if((ee.width>G||ee.height>G)&&(j=G/Math.max(ee.width,ee.height)),j<1)if(typeof HTMLImageElement<"u"&&E instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&E instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&E instanceof ImageBitmap||typeof VideoFrame<"u"&&E instanceof VideoFrame){const Y=Math.floor(j*ee.width),Se=Math.floor(j*ee.height);d===void 0&&(d=f(Y,Se));const ce=M?f(Y,Se):d;return ce.width=Y,ce.height=Se,ce.getContext("2d").drawImage(E,0,0,Y,Se),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ee.width+"x"+ee.height+") to ("+Y+"x"+Se+")."),ce}else return"data"in E&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ee.width+"x"+ee.height+")."),E;return E}function p(E){return E.generateMipmaps}function _(E){t.generateMipmap(E)}function D(E){return E.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:E.isWebGL3DRenderTarget?t.TEXTURE_3D:E.isWebGLArrayRenderTarget||E.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D}function T(E,M,G,j,ee=!1){if(E!==null){if(t[E]!==void 0)return t[E];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+E+"'")}let Y=M;if(M===t.RED&&(G===t.FLOAT&&(Y=t.R32F),G===t.HALF_FLOAT&&(Y=t.R16F),G===t.UNSIGNED_BYTE&&(Y=t.R8)),M===t.RED_INTEGER&&(G===t.UNSIGNED_BYTE&&(Y=t.R8UI),G===t.UNSIGNED_SHORT&&(Y=t.R16UI),G===t.UNSIGNED_INT&&(Y=t.R32UI),G===t.BYTE&&(Y=t.R8I),G===t.SHORT&&(Y=t.R16I),G===t.INT&&(Y=t.R32I)),M===t.RG&&(G===t.FLOAT&&(Y=t.RG32F),G===t.HALF_FLOAT&&(Y=t.RG16F),G===t.UNSIGNED_BYTE&&(Y=t.RG8)),M===t.RG_INTEGER&&(G===t.UNSIGNED_BYTE&&(Y=t.RG8UI),G===t.UNSIGNED_SHORT&&(Y=t.RG16UI),G===t.UNSIGNED_INT&&(Y=t.RG32UI),G===t.BYTE&&(Y=t.RG8I),G===t.SHORT&&(Y=t.RG16I),G===t.INT&&(Y=t.RG32I)),M===t.RGB_INTEGER&&(G===t.UNSIGNED_BYTE&&(Y=t.RGB8UI),G===t.UNSIGNED_SHORT&&(Y=t.RGB16UI),G===t.UNSIGNED_INT&&(Y=t.RGB32UI),G===t.BYTE&&(Y=t.RGB8I),G===t.SHORT&&(Y=t.RGB16I),G===t.INT&&(Y=t.RGB32I)),M===t.RGBA_INTEGER&&(G===t.UNSIGNED_BYTE&&(Y=t.RGBA8UI),G===t.UNSIGNED_SHORT&&(Y=t.RGBA16UI),G===t.UNSIGNED_INT&&(Y=t.RGBA32UI),G===t.BYTE&&(Y=t.RGBA8I),G===t.SHORT&&(Y=t.RGBA16I),G===t.INT&&(Y=t.RGBA32I)),M===t.RGB&&G===t.UNSIGNED_INT_5_9_9_9_REV&&(Y=t.RGB9_E5),M===t.RGBA){const Se=ee?fa:et.getTransfer(j);G===t.FLOAT&&(Y=t.RGBA32F),G===t.HALF_FLOAT&&(Y=t.RGBA16F),G===t.UNSIGNED_BYTE&&(Y=Se===ot?t.SRGB8_ALPHA8:t.RGBA8),G===t.UNSIGNED_SHORT_4_4_4_4&&(Y=t.RGBA4),G===t.UNSIGNED_SHORT_5_5_5_1&&(Y=t.RGB5_A1)}return(Y===t.R16F||Y===t.R32F||Y===t.RG16F||Y===t.RG32F||Y===t.RGBA16F||Y===t.RGBA32F)&&e.get("EXT_color_buffer_float"),Y}function S(E,M){let G;return E?M===null||M===Di||M===ir?G=t.DEPTH24_STENCIL8:M===Pn?G=t.DEPTH32F_STENCIL8:M===nr&&(G=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):M===null||M===Di||M===ir?G=t.DEPTH_COMPONENT24:M===Pn?G=t.DEPTH_COMPONENT32F:M===nr&&(G=t.DEPTH_COMPONENT16),G}function L(E,M){return p(E)===!0||E.isFramebufferTexture&&E.minFilter!==gn&&E.minFilter!==Sn?Math.log2(Math.max(M.width,M.height))+1:E.mipmaps!==void 0&&E.mipmaps.length>0?E.mipmaps.length:E.isCompressedTexture&&Array.isArray(E.image)?M.mipmaps.length:1}function A(E){const M=E.target;M.removeEventListener("dispose",A),F(M),M.isVideoTexture&&u.delete(M)}function w(E){const M=E.target;M.removeEventListener("dispose",w),v(M)}function F(E){const M=i.get(E);if(M.__webglInit===void 0)return;const G=E.source,j=m.get(G);if(j){const ee=j[M.__cacheKey];ee.usedTimes--,ee.usedTimes===0&&y(E),Object.keys(j).length===0&&m.delete(G)}i.remove(E)}function y(E){const M=i.get(E);t.deleteTexture(M.__webglTexture);const G=E.source,j=m.get(G);delete j[M.__cacheKey],a.memory.textures--}function v(E){const M=i.get(E);if(E.depthTexture&&(E.depthTexture.dispose(),i.remove(E.depthTexture)),E.isWebGLCubeRenderTarget)for(let j=0;j<6;j++){if(Array.isArray(M.__webglFramebuffer[j]))for(let ee=0;ee<M.__webglFramebuffer[j].length;ee++)t.deleteFramebuffer(M.__webglFramebuffer[j][ee]);else t.deleteFramebuffer(M.__webglFramebuffer[j]);M.__webglDepthbuffer&&t.deleteRenderbuffer(M.__webglDepthbuffer[j])}else{if(Array.isArray(M.__webglFramebuffer))for(let j=0;j<M.__webglFramebuffer.length;j++)t.deleteFramebuffer(M.__webglFramebuffer[j]);else t.deleteFramebuffer(M.__webglFramebuffer);if(M.__webglDepthbuffer&&t.deleteRenderbuffer(M.__webglDepthbuffer),M.__webglMultisampledFramebuffer&&t.deleteFramebuffer(M.__webglMultisampledFramebuffer),M.__webglColorRenderbuffer)for(let j=0;j<M.__webglColorRenderbuffer.length;j++)M.__webglColorRenderbuffer[j]&&t.deleteRenderbuffer(M.__webglColorRenderbuffer[j]);M.__webglDepthRenderbuffer&&t.deleteRenderbuffer(M.__webglDepthRenderbuffer)}const G=E.textures;for(let j=0,ee=G.length;j<ee;j++){const Y=i.get(G[j]);Y.__webglTexture&&(t.deleteTexture(Y.__webglTexture),a.memory.textures--),i.remove(G[j])}i.remove(E)}let b=0;function q(){b=0}function W(){const E=b;return E>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+E+" texture units while this GPU supports only "+s.maxTextures),b+=1,E}function z(E){const M=[];return M.push(E.wrapS),M.push(E.wrapT),M.push(E.wrapR||0),M.push(E.magFilter),M.push(E.minFilter),M.push(E.anisotropy),M.push(E.internalFormat),M.push(E.format),M.push(E.type),M.push(E.generateMipmaps),M.push(E.premultiplyAlpha),M.push(E.flipY),M.push(E.unpackAlignment),M.push(E.colorSpace),M.join()}function B(E,M){const G=i.get(E);if(E.isVideoTexture&&Ee(E),E.isRenderTargetTexture===!1&&E.version>0&&G.__version!==E.version){const j=E.image;if(j===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(j.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Q(G,E,M);return}}n.bindTexture(t.TEXTURE_2D,G.__webglTexture,t.TEXTURE0+M)}function P(E,M){const G=i.get(E);if(E.version>0&&G.__version!==E.version){Q(G,E,M);return}n.bindTexture(t.TEXTURE_2D_ARRAY,G.__webglTexture,t.TEXTURE0+M)}function J(E,M){const G=i.get(E);if(E.version>0&&G.__version!==E.version){Q(G,E,M);return}n.bindTexture(t.TEXTURE_3D,G.__webglTexture,t.TEXTURE0+M)}function R(E,M){const G=i.get(E);if(E.version>0&&G.__version!==E.version){te(G,E,M);return}n.bindTexture(t.TEXTURE_CUBE_MAP,G.__webglTexture,t.TEXTURE0+M)}const $={[Yo]:t.REPEAT,[Si]:t.CLAMP_TO_EDGE,[jo]:t.MIRRORED_REPEAT},Z={[gn]:t.NEAREST,[C4]:t.NEAREST_MIPMAP_NEAREST,[wr]:t.NEAREST_MIPMAP_LINEAR,[Sn]:t.LINEAR,[io]:t.LINEAR_MIPMAP_NEAREST,[Ti]:t.LINEAR_MIPMAP_LINEAR},se={[I4]:t.NEVER,[G4]:t.ALWAYS,[O4]:t.LESS,[s5]:t.LEQUAL,[N4]:t.EQUAL,[z4]:t.GEQUAL,[F4]:t.GREATER,[B4]:t.NOTEQUAL};function ve(E,M){if(M.type===Pn&&e.has("OES_texture_float_linear")===!1&&(M.magFilter===Sn||M.magFilter===io||M.magFilter===wr||M.magFilter===Ti||M.minFilter===Sn||M.minFilter===io||M.minFilter===wr||M.minFilter===Ti)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(E,t.TEXTURE_WRAP_S,$[M.wrapS]),t.texParameteri(E,t.TEXTURE_WRAP_T,$[M.wrapT]),(E===t.TEXTURE_3D||E===t.TEXTURE_2D_ARRAY)&&t.texParameteri(E,t.TEXTURE_WRAP_R,$[M.wrapR]),t.texParameteri(E,t.TEXTURE_MAG_FILTER,Z[M.magFilter]),t.texParameteri(E,t.TEXTURE_MIN_FILTER,Z[M.minFilter]),M.compareFunction&&(t.texParameteri(E,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(E,t.TEXTURE_COMPARE_FUNC,se[M.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(M.magFilter===gn||M.minFilter!==wr&&M.minFilter!==Ti||M.type===Pn&&e.has("OES_texture_float_linear")===!1)return;if(M.anisotropy>1||i.get(M).__currentAnisotropy){const G=e.get("EXT_texture_filter_anisotropic");t.texParameterf(E,G.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,s.getMaxAnisotropy())),i.get(M).__currentAnisotropy=M.anisotropy}}}function we(E,M){let G=!1;E.__webglInit===void 0&&(E.__webglInit=!0,M.addEventListener("dispose",A));const j=M.source;let ee=m.get(j);ee===void 0&&(ee={},m.set(j,ee));const Y=z(M);if(Y!==E.__cacheKey){ee[Y]===void 0&&(ee[Y]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,G=!0),ee[Y].usedTimes++;const Se=ee[E.__cacheKey];Se!==void 0&&(ee[E.__cacheKey].usedTimes--,Se.usedTimes===0&&y(M)),E.__cacheKey=Y,E.__webglTexture=ee[Y].texture}return G}function Q(E,M,G){let j=t.TEXTURE_2D;(M.isDataArrayTexture||M.isCompressedArrayTexture)&&(j=t.TEXTURE_2D_ARRAY),M.isData3DTexture&&(j=t.TEXTURE_3D);const ee=we(E,M),Y=M.source;n.bindTexture(j,E.__webglTexture,t.TEXTURE0+G);const Se=i.get(Y);if(Y.version!==Se.__version||ee===!0){n.activeTexture(t.TEXTURE0+G);const ce=et.getPrimaries(et.workingColorSpace),Ce=M.colorSpace===jn?null:et.getPrimaries(M.colorSpace),Ue=M.colorSpace===jn||ce===Ce?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,M.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,M.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,M.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ue);let ne=g(M.image,!1,s.maxTextureSize);ne=dt(M,ne);const ge=r.convert(M.format,M.colorSpace),Ie=r.convert(M.type);let Be=T(M.internalFormat,ge,Ie,M.colorSpace,M.isVideoTexture);ve(j,M);let _e;const qe=M.mipmaps,ke=M.isVideoTexture!==!0,ht=Se.__version===void 0||ee===!0,U=Y.dataReady,le=L(M,ne);if(M.isDepthTexture)Be=S(M.format===rr,M.type),ht&&(ke?n.texStorage2D(t.TEXTURE_2D,1,Be,ne.width,ne.height):n.texImage2D(t.TEXTURE_2D,0,Be,ne.width,ne.height,0,ge,Ie,null));else if(M.isDataTexture)if(qe.length>0){ke&&ht&&n.texStorage2D(t.TEXTURE_2D,le,Be,qe[0].width,qe[0].height);for(let X=0,K=qe.length;X<K;X++)_e=qe[X],ke?U&&n.texSubImage2D(t.TEXTURE_2D,X,0,0,_e.width,_e.height,ge,Ie,_e.data):n.texImage2D(t.TEXTURE_2D,X,Be,_e.width,_e.height,0,ge,Ie,_e.data);M.generateMipmaps=!1}else ke?(ht&&n.texStorage2D(t.TEXTURE_2D,le,Be,ne.width,ne.height),U&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,ne.width,ne.height,ge,Ie,ne.data)):n.texImage2D(t.TEXTURE_2D,0,Be,ne.width,ne.height,0,ge,Ie,ne.data);else if(M.isCompressedTexture)if(M.isCompressedArrayTexture){ke&&ht&&n.texStorage3D(t.TEXTURE_2D_ARRAY,le,Be,qe[0].width,qe[0].height,ne.depth);for(let X=0,K=qe.length;X<K;X++)if(_e=qe[X],M.format!==mn)if(ge!==null)if(ke){if(U)if(M.layerUpdates.size>0){const de=o3(_e.width,_e.height,M.format,M.type);for(const ue of M.layerUpdates){const Ge=_e.data.subarray(ue*de/_e.data.BYTES_PER_ELEMENT,(ue+1)*de/_e.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,X,0,0,ue,_e.width,_e.height,1,ge,Ge)}M.clearLayerUpdates()}else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,X,0,0,0,_e.width,_e.height,ne.depth,ge,_e.data)}else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,X,Be,_e.width,_e.height,ne.depth,0,_e.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else ke?U&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,X,0,0,0,_e.width,_e.height,ne.depth,ge,Ie,_e.data):n.texImage3D(t.TEXTURE_2D_ARRAY,X,Be,_e.width,_e.height,ne.depth,0,ge,Ie,_e.data)}else{ke&&ht&&n.texStorage2D(t.TEXTURE_2D,le,Be,qe[0].width,qe[0].height);for(let X=0,K=qe.length;X<K;X++)_e=qe[X],M.format!==mn?ge!==null?ke?U&&n.compressedTexSubImage2D(t.TEXTURE_2D,X,0,0,_e.width,_e.height,ge,_e.data):n.compressedTexImage2D(t.TEXTURE_2D,X,Be,_e.width,_e.height,0,_e.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ke?U&&n.texSubImage2D(t.TEXTURE_2D,X,0,0,_e.width,_e.height,ge,Ie,_e.data):n.texImage2D(t.TEXTURE_2D,X,Be,_e.width,_e.height,0,ge,Ie,_e.data)}else if(M.isDataArrayTexture)if(ke){if(ht&&n.texStorage3D(t.TEXTURE_2D_ARRAY,le,Be,ne.width,ne.height,ne.depth),U)if(M.layerUpdates.size>0){const X=o3(ne.width,ne.height,M.format,M.type);for(const K of M.layerUpdates){const de=ne.data.subarray(K*X/ne.data.BYTES_PER_ELEMENT,(K+1)*X/ne.data.BYTES_PER_ELEMENT);n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,K,ne.width,ne.height,1,ge,Ie,de)}M.clearLayerUpdates()}else n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,ne.width,ne.height,ne.depth,ge,Ie,ne.data)}else n.texImage3D(t.TEXTURE_2D_ARRAY,0,Be,ne.width,ne.height,ne.depth,0,ge,Ie,ne.data);else if(M.isData3DTexture)ke?(ht&&n.texStorage3D(t.TEXTURE_3D,le,Be,ne.width,ne.height,ne.depth),U&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,ne.width,ne.height,ne.depth,ge,Ie,ne.data)):n.texImage3D(t.TEXTURE_3D,0,Be,ne.width,ne.height,ne.depth,0,ge,Ie,ne.data);else if(M.isFramebufferTexture){if(ht)if(ke)n.texStorage2D(t.TEXTURE_2D,le,Be,ne.width,ne.height);else{let X=ne.width,K=ne.height;for(let de=0;de<le;de++)n.texImage2D(t.TEXTURE_2D,de,Be,X,K,0,ge,Ie,null),X>>=1,K>>=1}}else if(qe.length>0){if(ke&&ht){const X=ye(qe[0]);n.texStorage2D(t.TEXTURE_2D,le,Be,X.width,X.height)}for(let X=0,K=qe.length;X<K;X++)_e=qe[X],ke?U&&n.texSubImage2D(t.TEXTURE_2D,X,0,0,ge,Ie,_e):n.texImage2D(t.TEXTURE_2D,X,Be,ge,Ie,_e);M.generateMipmaps=!1}else if(ke){if(ht){const X=ye(ne);n.texStorage2D(t.TEXTURE_2D,le,Be,X.width,X.height)}U&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,ge,Ie,ne)}else n.texImage2D(t.TEXTURE_2D,0,Be,ge,Ie,ne);p(M)&&_(j),Se.__version=Y.version,M.onUpdate&&M.onUpdate(M)}E.__version=M.version}function te(E,M,G){if(M.image.length!==6)return;const j=we(E,M),ee=M.source;n.bindTexture(t.TEXTURE_CUBE_MAP,E.__webglTexture,t.TEXTURE0+G);const Y=i.get(ee);if(ee.version!==Y.__version||j===!0){n.activeTexture(t.TEXTURE0+G);const Se=et.getPrimaries(et.workingColorSpace),ce=M.colorSpace===jn?null:et.getPrimaries(M.colorSpace),Ce=M.colorSpace===jn||Se===ce?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,M.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,M.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,M.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ce);const Ue=M.isCompressedTexture||M.image[0].isCompressedTexture,ne=M.image[0]&&M.image[0].isDataTexture,ge=[];for(let K=0;K<6;K++)!Ue&&!ne?ge[K]=g(M.image[K],!0,s.maxCubemapSize):ge[K]=ne?M.image[K].image:M.image[K],ge[K]=dt(M,ge[K]);const Ie=ge[0],Be=r.convert(M.format,M.colorSpace),_e=r.convert(M.type),qe=T(M.internalFormat,Be,_e,M.colorSpace),ke=M.isVideoTexture!==!0,ht=Y.__version===void 0||j===!0,U=ee.dataReady;let le=L(M,Ie);ve(t.TEXTURE_CUBE_MAP,M);let X;if(Ue){ke&&ht&&n.texStorage2D(t.TEXTURE_CUBE_MAP,le,qe,Ie.width,Ie.height);for(let K=0;K<6;K++){X=ge[K].mipmaps;for(let de=0;de<X.length;de++){const ue=X[de];M.format!==mn?Be!==null?ke?U&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,de,0,0,ue.width,ue.height,Be,ue.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,de,qe,ue.width,ue.height,0,ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ke?U&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,de,0,0,ue.width,ue.height,Be,_e,ue.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,de,qe,ue.width,ue.height,0,Be,_e,ue.data)}}}else{if(X=M.mipmaps,ke&&ht){X.length>0&&le++;const K=ye(ge[0]);n.texStorage2D(t.TEXTURE_CUBE_MAP,le,qe,K.width,K.height)}for(let K=0;K<6;K++)if(ne){ke?U&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,ge[K].width,ge[K].height,Be,_e,ge[K].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,qe,ge[K].width,ge[K].height,0,Be,_e,ge[K].data);for(let de=0;de<X.length;de++){const Ge=X[de].image[K].image;ke?U&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,de+1,0,0,Ge.width,Ge.height,Be,_e,Ge.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,de+1,qe,Ge.width,Ge.height,0,Be,_e,Ge.data)}}else{ke?U&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,Be,_e,ge[K]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,qe,Be,_e,ge[K]);for(let de=0;de<X.length;de++){const ue=X[de];ke?U&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,de+1,0,0,Be,_e,ue.image[K]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+K,de+1,qe,Be,_e,ue.image[K])}}}p(M)&&_(t.TEXTURE_CUBE_MAP),Y.__version=ee.version,M.onUpdate&&M.onUpdate(M)}E.__version=M.version}function pe(E,M,G,j,ee,Y){const Se=r.convert(G.format,G.colorSpace),ce=r.convert(G.type),Ce=T(G.internalFormat,Se,ce,G.colorSpace),Ue=i.get(M),ne=i.get(G);if(ne.__renderTarget=M,!Ue.__hasExternalTextures){const ge=Math.max(1,M.width>>Y),Ie=Math.max(1,M.height>>Y);ee===t.TEXTURE_3D||ee===t.TEXTURE_2D_ARRAY?n.texImage3D(ee,Y,Ce,ge,Ie,M.depth,0,Se,ce,null):n.texImage2D(ee,Y,Ce,ge,Ie,0,Se,ce,null)}n.bindFramebuffer(t.FRAMEBUFFER,E),Xe(M)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,j,ee,ne.__webglTexture,0,Ye(M)):(ee===t.TEXTURE_2D||ee>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&ee<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,j,ee,ne.__webglTexture,Y),n.bindFramebuffer(t.FRAMEBUFFER,null)}function re(E,M,G){if(t.bindRenderbuffer(t.RENDERBUFFER,E),M.depthBuffer){const j=M.depthTexture,ee=j&&j.isDepthTexture?j.type:null,Y=S(M.stencilBuffer,ee),Se=M.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,ce=Ye(M);Xe(M)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,ce,Y,M.width,M.height):G?t.renderbufferStorageMultisample(t.RENDERBUFFER,ce,Y,M.width,M.height):t.renderbufferStorage(t.RENDERBUFFER,Y,M.width,M.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,Se,t.RENDERBUFFER,E)}else{const j=M.textures;for(let ee=0;ee<j.length;ee++){const Y=j[ee],Se=r.convert(Y.format,Y.colorSpace),ce=r.convert(Y.type),Ce=T(Y.internalFormat,Se,ce,Y.colorSpace),Ue=Ye(M);G&&Xe(M)===!1?t.renderbufferStorageMultisample(t.RENDERBUFFER,Ue,Ce,M.width,M.height):Xe(M)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,Ue,Ce,M.width,M.height):t.renderbufferStorage(t.RENDERBUFFER,Ce,M.width,M.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function Te(E,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,E),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const j=i.get(M.depthTexture);j.__renderTarget=M,(!j.__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),B(M.depthTexture,0);const ee=j.__webglTexture,Y=Ye(M);if(M.depthTexture.format===sr)Xe(M)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,ee,0,Y):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,ee,0);else if(M.depthTexture.format===rr)Xe(M)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,ee,0,Y):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,ee,0);else throw new Error("Unknown depthTexture format")}function Je(E){const M=i.get(E),G=E.isWebGLCubeRenderTarget===!0;if(M.__boundDepthTexture!==E.depthTexture){const j=E.depthTexture;if(M.__depthDisposeCallback&&M.__depthDisposeCallback(),j){const ee=()=>{delete M.__boundDepthTexture,delete M.__depthDisposeCallback,j.removeEventListener("dispose",ee)};j.addEventListener("dispose",ee),M.__depthDisposeCallback=ee}M.__boundDepthTexture=j}if(E.depthTexture&&!M.__autoAllocateDepthBuffer){if(G)throw new Error("target.depthTexture not supported in Cube render targets");const j=E.texture.mipmaps;j&&j.length>0?Te(M.__webglFramebuffer[0],E):Te(M.__webglFramebuffer,E)}else if(G){M.__webglDepthbuffer=[];for(let j=0;j<6;j++)if(n.bindFramebuffer(t.FRAMEBUFFER,M.__webglFramebuffer[j]),M.__webglDepthbuffer[j]===void 0)M.__webglDepthbuffer[j]=t.createRenderbuffer(),re(M.__webglDepthbuffer[j],E,!1);else{const ee=E.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,Y=M.__webglDepthbuffer[j];t.bindRenderbuffer(t.RENDERBUFFER,Y),t.framebufferRenderbuffer(t.FRAMEBUFFER,ee,t.RENDERBUFFER,Y)}}else{const j=E.texture.mipmaps;if(j&&j.length>0?n.bindFramebuffer(t.FRAMEBUFFER,M.__webglFramebuffer[0]):n.bindFramebuffer(t.FRAMEBUFFER,M.__webglFramebuffer),M.__webglDepthbuffer===void 0)M.__webglDepthbuffer=t.createRenderbuffer(),re(M.__webglDepthbuffer,E,!1);else{const ee=E.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,Y=M.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,Y),t.framebufferRenderbuffer(t.FRAMEBUFFER,ee,t.RENDERBUFFER,Y)}}n.bindFramebuffer(t.FRAMEBUFFER,null)}function xe(E,M,G){const j=i.get(E);M!==void 0&&pe(j.__webglFramebuffer,E,E.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),G!==void 0&&Je(E)}function tt(E){const M=E.texture,G=i.get(E),j=i.get(M);E.addEventListener("dispose",w);const ee=E.textures,Y=E.isWebGLCubeRenderTarget===!0,Se=ee.length>1;if(Se||(j.__webglTexture===void 0&&(j.__webglTexture=t.createTexture()),j.__version=M.version,a.memory.textures++),Y){G.__webglFramebuffer=[];for(let ce=0;ce<6;ce++)if(M.mipmaps&&M.mipmaps.length>0){G.__webglFramebuffer[ce]=[];for(let Ce=0;Ce<M.mipmaps.length;Ce++)G.__webglFramebuffer[ce][Ce]=t.createFramebuffer()}else G.__webglFramebuffer[ce]=t.createFramebuffer()}else{if(M.mipmaps&&M.mipmaps.length>0){G.__webglFramebuffer=[];for(let ce=0;ce<M.mipmaps.length;ce++)G.__webglFramebuffer[ce]=t.createFramebuffer()}else G.__webglFramebuffer=t.createFramebuffer();if(Se)for(let ce=0,Ce=ee.length;ce<Ce;ce++){const Ue=i.get(ee[ce]);Ue.__webglTexture===void 0&&(Ue.__webglTexture=t.createTexture(),a.memory.textures++)}if(E.samples>0&&Xe(E)===!1){G.__webglMultisampledFramebuffer=t.createFramebuffer(),G.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,G.__webglMultisampledFramebuffer);for(let ce=0;ce<ee.length;ce++){const Ce=ee[ce];G.__webglColorRenderbuffer[ce]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,G.__webglColorRenderbuffer[ce]);const Ue=r.convert(Ce.format,Ce.colorSpace),ne=r.convert(Ce.type),ge=T(Ce.internalFormat,Ue,ne,Ce.colorSpace,E.isXRRenderTarget===!0),Ie=Ye(E);t.renderbufferStorageMultisample(t.RENDERBUFFER,Ie,ge,E.width,E.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+ce,t.RENDERBUFFER,G.__webglColorRenderbuffer[ce])}t.bindRenderbuffer(t.RENDERBUFFER,null),E.depthBuffer&&(G.__webglDepthRenderbuffer=t.createRenderbuffer(),re(G.__webglDepthRenderbuffer,E,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(Y){n.bindTexture(t.TEXTURE_CUBE_MAP,j.__webglTexture),ve(t.TEXTURE_CUBE_MAP,M);for(let ce=0;ce<6;ce++)if(M.mipmaps&&M.mipmaps.length>0)for(let Ce=0;Ce<M.mipmaps.length;Ce++)pe(G.__webglFramebuffer[ce][Ce],E,M,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+ce,Ce);else pe(G.__webglFramebuffer[ce],E,M,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+ce,0);p(M)&&_(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(Se){for(let ce=0,Ce=ee.length;ce<Ce;ce++){const Ue=ee[ce],ne=i.get(Ue);n.bindTexture(t.TEXTURE_2D,ne.__webglTexture),ve(t.TEXTURE_2D,Ue),pe(G.__webglFramebuffer,E,Ue,t.COLOR_ATTACHMENT0+ce,t.TEXTURE_2D,0),p(Ue)&&_(t.TEXTURE_2D)}n.unbindTexture()}else{let ce=t.TEXTURE_2D;if((E.isWebGL3DRenderTarget||E.isWebGLArrayRenderTarget)&&(ce=E.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(ce,j.__webglTexture),ve(ce,M),M.mipmaps&&M.mipmaps.length>0)for(let Ce=0;Ce<M.mipmaps.length;Ce++)pe(G.__webglFramebuffer[Ce],E,M,t.COLOR_ATTACHMENT0,ce,Ce);else pe(G.__webglFramebuffer,E,M,t.COLOR_ATTACHMENT0,ce,0);p(M)&&_(ce),n.unbindTexture()}E.depthBuffer&&Je(E)}function st(E){const M=E.textures;for(let G=0,j=M.length;G<j;G++){const ee=M[G];if(p(ee)){const Y=D(E),Se=i.get(ee).__webglTexture;n.bindTexture(Y,Se),_(Y),n.unbindTexture()}}}const We=[],C=[];function Zt(E){if(E.samples>0){if(Xe(E)===!1){const M=E.textures,G=E.width,j=E.height;let ee=t.COLOR_BUFFER_BIT;const Y=E.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,Se=i.get(E),ce=M.length>1;if(ce)for(let Ue=0;Ue<M.length;Ue++)n.bindFramebuffer(t.FRAMEBUFFER,Se.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+Ue,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,Se.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+Ue,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,Se.__webglMultisampledFramebuffer);const Ce=E.texture.mipmaps;Ce&&Ce.length>0?n.bindFramebuffer(t.DRAW_FRAMEBUFFER,Se.__webglFramebuffer[0]):n.bindFramebuffer(t.DRAW_FRAMEBUFFER,Se.__webglFramebuffer);for(let Ue=0;Ue<M.length;Ue++){if(E.resolveDepthBuffer&&(E.depthBuffer&&(ee|=t.DEPTH_BUFFER_BIT),E.stencilBuffer&&E.resolveStencilBuffer&&(ee|=t.STENCIL_BUFFER_BIT)),ce){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,Se.__webglColorRenderbuffer[Ue]);const ne=i.get(M[Ue]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,ne,0)}t.blitFramebuffer(0,0,G,j,0,0,G,j,ee,t.NEAREST),c===!0&&(We.length=0,C.length=0,We.push(t.COLOR_ATTACHMENT0+Ue),E.depthBuffer&&E.resolveDepthBuffer===!1&&(We.push(Y),C.push(Y),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,C)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,We))}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),ce)for(let Ue=0;Ue<M.length;Ue++){n.bindFramebuffer(t.FRAMEBUFFER,Se.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+Ue,t.RENDERBUFFER,Se.__webglColorRenderbuffer[Ue]);const ne=i.get(M[Ue]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,Se.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+Ue,t.TEXTURE_2D,ne,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,Se.__webglMultisampledFramebuffer)}else if(E.depthBuffer&&E.resolveDepthBuffer===!1&&c){const M=E.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[M])}}}function Ye(E){return Math.min(s.maxSamples,E.samples)}function Xe(E){const M=i.get(E);return E.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&M.__useRenderToTexture!==!1}function Ee(E){const M=a.render.frame;u.get(E)!==M&&(u.set(E,M),E.update())}function dt(E,M){const G=E.colorSpace,j=E.format,ee=E.type;return E.isCompressedTexture===!0||E.isVideoTexture===!0||G!==Us&&G!==jn&&(et.getTransfer(G)===ot?(j!==mn||ee!==Bn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",G)),M}function ye(E){return typeof HTMLImageElement<"u"&&E instanceof HTMLImageElement?(l.width=E.naturalWidth||E.width,l.height=E.naturalHeight||E.height):typeof VideoFrame<"u"&&E instanceof VideoFrame?(l.width=E.displayWidth,l.height=E.displayHeight):(l.width=E.width,l.height=E.height),l}this.allocateTextureUnit=W,this.resetTextureUnits=q,this.setTexture2D=B,this.setTexture2DArray=P,this.setTexture3D=J,this.setTextureCube=R,this.rebindTextures=xe,this.setupRenderTarget=tt,this.updateRenderTargetMipmap=st,this.updateMultisampleRenderTarget=Zt,this.setupDepthRenderbuffer=Je,this.setupFrameBufferTexture=pe,this.useMultisampledRTT=Xe}function Eu(t,e){function n(i,s=jn){let r;const a=et.getTransfer(s);if(i===Bn)return t.UNSIGNED_BYTE;if(i===P1)return t.UNSIGNED_SHORT_4_4_4_4;if(i===U1)return t.UNSIGNED_SHORT_5_5_5_1;if(i===Z3)return t.UNSIGNED_INT_5_9_9_9_REV;if(i===Y3)return t.BYTE;if(i===j3)return t.SHORT;if(i===nr)return t.UNSIGNED_SHORT;if(i===L1)return t.INT;if(i===Di)return t.UNSIGNED_INT;if(i===Pn)return t.FLOAT;if(i===lr)return t.HALF_FLOAT;if(i===K3)return t.ALPHA;if(i===e5)return t.RGB;if(i===mn)return t.RGBA;if(i===sr)return t.DEPTH_COMPONENT;if(i===rr)return t.DEPTH_STENCIL;if(i===t5)return t.RED;if(i===I1)return t.RED_INTEGER;if(i===n5)return t.RG;if(i===O1)return t.RG_INTEGER;if(i===N1)return t.RGBA_INTEGER;if(i===ra||i===aa||i===oa||i===ca)if(a===ot)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(i===ra)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===aa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===oa)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===ca)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(i===ra)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===aa)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===oa)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===ca)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===Zo||i===Ko||i===e1||i===t1)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(i===Zo)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Ko)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===e1)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===t1)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===n1||i===i1||i===s1)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(i===n1||i===i1)return a===ot?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(i===s1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===r1||i===a1||i===o1||i===c1||i===l1||i===u1||i===h1||i===d1||i===f1||i===p1||i===m1||i===g1||i===_1||i===M1)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(i===r1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===a1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===o1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===c1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===l1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===u1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===h1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===d1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===f1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===p1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===m1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===g1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===_1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===M1)return a===ot?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===la||i===v1||i===x1)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(i===la)return a===ot?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===v1)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===x1)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===i5||i===S1||i===T1||i===y1)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(i===la)return r.COMPRESSED_RED_RGTC1_EXT;if(i===S1)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===T1)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===y1)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===ir?t.UNSIGNED_INT_24_8:t[i]!==void 0?t[i]:null}return{convert:n}}const Du=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,Au=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class bu{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,n,i){if(this.texture===null){const s=new Bt,r=e.properties.get(s);r.__webglTexture=n.texture,(n.depthNear!==i.depthNear||n.depthFar!==i.depthFar)&&(this.depthNear=n.depthNear,this.depthFar=n.depthFar),this.texture=s}}getMesh(e){if(this.texture!==null&&this.mesh===null){const n=e.cameras[0].viewport,i=new Gn({vertexShader:Du,fragmentShader:Au,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new Nt(new Sa(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class wu extends Li{constructor(e,n){super();const i=this;let s=null,r=1,a=null,o="local-floor",c=1,l=null,u=null,d=null,m=null,h=null,f=null;const g=new bu,p=n.getContextAttributes();let _=null,D=null;const T=[],S=[],L=new Fe;let A=null;const w=new rn;w.viewport=new xt;const F=new rn;F.viewport=new xt;const y=[w,F],v=new Xc;let b=null,q=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Q){let te=T[Q];return te===void 0&&(te=new Eo,T[Q]=te),te.getTargetRaySpace()},this.getControllerGrip=function(Q){let te=T[Q];return te===void 0&&(te=new Eo,T[Q]=te),te.getGripSpace()},this.getHand=function(Q){let te=T[Q];return te===void 0&&(te=new Eo,T[Q]=te),te.getHandSpace()};function W(Q){const te=S.indexOf(Q.inputSource);if(te===-1)return;const pe=T[te];pe!==void 0&&(pe.update(Q.inputSource,Q.frame,l||a),pe.dispatchEvent({type:Q.type,data:Q.inputSource}))}function z(){s.removeEventListener("select",W),s.removeEventListener("selectstart",W),s.removeEventListener("selectend",W),s.removeEventListener("squeeze",W),s.removeEventListener("squeezestart",W),s.removeEventListener("squeezeend",W),s.removeEventListener("end",z),s.removeEventListener("inputsourceschange",B);for(let Q=0;Q<T.length;Q++){const te=S[Q];te!==null&&(S[Q]=null,T[Q].disconnect(te))}b=null,q=null,g.reset(),e.setRenderTarget(_),h=null,m=null,d=null,s=null,D=null,we.stop(),i.isPresenting=!1,e.setPixelRatio(A),e.setSize(L.width,L.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Q){r=Q,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Q){o=Q,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(Q){l=Q},this.getBaseLayer=function(){return m!==null?m:h},this.getBinding=function(){return d},this.getFrame=function(){return f},this.getSession=function(){return s},this.setSession=async function(Q){if(s=Q,s!==null){if(_=e.getRenderTarget(),s.addEventListener("select",W),s.addEventListener("selectstart",W),s.addEventListener("selectend",W),s.addEventListener("squeeze",W),s.addEventListener("squeezestart",W),s.addEventListener("squeezeend",W),s.addEventListener("end",z),s.addEventListener("inputsourceschange",B),p.xrCompatible!==!0&&await n.makeXRCompatible(),A=e.getPixelRatio(),e.getSize(L),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let pe=null,re=null,Te=null;p.depth&&(Te=p.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,pe=p.stencil?rr:sr,re=p.stencil?ir:Di);const Je={colorFormat:n.RGBA8,depthFormat:Te,scaleFactor:r};d=new XRWebGLBinding(s,n),m=d.createProjectionLayer(Je),s.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),D=new Ai(m.textureWidth,m.textureHeight,{format:mn,type:Bn,depthTexture:new g5(m.textureWidth,m.textureHeight,re,void 0,void 0,void 0,void 0,void 0,void 0,pe),stencilBuffer:p.stencil,colorSpace:e.outputColorSpace,samples:p.antialias?4:0,resolveDepthBuffer:m.ignoreDepthValues===!1,resolveStencilBuffer:m.ignoreDepthValues===!1})}else{const pe={antialias:p.antialias,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};h=new XRWebGLLayer(s,n,pe),s.updateRenderState({baseLayer:h}),e.setPixelRatio(1),e.setSize(h.framebufferWidth,h.framebufferHeight,!1),D=new Ai(h.framebufferWidth,h.framebufferHeight,{format:mn,type:Bn,colorSpace:e.outputColorSpace,stencilBuffer:p.stencil,resolveDepthBuffer:h.ignoreDepthValues===!1,resolveStencilBuffer:h.ignoreDepthValues===!1})}D.isXRRenderTarget=!0,this.setFoveation(c),l=null,a=await s.requestReferenceSpace(o),we.setContext(s),we.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode},this.getDepthTexture=function(){return g.getDepthTexture()};function B(Q){for(let te=0;te<Q.removed.length;te++){const pe=Q.removed[te],re=S.indexOf(pe);re>=0&&(S[re]=null,T[re].disconnect(pe))}for(let te=0;te<Q.added.length;te++){const pe=Q.added[te];let re=S.indexOf(pe);if(re===-1){for(let Je=0;Je<T.length;Je++)if(Je>=S.length){S.push(pe),re=Je;break}else if(S[Je]===null){S[Je]=pe,re=Je;break}if(re===-1)break}const Te=T[re];Te&&Te.connect(pe)}}const P=new O,J=new O;function R(Q,te,pe){P.setFromMatrixPosition(te.matrixWorld),J.setFromMatrixPosition(pe.matrixWorld);const re=P.distanceTo(J),Te=te.projectionMatrix.elements,Je=pe.projectionMatrix.elements,xe=Te[14]/(Te[10]-1),tt=Te[14]/(Te[10]+1),st=(Te[9]+1)/Te[5],We=(Te[9]-1)/Te[5],C=(Te[8]-1)/Te[0],Zt=(Je[8]+1)/Je[0],Ye=xe*C,Xe=xe*Zt,Ee=re/(-C+Zt),dt=Ee*-C;if(te.matrixWorld.decompose(Q.position,Q.quaternion,Q.scale),Q.translateX(dt),Q.translateZ(Ee),Q.matrixWorld.compose(Q.position,Q.quaternion,Q.scale),Q.matrixWorldInverse.copy(Q.matrixWorld).invert(),Te[10]===-1)Q.projectionMatrix.copy(te.projectionMatrix),Q.projectionMatrixInverse.copy(te.projectionMatrixInverse);else{const ye=xe+Ee,E=tt+Ee,M=Ye-dt,G=Xe+(re-dt),j=st*tt/E*ye,ee=We*tt/E*ye;Q.projectionMatrix.makePerspective(M,G,j,ee,ye,E),Q.projectionMatrixInverse.copy(Q.projectionMatrix).invert()}}function $(Q,te){te===null?Q.matrixWorld.copy(Q.matrix):Q.matrixWorld.multiplyMatrices(te.matrixWorld,Q.matrix),Q.matrixWorldInverse.copy(Q.matrixWorld).invert()}this.updateCamera=function(Q){if(s===null)return;let te=Q.near,pe=Q.far;g.texture!==null&&(g.depthNear>0&&(te=g.depthNear),g.depthFar>0&&(pe=g.depthFar)),v.near=F.near=w.near=te,v.far=F.far=w.far=pe,(b!==v.near||q!==v.far)&&(s.updateRenderState({depthNear:v.near,depthFar:v.far}),b=v.near,q=v.far),w.layers.mask=Q.layers.mask|2,F.layers.mask=Q.layers.mask|4,v.layers.mask=w.layers.mask|F.layers.mask;const re=Q.parent,Te=v.cameras;$(v,re);for(let Je=0;Je<Te.length;Je++)$(Te[Je],re);Te.length===2?R(v,w,F):v.projectionMatrix.copy(w.projectionMatrix),Z(Q,v,re)};function Z(Q,te,pe){pe===null?Q.matrix.copy(te.matrixWorld):(Q.matrix.copy(pe.matrixWorld),Q.matrix.invert(),Q.matrix.multiply(te.matrixWorld)),Q.matrix.decompose(Q.position,Q.quaternion,Q.scale),Q.updateMatrixWorld(!0),Q.projectionMatrix.copy(te.projectionMatrix),Q.projectionMatrixInverse.copy(te.projectionMatrixInverse),Q.isPerspectiveCamera&&(Q.fov=ar*2*Math.atan(1/Q.projectionMatrix.elements[5]),Q.zoom=1)}this.getCamera=function(){return v},this.getFoveation=function(){if(!(m===null&&h===null))return c},this.setFoveation=function(Q){c=Q,m!==null&&(m.fixedFoveation=Q),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=Q)},this.hasDepthSensing=function(){return g.texture!==null},this.getDepthSensingMesh=function(){return g.getMesh(v)};let se=null;function ve(Q,te){if(u=te.getViewerPose(l||a),f=te,u!==null){const pe=u.views;h!==null&&(e.setRenderTargetFramebuffer(D,h.framebuffer),e.setRenderTarget(D));let re=!1;pe.length!==v.cameras.length&&(v.cameras.length=0,re=!0);for(let xe=0;xe<pe.length;xe++){const tt=pe[xe];let st=null;if(h!==null)st=h.getViewport(tt);else{const C=d.getViewSubImage(m,tt);st=C.viewport,xe===0&&(e.setRenderTargetTextures(D,C.colorTexture,C.depthStencilTexture),e.setRenderTarget(D))}let We=y[xe];We===void 0&&(We=new rn,We.layers.enable(xe),We.viewport=new xt,y[xe]=We),We.matrix.fromArray(tt.transform.matrix),We.matrix.decompose(We.position,We.quaternion,We.scale),We.projectionMatrix.fromArray(tt.projectionMatrix),We.projectionMatrixInverse.copy(We.projectionMatrix).invert(),We.viewport.set(st.x,st.y,st.width,st.height),xe===0&&(v.matrix.copy(We.matrix),v.matrix.decompose(v.position,v.quaternion,v.scale)),re===!0&&v.cameras.push(We)}const Te=s.enabledFeatures;if(Te&&Te.includes("depth-sensing")&&s.depthUsage=="gpu-optimized"&&d){const xe=d.getDepthInformation(pe[0]);xe&&xe.isValid&&xe.texture&&g.init(e,xe,s.renderState)}}for(let pe=0;pe<T.length;pe++){const re=S[pe],Te=T[pe];re!==null&&Te!==void 0&&Te.update(re,te,l||a)}se&&se(Q,te),te.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:te}),f=null}const we=new _5;we.setAnimationLoop(ve),this.setAnimationLoop=function(Q){se=Q},this.dispose=function(){}}}const pi=new zn,Cu=new mt;function Ru(t,e){function n(p,_){p.matrixAutoUpdate===!0&&p.updateMatrix(),_.value.copy(p.matrix)}function i(p,_){_.color.getRGB(p.fogColor.value,u5(t)),_.isFog?(p.fogNear.value=_.near,p.fogFar.value=_.far):_.isFogExp2&&(p.fogDensity.value=_.density)}function s(p,_,D,T,S){_.isMeshBasicMaterial||_.isMeshLambertMaterial?r(p,_):_.isMeshToonMaterial?(r(p,_),d(p,_)):_.isMeshPhongMaterial?(r(p,_),u(p,_)):_.isMeshStandardMaterial?(r(p,_),m(p,_),_.isMeshPhysicalMaterial&&h(p,_,S)):_.isMeshMatcapMaterial?(r(p,_),f(p,_)):_.isMeshDepthMaterial?r(p,_):_.isMeshDistanceMaterial?(r(p,_),g(p,_)):_.isMeshNormalMaterial?r(p,_):_.isLineBasicMaterial?(a(p,_),_.isLineDashedMaterial&&o(p,_)):_.isPointsMaterial?c(p,_,D,T):_.isSpriteMaterial?l(p,_):_.isShadowMaterial?(p.color.value.copy(_.color),p.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function r(p,_){p.opacity.value=_.opacity,_.color&&p.diffuse.value.copy(_.color),_.emissive&&p.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(p.map.value=_.map,n(_.map,p.mapTransform)),_.alphaMap&&(p.alphaMap.value=_.alphaMap,n(_.alphaMap,p.alphaMapTransform)),_.bumpMap&&(p.bumpMap.value=_.bumpMap,n(_.bumpMap,p.bumpMapTransform),p.bumpScale.value=_.bumpScale,_.side===Ft&&(p.bumpScale.value*=-1)),_.normalMap&&(p.normalMap.value=_.normalMap,n(_.normalMap,p.normalMapTransform),p.normalScale.value.copy(_.normalScale),_.side===Ft&&p.normalScale.value.negate()),_.displacementMap&&(p.displacementMap.value=_.displacementMap,n(_.displacementMap,p.displacementMapTransform),p.displacementScale.value=_.displacementScale,p.displacementBias.value=_.displacementBias),_.emissiveMap&&(p.emissiveMap.value=_.emissiveMap,n(_.emissiveMap,p.emissiveMapTransform)),_.specularMap&&(p.specularMap.value=_.specularMap,n(_.specularMap,p.specularMapTransform)),_.alphaTest>0&&(p.alphaTest.value=_.alphaTest);const D=e.get(_),T=D.envMap,S=D.envMapRotation;T&&(p.envMap.value=T,pi.copy(S),pi.x*=-1,pi.y*=-1,pi.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(pi.y*=-1,pi.z*=-1),p.envMapRotation.value.setFromMatrix4(Cu.makeRotationFromEuler(pi)),p.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=_.reflectivity,p.ior.value=_.ior,p.refractionRatio.value=_.refractionRatio),_.lightMap&&(p.lightMap.value=_.lightMap,p.lightMapIntensity.value=_.lightMapIntensity,n(_.lightMap,p.lightMapTransform)),_.aoMap&&(p.aoMap.value=_.aoMap,p.aoMapIntensity.value=_.aoMapIntensity,n(_.aoMap,p.aoMapTransform))}function a(p,_){p.diffuse.value.copy(_.color),p.opacity.value=_.opacity,_.map&&(p.map.value=_.map,n(_.map,p.mapTransform))}function o(p,_){p.dashSize.value=_.dashSize,p.totalSize.value=_.dashSize+_.gapSize,p.scale.value=_.scale}function c(p,_,D,T){p.diffuse.value.copy(_.color),p.opacity.value=_.opacity,p.size.value=_.size*D,p.scale.value=T*.5,_.map&&(p.map.value=_.map,n(_.map,p.uvTransform)),_.alphaMap&&(p.alphaMap.value=_.alphaMap,n(_.alphaMap,p.alphaMapTransform)),_.alphaTest>0&&(p.alphaTest.value=_.alphaTest)}function l(p,_){p.diffuse.value.copy(_.color),p.opacity.value=_.opacity,p.rotation.value=_.rotation,_.map&&(p.map.value=_.map,n(_.map,p.mapTransform)),_.alphaMap&&(p.alphaMap.value=_.alphaMap,n(_.alphaMap,p.alphaMapTransform)),_.alphaTest>0&&(p.alphaTest.value=_.alphaTest)}function u(p,_){p.specular.value.copy(_.specular),p.shininess.value=Math.max(_.shininess,1e-4)}function d(p,_){_.gradientMap&&(p.gradientMap.value=_.gradientMap)}function m(p,_){p.metalness.value=_.metalness,_.metalnessMap&&(p.metalnessMap.value=_.metalnessMap,n(_.metalnessMap,p.metalnessMapTransform)),p.roughness.value=_.roughness,_.roughnessMap&&(p.roughnessMap.value=_.roughnessMap,n(_.roughnessMap,p.roughnessMapTransform)),_.envMap&&(p.envMapIntensity.value=_.envMapIntensity)}function h(p,_,D){p.ior.value=_.ior,_.sheen>0&&(p.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),p.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(p.sheenColorMap.value=_.sheenColorMap,n(_.sheenColorMap,p.sheenColorMapTransform)),_.sheenRoughnessMap&&(p.sheenRoughnessMap.value=_.sheenRoughnessMap,n(_.sheenRoughnessMap,p.sheenRoughnessMapTransform))),_.clearcoat>0&&(p.clearcoat.value=_.clearcoat,p.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(p.clearcoatMap.value=_.clearcoatMap,n(_.clearcoatMap,p.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,n(_.clearcoatRoughnessMap,p.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(p.clearcoatNormalMap.value=_.clearcoatNormalMap,n(_.clearcoatNormalMap,p.clearcoatNormalMapTransform),p.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Ft&&p.clearcoatNormalScale.value.negate())),_.dispersion>0&&(p.dispersion.value=_.dispersion),_.iridescence>0&&(p.iridescence.value=_.iridescence,p.iridescenceIOR.value=_.iridescenceIOR,p.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(p.iridescenceMap.value=_.iridescenceMap,n(_.iridescenceMap,p.iridescenceMapTransform)),_.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=_.iridescenceThicknessMap,n(_.iridescenceThicknessMap,p.iridescenceThicknessMapTransform))),_.transmission>0&&(p.transmission.value=_.transmission,p.transmissionSamplerMap.value=D.texture,p.transmissionSamplerSize.value.set(D.width,D.height),_.transmissionMap&&(p.transmissionMap.value=_.transmissionMap,n(_.transmissionMap,p.transmissionMapTransform)),p.thickness.value=_.thickness,_.thicknessMap&&(p.thicknessMap.value=_.thicknessMap,n(_.thicknessMap,p.thicknessMapTransform)),p.attenuationDistance.value=_.attenuationDistance,p.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(p.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(p.anisotropyMap.value=_.anisotropyMap,n(_.anisotropyMap,p.anisotropyMapTransform))),p.specularIntensity.value=_.specularIntensity,p.specularColor.value.copy(_.specularColor),_.specularColorMap&&(p.specularColorMap.value=_.specularColorMap,n(_.specularColorMap,p.specularColorMapTransform)),_.specularIntensityMap&&(p.specularIntensityMap.value=_.specularIntensityMap,n(_.specularIntensityMap,p.specularIntensityMapTransform))}function f(p,_){_.matcap&&(p.matcap.value=_.matcap)}function g(p,_){const D=e.get(_).light;p.referencePosition.value.setFromMatrixPosition(D.matrixWorld),p.nearDistance.value=D.shadow.camera.near,p.farDistance.value=D.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:s}}function Lu(t,e,n,i){let s={},r={},a=[];const o=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function c(D,T){const S=T.program;i.uniformBlockBinding(D,S)}function l(D,T){let S=s[D.id];S===void 0&&(f(D),S=u(D),s[D.id]=S,D.addEventListener("dispose",p));const L=T.program;i.updateUBOMapping(D,L);const A=e.render.frame;r[D.id]!==A&&(m(D),r[D.id]=A)}function u(D){const T=d();D.__bindingPointIndex=T;const S=t.createBuffer(),L=D.__size,A=D.usage;return t.bindBuffer(t.UNIFORM_BUFFER,S),t.bufferData(t.UNIFORM_BUFFER,L,A),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,T,S),S}function d(){for(let D=0;D<o;D++)if(a.indexOf(D)===-1)return a.push(D),D;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(D){const T=s[D.id],S=D.uniforms,L=D.__cache;t.bindBuffer(t.UNIFORM_BUFFER,T);for(let A=0,w=S.length;A<w;A++){const F=Array.isArray(S[A])?S[A]:[S[A]];for(let y=0,v=F.length;y<v;y++){const b=F[y];if(h(b,A,y,L)===!0){const q=b.__offset,W=Array.isArray(b.value)?b.value:[b.value];let z=0;for(let B=0;B<W.length;B++){const P=W[B],J=g(P);typeof P=="number"||typeof P=="boolean"?(b.__data[0]=P,t.bufferSubData(t.UNIFORM_BUFFER,q+z,b.__data)):P.isMatrix3?(b.__data[0]=P.elements[0],b.__data[1]=P.elements[1],b.__data[2]=P.elements[2],b.__data[3]=0,b.__data[4]=P.elements[3],b.__data[5]=P.elements[4],b.__data[6]=P.elements[5],b.__data[7]=0,b.__data[8]=P.elements[6],b.__data[9]=P.elements[7],b.__data[10]=P.elements[8],b.__data[11]=0):(P.toArray(b.__data,z),z+=J.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,q,b.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}function h(D,T,S,L){const A=D.value,w=T+"_"+S;if(L[w]===void 0)return typeof A=="number"||typeof A=="boolean"?L[w]=A:L[w]=A.clone(),!0;{const F=L[w];if(typeof A=="number"||typeof A=="boolean"){if(F!==A)return L[w]=A,!0}else if(F.equals(A)===!1)return F.copy(A),!0}return!1}function f(D){const T=D.uniforms;let S=0;const L=16;for(let w=0,F=T.length;w<F;w++){const y=Array.isArray(T[w])?T[w]:[T[w]];for(let v=0,b=y.length;v<b;v++){const q=y[v],W=Array.isArray(q.value)?q.value:[q.value];for(let z=0,B=W.length;z<B;z++){const P=W[z],J=g(P),R=S%L,$=R%J.boundary,Z=R+$;S+=$,Z!==0&&L-Z<J.storage&&(S+=L-Z),q.__data=new Float32Array(J.storage/Float32Array.BYTES_PER_ELEMENT),q.__offset=S,S+=J.storage}}}const A=S%L;return A>0&&(S+=L-A),D.__size=S,D.__cache={},this}function g(D){const T={boundary:0,storage:0};return typeof D=="number"||typeof D=="boolean"?(T.boundary=4,T.storage=4):D.isVector2?(T.boundary=8,T.storage=8):D.isVector3||D.isColor?(T.boundary=16,T.storage=12):D.isVector4?(T.boundary=16,T.storage=16):D.isMatrix3?(T.boundary=48,T.storage=48):D.isMatrix4?(T.boundary=64,T.storage=64):D.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",D),T}function p(D){const T=D.target;T.removeEventListener("dispose",p);const S=a.indexOf(T.__bindingPointIndex);a.splice(S,1),t.deleteBuffer(s[T.id]),delete s[T.id],delete r[T.id]}function _(){for(const D in s)t.deleteBuffer(s[D]);a=[],s={},r={}}return{bind:c,update:l,dispose:_}}class Pu{constructor(e={}){const{canvas:n=ic(),context:i=null,depth:s=!0,stencil:r=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:d=!1,reverseDepthBuffer:m=!1}=e;this.isWebGLRenderer=!0;let h;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");h=i.getContextAttributes().alpha}else h=a;const f=new Uint32Array(4),g=new Int32Array(4);let p=null,_=null;const D=[],T=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Kn,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const S=this;let L=!1;this._outputColorSpace=jt;let A=0,w=0,F=null,y=-1,v=null;const b=new xt,q=new xt;let W=null;const z=new $e(0);let B=0,P=n.width,J=n.height,R=1,$=null,Z=null;const se=new xt(0,0,P,J),ve=new xt(0,0,P,J);let we=!1;const Q=new m5;let te=!1,pe=!1;const re=new mt,Te=new mt,Je=new O,xe=new xt,tt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let st=!1;function We(){return F===null?R:1}let C=i;function Zt(x,I){return n.getContext(x,I)}try{const x={alpha:!0,depth:s,stencil:r,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:d};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${R1}`),n.addEventListener("webglcontextlost",K,!1),n.addEventListener("webglcontextrestored",de,!1),n.addEventListener("webglcontextcreationerror",ue,!1),C===null){const I="webgl2";if(C=Zt(I,x),C===null)throw Zt(I)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(x){throw console.error("THREE.WebGLRenderer: "+x.message),x}let Ye,Xe,Ee,dt,ye,E,M,G,j,ee,Y,Se,ce,Ce,Ue,ne,ge,Ie,Be,_e,qe,ke,ht,U;function le(){Ye=new k9(C),Ye.init(),ke=new Eu(C,Ye),Xe=new O9(C,Ye,e,ke),Ee=new Tu(C,Ye),Xe.reverseDepthBuffer&&m&&Ee.buffers.depth.setReversed(!0),dt=new W9(C),ye=new lu,E=new yu(C,Ye,Ee,ye,Xe,ke,dt),M=new F9(S),G=new H9(S),j=new jc(C),ht=new U9(C,j),ee=new V9(C,j,dt,ht),Y=new X9(C,ee,j,dt),Be=new Q9(C,Xe,E),ne=new N9(ye),Se=new cu(S,M,G,Ye,Xe,ht,ne),ce=new Ru(S,ye),Ce=new hu,Ue=new _u(Ye),Ie=new P9(S,M,G,Ee,Y,h,c),ge=new xu(S,Y,Xe),U=new Lu(C,dt,Xe,Ee),_e=new I9(C,Ye,dt),qe=new J9(C,Ye,dt),dt.programs=Se.programs,S.capabilities=Xe,S.extensions=Ye,S.properties=ye,S.renderLists=Ce,S.shadowMap=ge,S.state=Ee,S.info=dt}le();const X=new wu(S,C);this.xr=X,this.getContext=function(){return C},this.getContextAttributes=function(){return C.getContextAttributes()},this.forceContextLoss=function(){const x=Ye.get("WEBGL_lose_context");x&&x.loseContext()},this.forceContextRestore=function(){const x=Ye.get("WEBGL_lose_context");x&&x.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(x){x!==void 0&&(R=x,this.setSize(P,J,!1))},this.getSize=function(x){return x.set(P,J)},this.setSize=function(x,I,k=!0){if(X.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}P=x,J=I,n.width=Math.floor(x*R),n.height=Math.floor(I*R),k===!0&&(n.style.width=x+"px",n.style.height=I+"px"),this.setViewport(0,0,x,I)},this.getDrawingBufferSize=function(x){return x.set(P*R,J*R).floor()},this.setDrawingBufferSize=function(x,I,k){P=x,J=I,R=k,n.width=Math.floor(x*k),n.height=Math.floor(I*k),this.setViewport(0,0,x,I)},this.getCurrentViewport=function(x){return x.copy(b)},this.getViewport=function(x){return x.copy(se)},this.setViewport=function(x,I,k,V){x.isVector4?se.set(x.x,x.y,x.z,x.w):se.set(x,I,k,V),Ee.viewport(b.copy(se).multiplyScalar(R).round())},this.getScissor=function(x){return x.copy(ve)},this.setScissor=function(x,I,k,V){x.isVector4?ve.set(x.x,x.y,x.z,x.w):ve.set(x,I,k,V),Ee.scissor(q.copy(ve).multiplyScalar(R).round())},this.getScissorTest=function(){return we},this.setScissorTest=function(x){Ee.setScissorTest(we=x)},this.setOpaqueSort=function(x){$=x},this.setTransparentSort=function(x){Z=x},this.getClearColor=function(x){return x.copy(Ie.getClearColor())},this.setClearColor=function(){Ie.setClearColor(...arguments)},this.getClearAlpha=function(){return Ie.getClearAlpha()},this.setClearAlpha=function(){Ie.setClearAlpha(...arguments)},this.clear=function(x=!0,I=!0,k=!0){let V=0;if(x){let N=!1;if(F!==null){const ie=F.texture.format;N=ie===N1||ie===O1||ie===I1}if(N){const ie=F.texture.type,oe=ie===Bn||ie===Di||ie===nr||ie===ir||ie===P1||ie===U1,me=Ie.getClearColor(),Me=Ie.getClearAlpha(),ze=me.r,Ne=me.g,Ae=me.b;oe?(f[0]=ze,f[1]=Ne,f[2]=Ae,f[3]=Me,C.clearBufferuiv(C.COLOR,0,f)):(g[0]=ze,g[1]=Ne,g[2]=Ae,g[3]=Me,C.clearBufferiv(C.COLOR,0,g))}else V|=C.COLOR_BUFFER_BIT}I&&(V|=C.DEPTH_BUFFER_BIT),k&&(V|=C.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),C.clear(V)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",K,!1),n.removeEventListener("webglcontextrestored",de,!1),n.removeEventListener("webglcontextcreationerror",ue,!1),Ie.dispose(),Ce.dispose(),Ue.dispose(),ye.dispose(),M.dispose(),G.dispose(),Y.dispose(),ht.dispose(),U.dispose(),Se.dispose(),X.dispose(),X.removeEventListener("sessionstart",M2),X.removeEventListener("sessionend",v2),oi.stop()};function K(x){x.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),L=!0}function de(){console.log("THREE.WebGLRenderer: Context Restored."),L=!1;const x=dt.autoReset,I=ge.enabled,k=ge.autoUpdate,V=ge.needsUpdate,N=ge.type;le(),dt.autoReset=x,ge.enabled=I,ge.autoUpdate=k,ge.needsUpdate=V,ge.type=N}function ue(x){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",x.statusMessage)}function Ge(x){const I=x.target;I.removeEventListener("dispose",Ge),_t(I)}function _t(x){Ut(x),ye.remove(x)}function Ut(x){const I=ye.get(x).programs;I!==void 0&&(I.forEach(function(k){Se.releaseProgram(k)}),x.isShaderMaterial&&Se.releaseShaderCache(x))}this.renderBufferDirect=function(x,I,k,V,N,ie){I===null&&(I=tt);const oe=N.isMesh&&N.matrixWorld.determinant()<0,me=W0(x,I,k,V,N);Ee.setMaterial(V,oe);let Me=k.index,ze=1;if(V.wireframe===!0){if(Me=ee.getWireframeAttribute(k),Me===void 0)return;ze=2}const Ne=k.drawRange,Ae=k.attributes.position;let je=Ne.start*ze,nt=(Ne.start+Ne.count)*ze;ie!==null&&(je=Math.max(je,ie.start*ze),nt=Math.min(nt,(ie.start+ie.count)*ze)),Me!==null?(je=Math.max(je,0),nt=Math.min(nt,Me.count)):Ae!=null&&(je=Math.max(je,0),nt=Math.min(nt,Ae.count));const Tt=nt-je;if(Tt<0||Tt===1/0)return;ht.setup(N,V,me,k,Me);let Mt,Ke=_e;if(Me!==null&&(Mt=j.get(Me),Ke=qe,Ke.setIndex(Mt)),N.isMesh)V.wireframe===!0?(Ee.setLineWidth(V.wireframeLinewidth*We()),Ke.setMode(C.LINES)):Ke.setMode(C.TRIANGLES);else if(N.isLine){let be=V.linewidth;be===void 0&&(be=1),Ee.setLineWidth(be*We()),N.isLineSegments?Ke.setMode(C.LINES):N.isLineLoop?Ke.setMode(C.LINE_LOOP):Ke.setMode(C.LINE_STRIP)}else N.isPoints?Ke.setMode(C.POINTS):N.isSprite&&Ke.setMode(C.TRIANGLES);if(N.isBatchedMesh)if(N._multiDrawInstances!==null)ua("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Ke.renderMultiDrawInstances(N._multiDrawStarts,N._multiDrawCounts,N._multiDrawCount,N._multiDrawInstances);else if(Ye.get("WEBGL_multi_draw"))Ke.renderMultiDraw(N._multiDrawStarts,N._multiDrawCounts,N._multiDrawCount);else{const be=N._multiDrawStarts,Pt=N._multiDrawCounts,it=N._multiDrawCount,un=Me?j.get(Me).bytesPerElement:1,as=ye.get(V).currentProgram.getUniforms();for(let Xt=0;Xt<it;Xt++)as.setValue(C,"_gl_DrawID",Xt),Ke.render(be[Xt]/un,Pt[Xt])}else if(N.isInstancedMesh)Ke.renderInstances(je,Tt,N.count);else if(k.isInstancedBufferGeometry){const be=k._maxInstanceCount!==void 0?k._maxInstanceCount:1/0,Pt=Math.min(k.instanceCount,be);Ke.renderInstances(je,Tt,Pt)}else Ke.render(je,Tt)};function rt(x,I,k){x.transparent===!0&&x.side===Ln&&x.forceSinglePass===!1?(x.side=Ft,x.needsUpdate=!0,br(x,I,k),x.side=ei,x.needsUpdate=!0,br(x,I,k),x.side=Ln):br(x,I,k)}this.compile=function(x,I,k=null){k===null&&(k=x),_=Ue.get(k),_.init(I),T.push(_),k.traverseVisible(function(N){N.isLight&&N.layers.test(I.layers)&&(_.pushLight(N),N.castShadow&&_.pushShadow(N))}),x!==k&&x.traverseVisible(function(N){N.isLight&&N.layers.test(I.layers)&&(_.pushLight(N),N.castShadow&&_.pushShadow(N))}),_.setupLights();const V=new Set;return x.traverse(function(N){if(!(N.isMesh||N.isPoints||N.isLine||N.isSprite))return;const ie=N.material;if(ie)if(Array.isArray(ie))for(let oe=0;oe<ie.length;oe++){const me=ie[oe];rt(me,k,N),V.add(me)}else rt(ie,k,N),V.add(ie)}),_=T.pop(),V},this.compileAsync=function(x,I,k=null){const V=this.compile(x,I,k);return new Promise(N=>{function ie(){if(V.forEach(function(oe){ye.get(oe).currentProgram.isReady()&&V.delete(oe)}),V.size===0){N(x);return}setTimeout(ie,10)}Ye.get("KHR_parallel_shader_compile")!==null?ie():setTimeout(ie,10)})};let ln=null;function En(x){ln&&ln(x)}function M2(){oi.stop()}function v2(){oi.start()}const oi=new _5;oi.setAnimationLoop(En),typeof self<"u"&&oi.setContext(self),this.setAnimationLoop=function(x){ln=x,X.setAnimationLoop(x),x===null?oi.stop():oi.start()},X.addEventListener("sessionstart",M2),X.addEventListener("sessionend",v2),this.render=function(x,I){if(I!==void 0&&I.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(L===!0)return;if(x.matrixWorldAutoUpdate===!0&&x.updateMatrixWorld(),I.parent===null&&I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),X.enabled===!0&&X.isPresenting===!0&&(X.cameraAutoUpdate===!0&&X.updateCamera(I),I=X.getCamera()),x.isScene===!0&&x.onBeforeRender(S,x,I,F),_=Ue.get(x,T.length),_.init(I),T.push(_),Te.multiplyMatrices(I.projectionMatrix,I.matrixWorldInverse),Q.setFromProjectionMatrix(Te),pe=this.localClippingEnabled,te=ne.init(this.clippingPlanes,pe),p=Ce.get(x,D.length),p.init(),D.push(p),X.enabled===!0&&X.isPresenting===!0){const ie=S.xr.getDepthSensingMesh();ie!==null&&to(ie,I,-1/0,S.sortObjects)}to(x,I,0,S.sortObjects),p.finish(),S.sortObjects===!0&&p.sort($,Z),st=X.enabled===!1||X.isPresenting===!1||X.hasDepthSensing()===!1,st&&Ie.addToRenderList(p,x),this.info.render.frame++,te===!0&&ne.beginShadows();const k=_.state.shadowsArray;ge.render(k,x,I),te===!0&&ne.endShadows(),this.info.autoReset===!0&&this.info.reset();const V=p.opaque,N=p.transmissive;if(_.setupLights(),I.isArrayCamera){const ie=I.cameras;if(N.length>0)for(let oe=0,me=ie.length;oe<me;oe++){const Me=ie[oe];S2(V,N,x,Me)}st&&Ie.render(x);for(let oe=0,me=ie.length;oe<me;oe++){const Me=ie[oe];x2(p,x,Me,Me.viewport)}}else N.length>0&&S2(V,N,x,I),st&&Ie.render(x),x2(p,x,I);F!==null&&w===0&&(E.updateMultisampleRenderTarget(F),E.updateRenderTargetMipmap(F)),x.isScene===!0&&x.onAfterRender(S,x,I),ht.resetDefaultState(),y=-1,v=null,T.pop(),T.length>0?(_=T[T.length-1],te===!0&&ne.setGlobalState(S.clippingPlanes,_.state.camera)):_=null,D.pop(),D.length>0?p=D[D.length-1]:p=null};function to(x,I,k,V){if(x.visible===!1)return;if(x.layers.test(I.layers)){if(x.isGroup)k=x.renderOrder;else if(x.isLOD)x.autoUpdate===!0&&x.update(I);else if(x.isLight)_.pushLight(x),x.castShadow&&_.pushShadow(x);else if(x.isSprite){if(!x.frustumCulled||Q.intersectsSprite(x)){V&&xe.setFromMatrixPosition(x.matrixWorld).applyMatrix4(Te);const oe=Y.update(x),me=x.material;me.visible&&p.push(x,oe,me,k,xe.z,null)}}else if((x.isMesh||x.isLine||x.isPoints)&&(!x.frustumCulled||Q.intersectsObject(x))){const oe=Y.update(x),me=x.material;if(V&&(x.boundingSphere!==void 0?(x.boundingSphere===null&&x.computeBoundingSphere(),xe.copy(x.boundingSphere.center)):(oe.boundingSphere===null&&oe.computeBoundingSphere(),xe.copy(oe.boundingSphere.center)),xe.applyMatrix4(x.matrixWorld).applyMatrix4(Te)),Array.isArray(me)){const Me=oe.groups;for(let ze=0,Ne=Me.length;ze<Ne;ze++){const Ae=Me[ze],je=me[Ae.materialIndex];je&&je.visible&&p.push(x,oe,je,k,xe.z,Ae)}}else me.visible&&p.push(x,oe,me,k,xe.z,null)}}const ie=x.children;for(let oe=0,me=ie.length;oe<me;oe++)to(ie[oe],I,k,V)}function x2(x,I,k,V){const N=x.opaque,ie=x.transmissive,oe=x.transparent;_.setupLightsView(k),te===!0&&ne.setGlobalState(S.clippingPlanes,k),V&&Ee.viewport(b.copy(V)),N.length>0&&Ar(N,I,k),ie.length>0&&Ar(ie,I,k),oe.length>0&&Ar(oe,I,k),Ee.buffers.depth.setTest(!0),Ee.buffers.depth.setMask(!0),Ee.buffers.color.setMask(!0),Ee.setPolygonOffset(!1)}function S2(x,I,k,V){if((k.isScene===!0?k.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[V.id]===void 0&&(_.state.transmissionRenderTarget[V.id]=new Ai(1,1,{generateMipmaps:!0,type:Ye.has("EXT_color_buffer_half_float")||Ye.has("EXT_color_buffer_float")?lr:Bn,minFilter:Ti,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:et.workingColorSpace}));const ie=_.state.transmissionRenderTarget[V.id],oe=V.viewport||b;ie.setSize(oe.z*S.transmissionResolutionScale,oe.w*S.transmissionResolutionScale);const me=S.getRenderTarget();S.setRenderTarget(ie),S.getClearColor(z),B=S.getClearAlpha(),B<1&&S.setClearColor(16777215,.5),S.clear(),st&&Ie.render(k);const Me=S.toneMapping;S.toneMapping=Kn;const ze=V.viewport;if(V.viewport!==void 0&&(V.viewport=void 0),_.setupLightsView(V),te===!0&&ne.setGlobalState(S.clippingPlanes,V),Ar(x,k,V),E.updateMultisampleRenderTarget(ie),E.updateRenderTargetMipmap(ie),Ye.has("WEBGL_multisampled_render_to_texture")===!1){let Ne=!1;for(let Ae=0,je=I.length;Ae<je;Ae++){const nt=I[Ae],Tt=nt.object,Mt=nt.geometry,Ke=nt.material,be=nt.group;if(Ke.side===Ln&&Tt.layers.test(V.layers)){const Pt=Ke.side;Ke.side=Ft,Ke.needsUpdate=!0,T2(Tt,k,V,Mt,Ke,be),Ke.side=Pt,Ke.needsUpdate=!0,Ne=!0}}Ne===!0&&(E.updateMultisampleRenderTarget(ie),E.updateRenderTargetMipmap(ie))}S.setRenderTarget(me),S.setClearColor(z,B),ze!==void 0&&(V.viewport=ze),S.toneMapping=Me}function Ar(x,I,k){const V=I.isScene===!0?I.overrideMaterial:null;for(let N=0,ie=x.length;N<ie;N++){const oe=x[N],me=oe.object,Me=oe.geometry,ze=oe.group;let Ne=oe.material;Ne.allowOverride===!0&&V!==null&&(Ne=V),me.layers.test(k.layers)&&T2(me,I,k,Me,Ne,ze)}}function T2(x,I,k,V,N,ie){x.onBeforeRender(S,I,k,V,N,ie),x.modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,x.matrixWorld),x.normalMatrix.getNormalMatrix(x.modelViewMatrix),N.onBeforeRender(S,I,k,V,x,ie),N.transparent===!0&&N.side===Ln&&N.forceSinglePass===!1?(N.side=Ft,N.needsUpdate=!0,S.renderBufferDirect(k,I,V,N,x,ie),N.side=ei,N.needsUpdate=!0,S.renderBufferDirect(k,I,V,N,x,ie),N.side=Ln):S.renderBufferDirect(k,I,V,N,x,ie),x.onAfterRender(S,I,k,V,N,ie)}function br(x,I,k){I.isScene!==!0&&(I=tt);const V=ye.get(x),N=_.state.lights,ie=_.state.shadowsArray,oe=N.state.version,me=Se.getParameters(x,N.state,ie,I,k),Me=Se.getProgramCacheKey(me);let ze=V.programs;V.environment=x.isMeshStandardMaterial?I.environment:null,V.fog=I.fog,V.envMap=(x.isMeshStandardMaterial?G:M).get(x.envMap||V.environment),V.envMapRotation=V.environment!==null&&x.envMap===null?I.environmentRotation:x.envMapRotation,ze===void 0&&(x.addEventListener("dispose",Ge),ze=new Map,V.programs=ze);let Ne=ze.get(Me);if(Ne!==void 0){if(V.currentProgram===Ne&&V.lightsStateVersion===oe)return E2(x,me),Ne}else me.uniforms=Se.getUniforms(x),x.onBeforeCompile(me,S),Ne=Se.acquireProgram(me,Me),ze.set(Me,Ne),V.uniforms=me.uniforms;const Ae=V.uniforms;return(!x.isShaderMaterial&&!x.isRawShaderMaterial||x.clipping===!0)&&(Ae.clippingPlanes=ne.uniform),E2(x,me),V.needsLights=X0(x),V.lightsStateVersion=oe,V.needsLights&&(Ae.ambientLightColor.value=N.state.ambient,Ae.lightProbe.value=N.state.probe,Ae.directionalLights.value=N.state.directional,Ae.directionalLightShadows.value=N.state.directionalShadow,Ae.spotLights.value=N.state.spot,Ae.spotLightShadows.value=N.state.spotShadow,Ae.rectAreaLights.value=N.state.rectArea,Ae.ltc_1.value=N.state.rectAreaLTC1,Ae.ltc_2.value=N.state.rectAreaLTC2,Ae.pointLights.value=N.state.point,Ae.pointLightShadows.value=N.state.pointShadow,Ae.hemisphereLights.value=N.state.hemi,Ae.directionalShadowMap.value=N.state.directionalShadowMap,Ae.directionalShadowMatrix.value=N.state.directionalShadowMatrix,Ae.spotShadowMap.value=N.state.spotShadowMap,Ae.spotLightMatrix.value=N.state.spotLightMatrix,Ae.spotLightMap.value=N.state.spotLightMap,Ae.pointShadowMap.value=N.state.pointShadowMap,Ae.pointShadowMatrix.value=N.state.pointShadowMatrix),V.currentProgram=Ne,V.uniformsList=null,Ne}function y2(x){if(x.uniformsList===null){const I=x.currentProgram.getUniforms();x.uniformsList=ha.seqWithValue(I.seq,x.uniforms)}return x.uniformsList}function E2(x,I){const k=ye.get(x);k.outputColorSpace=I.outputColorSpace,k.batching=I.batching,k.batchingColor=I.batchingColor,k.instancing=I.instancing,k.instancingColor=I.instancingColor,k.instancingMorph=I.instancingMorph,k.skinning=I.skinning,k.morphTargets=I.morphTargets,k.morphNormals=I.morphNormals,k.morphColors=I.morphColors,k.morphTargetsCount=I.morphTargetsCount,k.numClippingPlanes=I.numClippingPlanes,k.numIntersection=I.numClipIntersection,k.vertexAlphas=I.vertexAlphas,k.vertexTangents=I.vertexTangents,k.toneMapping=I.toneMapping}function W0(x,I,k,V,N){I.isScene!==!0&&(I=tt),E.resetTextureUnits();const ie=I.fog,oe=V.isMeshStandardMaterial?I.environment:null,me=F===null?S.outputColorSpace:F.isXRRenderTarget===!0?F.texture.colorSpace:Us,Me=(V.isMeshStandardMaterial?G:M).get(V.envMap||oe),ze=V.vertexColors===!0&&!!k.attributes.color&&k.attributes.color.itemSize===4,Ne=!!k.attributes.tangent&&(!!V.normalMap||V.anisotropy>0),Ae=!!k.morphAttributes.position,je=!!k.morphAttributes.normal,nt=!!k.morphAttributes.color;let Tt=Kn;V.toneMapped&&(F===null||F.isXRRenderTarget===!0)&&(Tt=S.toneMapping);const Mt=k.morphAttributes.position||k.morphAttributes.normal||k.morphAttributes.color,Ke=Mt!==void 0?Mt.length:0,be=ye.get(V),Pt=_.state.lights;if(te===!0&&(pe===!0||x!==v)){const Gt=x===v&&V.id===y;ne.setState(V,x,Gt)}let it=!1;V.version===be.__version?(be.needsLights&&be.lightsStateVersion!==Pt.state.version||be.outputColorSpace!==me||N.isBatchedMesh&&be.batching===!1||!N.isBatchedMesh&&be.batching===!0||N.isBatchedMesh&&be.batchingColor===!0&&N.colorTexture===null||N.isBatchedMesh&&be.batchingColor===!1&&N.colorTexture!==null||N.isInstancedMesh&&be.instancing===!1||!N.isInstancedMesh&&be.instancing===!0||N.isSkinnedMesh&&be.skinning===!1||!N.isSkinnedMesh&&be.skinning===!0||N.isInstancedMesh&&be.instancingColor===!0&&N.instanceColor===null||N.isInstancedMesh&&be.instancingColor===!1&&N.instanceColor!==null||N.isInstancedMesh&&be.instancingMorph===!0&&N.morphTexture===null||N.isInstancedMesh&&be.instancingMorph===!1&&N.morphTexture!==null||be.envMap!==Me||V.fog===!0&&be.fog!==ie||be.numClippingPlanes!==void 0&&(be.numClippingPlanes!==ne.numPlanes||be.numIntersection!==ne.numIntersection)||be.vertexAlphas!==ze||be.vertexTangents!==Ne||be.morphTargets!==Ae||be.morphNormals!==je||be.morphColors!==nt||be.toneMapping!==Tt||be.morphTargetsCount!==Ke)&&(it=!0):(it=!0,be.__version=V.version);let un=be.currentProgram;it===!0&&(un=br(V,I,N));let as=!1,Xt=!1,Gs=!1;const pt=un.getUniforms(),Kt=be.uniforms;if(Ee.useProgram(un.program)&&(as=!0,Xt=!0,Gs=!0),V.id!==y&&(y=V.id,Xt=!0),as||v!==x){Ee.buffers.depth.getReversed()?(re.copy(x.projectionMatrix),rc(re),ac(re),pt.setValue(C,"projectionMatrix",re)):pt.setValue(C,"projectionMatrix",x.projectionMatrix),pt.setValue(C,"viewMatrix",x.matrixWorldInverse);const Vt=pt.map.cameraPosition;Vt!==void 0&&Vt.setValue(C,Je.setFromMatrixPosition(x.matrixWorld)),Xe.logarithmicDepthBuffer&&pt.setValue(C,"logDepthBufFC",2/(Math.log(x.far+1)/Math.LN2)),(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial)&&pt.setValue(C,"isOrthographic",x.isOrthographicCamera===!0),v!==x&&(v=x,Xt=!0,Gs=!0)}if(N.isSkinnedMesh){pt.setOptional(C,N,"bindMatrix"),pt.setOptional(C,N,"bindMatrixInverse");const Gt=N.skeleton;Gt&&(Gt.boneTexture===null&&Gt.computeBoneTexture(),pt.setValue(C,"boneTexture",Gt.boneTexture,E))}N.isBatchedMesh&&(pt.setOptional(C,N,"batchingTexture"),pt.setValue(C,"batchingTexture",N._matricesTexture,E),pt.setOptional(C,N,"batchingIdTexture"),pt.setValue(C,"batchingIdTexture",N._indirectTexture,E),pt.setOptional(C,N,"batchingColorTexture"),N._colorsTexture!==null&&pt.setValue(C,"batchingColorTexture",N._colorsTexture,E));const en=k.morphAttributes;if((en.position!==void 0||en.normal!==void 0||en.color!==void 0)&&Be.update(N,k,un),(Xt||be.receiveShadow!==N.receiveShadow)&&(be.receiveShadow=N.receiveShadow,pt.setValue(C,"receiveShadow",N.receiveShadow)),V.isMeshGouraudMaterial&&V.envMap!==null&&(Kt.envMap.value=Me,Kt.flipEnvMap.value=Me.isCubeTexture&&Me.isRenderTargetTexture===!1?-1:1),V.isMeshStandardMaterial&&V.envMap===null&&I.environment!==null&&(Kt.envMapIntensity.value=I.environmentIntensity),Xt&&(pt.setValue(C,"toneMappingExposure",S.toneMappingExposure),be.needsLights&&Q0(Kt,Gs),ie&&V.fog===!0&&ce.refreshFogUniforms(Kt,ie),ce.refreshMaterialUniforms(Kt,V,R,J,_.state.transmissionRenderTarget[x.id]),ha.upload(C,y2(be),Kt,E)),V.isShaderMaterial&&V.uniformsNeedUpdate===!0&&(ha.upload(C,y2(be),Kt,E),V.uniformsNeedUpdate=!1),V.isSpriteMaterial&&pt.setValue(C,"center",N.center),pt.setValue(C,"modelViewMatrix",N.modelViewMatrix),pt.setValue(C,"normalMatrix",N.normalMatrix),pt.setValue(C,"modelMatrix",N.matrixWorld),V.isShaderMaterial||V.isRawShaderMaterial){const Gt=V.uniformsGroups;for(let Vt=0,no=Gt.length;Vt<no;Vt++){const ci=Gt[Vt];U.update(ci,un),U.bind(ci,un)}}return un}function Q0(x,I){x.ambientLightColor.needsUpdate=I,x.lightProbe.needsUpdate=I,x.directionalLights.needsUpdate=I,x.directionalLightShadows.needsUpdate=I,x.pointLights.needsUpdate=I,x.pointLightShadows.needsUpdate=I,x.spotLights.needsUpdate=I,x.spotLightShadows.needsUpdate=I,x.rectAreaLights.needsUpdate=I,x.hemisphereLights.needsUpdate=I}function X0(x){return x.isMeshLambertMaterial||x.isMeshToonMaterial||x.isMeshPhongMaterial||x.isMeshStandardMaterial||x.isShadowMaterial||x.isShaderMaterial&&x.lights===!0}this.getActiveCubeFace=function(){return A},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return F},this.setRenderTargetTextures=function(x,I,k){const V=ye.get(x);V.__autoAllocateDepthBuffer=x.resolveDepthBuffer===!1,V.__autoAllocateDepthBuffer===!1&&(V.__useRenderToTexture=!1),ye.get(x.texture).__webglTexture=I,ye.get(x.depthTexture).__webglTexture=V.__autoAllocateDepthBuffer?void 0:k,V.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(x,I){const k=ye.get(x);k.__webglFramebuffer=I,k.__useDefaultFramebuffer=I===void 0};const q0=C.createFramebuffer();this.setRenderTarget=function(x,I=0,k=0){F=x,A=I,w=k;let V=!0,N=null,ie=!1,oe=!1;if(x){const Me=ye.get(x);if(Me.__useDefaultFramebuffer!==void 0)Ee.bindFramebuffer(C.FRAMEBUFFER,null),V=!1;else if(Me.__webglFramebuffer===void 0)E.setupRenderTarget(x);else if(Me.__hasExternalTextures)E.rebindTextures(x,ye.get(x.texture).__webglTexture,ye.get(x.depthTexture).__webglTexture);else if(x.depthBuffer){const Ae=x.depthTexture;if(Me.__boundDepthTexture!==Ae){if(Ae!==null&&ye.has(Ae)&&(x.width!==Ae.image.width||x.height!==Ae.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");E.setupDepthRenderbuffer(x)}}const ze=x.texture;(ze.isData3DTexture||ze.isDataArrayTexture||ze.isCompressedArrayTexture)&&(oe=!0);const Ne=ye.get(x).__webglFramebuffer;x.isWebGLCubeRenderTarget?(Array.isArray(Ne[I])?N=Ne[I][k]:N=Ne[I],ie=!0):x.samples>0&&E.useMultisampledRTT(x)===!1?N=ye.get(x).__webglMultisampledFramebuffer:Array.isArray(Ne)?N=Ne[k]:N=Ne,b.copy(x.viewport),q.copy(x.scissor),W=x.scissorTest}else b.copy(se).multiplyScalar(R).floor(),q.copy(ve).multiplyScalar(R).floor(),W=we;if(k!==0&&(N=q0),Ee.bindFramebuffer(C.FRAMEBUFFER,N)&&V&&Ee.drawBuffers(x,N),Ee.viewport(b),Ee.scissor(q),Ee.setScissorTest(W),ie){const Me=ye.get(x.texture);C.framebufferTexture2D(C.FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_CUBE_MAP_POSITIVE_X+I,Me.__webglTexture,k)}else if(oe){const Me=ye.get(x.texture),ze=I;C.framebufferTextureLayer(C.FRAMEBUFFER,C.COLOR_ATTACHMENT0,Me.__webglTexture,k,ze)}else if(x!==null&&k!==0){const Me=ye.get(x.texture);C.framebufferTexture2D(C.FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_2D,Me.__webglTexture,k)}y=-1},this.readRenderTargetPixels=function(x,I,k,V,N,ie,oe){if(!(x&&x.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let me=ye.get(x).__webglFramebuffer;if(x.isWebGLCubeRenderTarget&&oe!==void 0&&(me=me[oe]),me){Ee.bindFramebuffer(C.FRAMEBUFFER,me);try{const Me=x.texture,ze=Me.format,Ne=Me.type;if(!Xe.textureFormatReadable(ze)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Xe.textureTypeReadable(Ne)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}I>=0&&I<=x.width-V&&k>=0&&k<=x.height-N&&C.readPixels(I,k,V,N,ke.convert(ze),ke.convert(Ne),ie)}finally{const Me=F!==null?ye.get(F).__webglFramebuffer:null;Ee.bindFramebuffer(C.FRAMEBUFFER,Me)}}},this.readRenderTargetPixelsAsync=async function(x,I,k,V,N,ie,oe){if(!(x&&x.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let me=ye.get(x).__webglFramebuffer;if(x.isWebGLCubeRenderTarget&&oe!==void 0&&(me=me[oe]),me)if(I>=0&&I<=x.width-V&&k>=0&&k<=x.height-N){Ee.bindFramebuffer(C.FRAMEBUFFER,me);const Me=x.texture,ze=Me.format,Ne=Me.type;if(!Xe.textureFormatReadable(ze))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Xe.textureTypeReadable(Ne))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Ae=C.createBuffer();C.bindBuffer(C.PIXEL_PACK_BUFFER,Ae),C.bufferData(C.PIXEL_PACK_BUFFER,ie.byteLength,C.STREAM_READ),C.readPixels(I,k,V,N,ke.convert(ze),ke.convert(Ne),0);const je=F!==null?ye.get(F).__webglFramebuffer:null;Ee.bindFramebuffer(C.FRAMEBUFFER,je);const nt=C.fenceSync(C.SYNC_GPU_COMMANDS_COMPLETE,0);return C.flush(),await sc(C,nt,4),C.bindBuffer(C.PIXEL_PACK_BUFFER,Ae),C.getBufferSubData(C.PIXEL_PACK_BUFFER,0,ie),C.deleteBuffer(Ae),C.deleteSync(nt),ie}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(x,I=null,k=0){const V=Math.pow(2,-k),N=Math.floor(x.image.width*V),ie=Math.floor(x.image.height*V),oe=I!==null?I.x:0,me=I!==null?I.y:0;E.setTexture2D(x,0),C.copyTexSubImage2D(C.TEXTURE_2D,k,0,0,oe,me,N,ie),Ee.unbindTexture()};const $0=C.createFramebuffer(),Y0=C.createFramebuffer();this.copyTextureToTexture=function(x,I,k=null,V=null,N=0,ie=null){ie===null&&(N!==0?(ua("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ie=N,N=0):ie=0);let oe,me,Me,ze,Ne,Ae,je,nt,Tt;const Mt=x.isCompressedTexture?x.mipmaps[ie]:x.image;if(k!==null)oe=k.max.x-k.min.x,me=k.max.y-k.min.y,Me=k.isBox3?k.max.z-k.min.z:1,ze=k.min.x,Ne=k.min.y,Ae=k.isBox3?k.min.z:0;else{const en=Math.pow(2,-N);oe=Math.floor(Mt.width*en),me=Math.floor(Mt.height*en),x.isDataArrayTexture?Me=Mt.depth:x.isData3DTexture?Me=Math.floor(Mt.depth*en):Me=1,ze=0,Ne=0,Ae=0}V!==null?(je=V.x,nt=V.y,Tt=V.z):(je=0,nt=0,Tt=0);const Ke=ke.convert(I.format),be=ke.convert(I.type);let Pt;I.isData3DTexture?(E.setTexture3D(I,0),Pt=C.TEXTURE_3D):I.isDataArrayTexture||I.isCompressedArrayTexture?(E.setTexture2DArray(I,0),Pt=C.TEXTURE_2D_ARRAY):(E.setTexture2D(I,0),Pt=C.TEXTURE_2D),C.pixelStorei(C.UNPACK_FLIP_Y_WEBGL,I.flipY),C.pixelStorei(C.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),C.pixelStorei(C.UNPACK_ALIGNMENT,I.unpackAlignment);const it=C.getParameter(C.UNPACK_ROW_LENGTH),un=C.getParameter(C.UNPACK_IMAGE_HEIGHT),as=C.getParameter(C.UNPACK_SKIP_PIXELS),Xt=C.getParameter(C.UNPACK_SKIP_ROWS),Gs=C.getParameter(C.UNPACK_SKIP_IMAGES);C.pixelStorei(C.UNPACK_ROW_LENGTH,Mt.width),C.pixelStorei(C.UNPACK_IMAGE_HEIGHT,Mt.height),C.pixelStorei(C.UNPACK_SKIP_PIXELS,ze),C.pixelStorei(C.UNPACK_SKIP_ROWS,Ne),C.pixelStorei(C.UNPACK_SKIP_IMAGES,Ae);const pt=x.isDataArrayTexture||x.isData3DTexture,Kt=I.isDataArrayTexture||I.isData3DTexture;if(x.isDepthTexture){const en=ye.get(x),Gt=ye.get(I),Vt=ye.get(en.__renderTarget),no=ye.get(Gt.__renderTarget);Ee.bindFramebuffer(C.READ_FRAMEBUFFER,Vt.__webglFramebuffer),Ee.bindFramebuffer(C.DRAW_FRAMEBUFFER,no.__webglFramebuffer);for(let ci=0;ci<Me;ci++)pt&&(C.framebufferTextureLayer(C.READ_FRAMEBUFFER,C.COLOR_ATTACHMENT0,ye.get(x).__webglTexture,N,Ae+ci),C.framebufferTextureLayer(C.DRAW_FRAMEBUFFER,C.COLOR_ATTACHMENT0,ye.get(I).__webglTexture,ie,Tt+ci)),C.blitFramebuffer(ze,Ne,oe,me,je,nt,oe,me,C.DEPTH_BUFFER_BIT,C.NEAREST);Ee.bindFramebuffer(C.READ_FRAMEBUFFER,null),Ee.bindFramebuffer(C.DRAW_FRAMEBUFFER,null)}else if(N!==0||x.isRenderTargetTexture||ye.has(x)){const en=ye.get(x),Gt=ye.get(I);Ee.bindFramebuffer(C.READ_FRAMEBUFFER,$0),Ee.bindFramebuffer(C.DRAW_FRAMEBUFFER,Y0);for(let Vt=0;Vt<Me;Vt++)pt?C.framebufferTextureLayer(C.READ_FRAMEBUFFER,C.COLOR_ATTACHMENT0,en.__webglTexture,N,Ae+Vt):C.framebufferTexture2D(C.READ_FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_2D,en.__webglTexture,N),Kt?C.framebufferTextureLayer(C.DRAW_FRAMEBUFFER,C.COLOR_ATTACHMENT0,Gt.__webglTexture,ie,Tt+Vt):C.framebufferTexture2D(C.DRAW_FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_2D,Gt.__webglTexture,ie),N!==0?C.blitFramebuffer(ze,Ne,oe,me,je,nt,oe,me,C.COLOR_BUFFER_BIT,C.NEAREST):Kt?C.copyTexSubImage3D(Pt,ie,je,nt,Tt+Vt,ze,Ne,oe,me):C.copyTexSubImage2D(Pt,ie,je,nt,ze,Ne,oe,me);Ee.bindFramebuffer(C.READ_FRAMEBUFFER,null),Ee.bindFramebuffer(C.DRAW_FRAMEBUFFER,null)}else Kt?x.isDataTexture||x.isData3DTexture?C.texSubImage3D(Pt,ie,je,nt,Tt,oe,me,Me,Ke,be,Mt.data):I.isCompressedArrayTexture?C.compressedTexSubImage3D(Pt,ie,je,nt,Tt,oe,me,Me,Ke,Mt.data):C.texSubImage3D(Pt,ie,je,nt,Tt,oe,me,Me,Ke,be,Mt):x.isDataTexture?C.texSubImage2D(C.TEXTURE_2D,ie,je,nt,oe,me,Ke,be,Mt.data):x.isCompressedTexture?C.compressedTexSubImage2D(C.TEXTURE_2D,ie,je,nt,Mt.width,Mt.height,Ke,Mt.data):C.texSubImage2D(C.TEXTURE_2D,ie,je,nt,oe,me,Ke,be,Mt);C.pixelStorei(C.UNPACK_ROW_LENGTH,it),C.pixelStorei(C.UNPACK_IMAGE_HEIGHT,un),C.pixelStorei(C.UNPACK_SKIP_PIXELS,as),C.pixelStorei(C.UNPACK_SKIP_ROWS,Xt),C.pixelStorei(C.UNPACK_SKIP_IMAGES,Gs),ie===0&&I.generateMipmaps&&C.generateMipmap(Pt),Ee.unbindTexture()},this.copyTextureToTexture3D=function(x,I,k=null,V=null,N=0){return ua('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(x,I,k,V,N)},this.initRenderTarget=function(x){ye.get(x).__webglFramebuffer===void 0&&E.setupRenderTarget(x)},this.initTexture=function(x){x.isCubeTexture?E.setTextureCube(x,0):x.isData3DTexture?E.setTexture3D(x,0):x.isDataArrayTexture||x.isCompressedArrayTexture?E.setTexture2DArray(x,0):E.setTexture2D(x,0),Ee.unbindTexture()},this.resetState=function(){A=0,w=0,F=null,Ee.reset(),ht.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Un}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const n=this.getContext();n.drawingBufferColorSpace=et._getDrawingBufferColorSpace(e),n.unpackColorSpace=et._getUnpackColorSpace()}}const P3={type:"change"},V1={type:"start"},T5={type:"end"},na=new dr,U3=new Yn,Uu=Math.cos(70*B1.DEG2RAD),At=new O,Jt=2*Math.PI,ct={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Io=1e-6;class Iu extends $c{constructor(e,n=null){super(e,n),this.state=ct.NONE,this.target=new O,this.cursor=new O,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:bs.ROTATE,MIDDLE:bs.DOLLY,RIGHT:bs.PAN},this.touches={ONE:Ds.ROTATE,TWO:Ds.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new O,this._lastQuaternion=new bi,this._lastTargetPosition=new O,this._quat=new bi().setFromUnitVectors(e.up,new O(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new a3,this._sphericalDelta=new a3,this._scale=1,this._panOffset=new O,this._rotateStart=new Fe,this._rotateEnd=new Fe,this._rotateDelta=new Fe,this._panStart=new Fe,this._panEnd=new Fe,this._panDelta=new Fe,this._dollyStart=new Fe,this._dollyEnd=new Fe,this._dollyDelta=new Fe,this._dollyDirection=new O,this._mouse=new Fe,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Nu.bind(this),this._onPointerDown=Ou.bind(this),this._onPointerUp=Fu.bind(this),this._onContextMenu=Ju.bind(this),this._onMouseWheel=Gu.bind(this),this._onKeyDown=Hu.bind(this),this._onTouchStart=ku.bind(this),this._onTouchMove=Vu.bind(this),this._onMouseDown=Bu.bind(this),this._onMouseMove=zu.bind(this),this._interceptControlDown=Wu.bind(this),this._interceptControlUp=Qu.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(P3),this.update(),this.state=ct.NONE}update(e=null){const n=this.object.position;At.copy(n).sub(this.target),At.applyQuaternion(this._quat),this._spherical.setFromVector3(At),this.autoRotate&&this.state===ct.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,s=this.maxAzimuthAngle;isFinite(i)&&isFinite(s)&&(i<-Math.PI?i+=Jt:i>Math.PI&&(i-=Jt),s<-Math.PI?s+=Jt:s>Math.PI&&(s-=Jt),i<=s?this._spherical.theta=Math.max(i,Math.min(s,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+s)/2?Math.max(i,this._spherical.theta):Math.min(s,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const a=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=a!=this._spherical.radius}if(At.setFromSpherical(this._spherical),At.applyQuaternion(this._quatInverse),n.copy(this.target).add(At),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let a=null;if(this.object.isPerspectiveCamera){const o=At.length();a=this._clampDistance(o*this._scale);const c=o-a;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),r=!!c}else if(this.object.isOrthographicCamera){const o=new O(this._mouse.x,this._mouse.y,0);o.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=c!==this.object.zoom;const l=new O(this._mouse.x,this._mouse.y,0);l.unproject(this.object),this.object.position.sub(l).add(o),this.object.updateMatrixWorld(),a=At.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;a!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(a).add(this.object.position):(na.origin.copy(this.object.position),na.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(na.direction))<Uu?this.object.lookAt(this.target):(U3.setFromNormalAndCoplanarPoint(this.object.up,this.target),na.intersectPlane(U3,this.target))))}else if(this.object.isOrthographicCamera){const a=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),a!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>Io||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Io||this._lastTargetPosition.distanceToSquared(this.target)>Io?(this.dispatchEvent(P3),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?Jt/60*this.autoRotateSpeed*e:Jt/60/60*this.autoRotateSpeed}_getZoomScale(e){const n=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*n)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,n){At.setFromMatrixColumn(n,0),At.multiplyScalar(-e),this._panOffset.add(At)}_panUp(e,n){this.screenSpacePanning===!0?At.setFromMatrixColumn(n,1):(At.setFromMatrixColumn(n,0),At.crossVectors(this.object.up,At)),At.multiplyScalar(e),this._panOffset.add(At)}_pan(e,n){const i=this.domElement;if(this.object.isPerspectiveCamera){const s=this.object.position;At.copy(s).sub(this.target);let r=At.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/i.clientHeight,this.object.matrix),this._panUp(2*n*r/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(n*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,n){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),s=e-i.left,r=n-i.top,a=i.width,o=i.height;this._mouse.x=s/a*2-1,this._mouse.y=-(r/o)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const n=this.domElement;this._rotateLeft(Jt*this._rotateDelta.x/n.clientHeight),this._rotateUp(Jt*this._rotateDelta.y/n.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let n=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(Jt*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),n=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-Jt*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),n=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(Jt*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),n=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-Jt*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),n=!0;break}n&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._rotateStart.set(i,s)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._panStart.set(i,s)}}_handleTouchStartDolly(e){const n=this._getSecondPointerPosition(e),i=e.pageX-n.x,s=e.pageY-n.y,r=Math.sqrt(i*i+s*s);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),s=.5*(e.pageX+i.x),r=.5*(e.pageY+i.y);this._rotateEnd.set(s,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const n=this.domElement;this._rotateLeft(Jt*this._rotateDelta.x/n.clientHeight),this._rotateUp(Jt*this._rotateDelta.y/n.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._panEnd.set(i,s)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const n=this._getSecondPointerPosition(e),i=e.pageX-n.x,s=e.pageY-n.y,r=Math.sqrt(i*i+s*s);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const a=(e.pageX+n.x)*.5,o=(e.pageY+n.y)*.5;this._updateZoomParameters(a,o)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let n=0;n<this._pointers.length;n++)if(this._pointers[n]==e.pointerId){this._pointers.splice(n,1);return}}_isTrackingPointer(e){for(let n=0;n<this._pointers.length;n++)if(this._pointers[n]==e.pointerId)return!0;return!1}_trackPointer(e){let n=this._pointerPositions[e.pointerId];n===void 0&&(n=new Fe,this._pointerPositions[e.pointerId]=n),n.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const n=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[n]}_customWheelEvent(e){const n=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(n){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function Ou(t){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(t)&&(this._addPointer(t),t.pointerType==="touch"?this._onTouchStart(t):this._onMouseDown(t)))}function Nu(t){this.enabled!==!1&&(t.pointerType==="touch"?this._onTouchMove(t):this._onMouseMove(t))}function Fu(t){switch(this._removePointer(t),this._pointers.length){case 0:this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(T5),this.state=ct.NONE;break;case 1:const e=this._pointers[0],n=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:n.x,pageY:n.y});break}}function Bu(t){let e;switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case bs.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(t),this.state=ct.DOLLY;break;case bs.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(t),this.state=ct.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(t),this.state=ct.ROTATE}break;case bs.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(t),this.state=ct.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(t),this.state=ct.PAN}break;default:this.state=ct.NONE}this.state!==ct.NONE&&this.dispatchEvent(V1)}function zu(t){switch(this.state){case ct.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(t);break;case ct.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(t);break;case ct.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(t);break}}function Gu(t){this.enabled===!1||this.enableZoom===!1||this.state!==ct.NONE||(t.preventDefault(),this.dispatchEvent(V1),this._handleMouseWheel(this._customWheelEvent(t)),this.dispatchEvent(T5))}function Hu(t){this.enabled!==!1&&this._handleKeyDown(t)}function ku(t){switch(this._trackPointer(t),this._pointers.length){case 1:switch(this.touches.ONE){case Ds.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(t),this.state=ct.TOUCH_ROTATE;break;case Ds.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(t),this.state=ct.TOUCH_PAN;break;default:this.state=ct.NONE}break;case 2:switch(this.touches.TWO){case Ds.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(t),this.state=ct.TOUCH_DOLLY_PAN;break;case Ds.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(t),this.state=ct.TOUCH_DOLLY_ROTATE;break;default:this.state=ct.NONE}break;default:this.state=ct.NONE}this.state!==ct.NONE&&this.dispatchEvent(V1)}function Vu(t){switch(this._trackPointer(t),this.state){case ct.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(t),this.update();break;case ct.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(t),this.update();break;case ct.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(t),this.update();break;case ct.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(t),this.update();break;default:this.state=ct.NONE}}function Ju(t){this.enabled!==!1&&t.preventDefault()}function Wu(t){t.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function Qu(t){t.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const Dt={normal:{black:"rgb(0,0,0)",cardinal:"rgba(163,228,255)",constellation:"rgba(180,180,255)",constellationboundary:"rgba(255,255,100)",showers:"rgba(100,255,100)",galaxy:"rgba(100,200,255)",azLines:"rgba(5,126,102)",eqLines:"rgba(255,100,100)",ec:"rgba(255,0,0)",meridian:"rgba(25,255,0)",pointers:"rgb(200,200,200)"},planets:{sun:"rgb(255,215,0)",moon:"rgb(150,150,150)",Venus:"rgb(245,222,179)",Mercury:"rgb(195,164,195)",Mars:"rgb(255,50,50)",Jupiter:"rgb(255,150,150)",Saturn:"rgb(200,150,150)",Uranus:"rgb(173,216,230)",Neptune:"rgb(70,130,180)",Pluto:"rgb(220,220,220)"}};function Xu(t){const e=new ti(t,64,64);new Wc().load("/public/img/star-bg.jpg",s=>{s.colorSpace=jt});const n=new kn({color:Dt.normal.black,side:Ft,transparent:!0,opacity:.2,depthWrite:!1}),i=new Nt(e,n);return i.renderOrder=-1,i}const qu=JSON.parse("[[122,4.78,0.4,-77.07],[145,5.1,0.46,-3.03],[154,4.41,0.49,-6.01],[183,5.02,0.58,-29.72],[301,4.54,0.93,-17.34],[355,4.92,1.13,-10.51],[443,4.61,1.33,-5.71],[761,5.42,2.34,-27.99],[814,5.28,2.51,-82.22],[841,5.04,2.58,46.07],[910,4.89,2.82,-15.47],[930,5.4,2.89,-27.8],[950,5.24,2.93,-35.13],[983,5.27,3.04,-17.94],[1158,5.12,3.62,-7.78],[1168,4.8,3.65,20.21],[1170,4.46,3.66,-18.93],[1366,4.61,4.27,38.68],[1473,4.52,4.58,36.79],[1686,5.18,5.28,37.97],[1708,5.17,5.38,-28.98],[1960,5.38,6.2,61.83],[2210,4.81,6.98,-33.01],[2219,5.06,7.01,17.89],[2225,5.17,7.06,44.39],[2240,5.42,7.11,-39.91],[2355,5.21,7.53,29.75],[2381,5.19,7.59,-23.79],[2472,4.77,7.85,-48.8],[2487,4.51,7.89,-62.97],[2505,4.74,7.94,54.52],[2568,5.37,8.15,20.29],[2578,5.09,8.18,-63.03],[2599,4.16,8.25,62.93],[2762,5.21,8.81,-3.59],[2854,5.08,9.03,54.17],[2900,5.13,9.19,44.49],[2912,4.36,9.22,33.72],[2942,5.43,9.34,35.4],[3031,4.38,9.64,29.31],[3083,5.42,9.79,49.35],[3138,5.43,9.98,21.44],[3231,5.33,10.28,39.46],[3245,4.59,10.33,-46.08],[3300,4.81,10.52,50.51],[3330,5.38,10.62,-65.47],[3405,4.36,10.84,-57.46],[3414,4.95,10.87,47.02],[3455,4.77,11.05,-10.61],[3504,4.5,11.18,48.28],[3505,5.22,11.18,-22.01],[3544,5.41,11.32,55.22],[3607,5.5,11.55,-22.52],[3632,5.38,11.64,15.48],[3693,4.06,11.83,24.27],[3721,5.41,11.94,74.85],[3781,5.08,12.15,-74.92],[3786,4.44,12.17,7.59],[3801,4.89,12.21,50.97],[3810,5.07,12.24,16.94],[3909,5.19,12.53,-10.64],[3949,5.23,12.67,-50.99],[3951,5.36,12.68,64.25],[4104,5.48,13.17,-24.01],[4147,4.76,13.25,-1.14],[4151,4.8,13.27,61.12],[4288,5.45,13.74,23.63],[4292,4.82,13.75,58.97],[4293,5.45,13.75,-69.53],[4371,5.33,14.01,-11.27],[4422,4.62,14.17,59.18],[4463,4.42,14.3,23.42],[4510,5.44,14.46,28.99],[4890,5.39,15.7,-46.4],[4914,5.41,15.76,-4.84],[5131,5.27,16.42,21.47],[5268,5.34,16.83,-61.78],[5300,5.21,16.95,-41.49],[5317,5.04,17,43.94],[5336,5.17,17.07,54.92],[5372,4.23,17.19,86.26],[5434,4.25,17.38,47.24],[5518,5.31,17.66,68.78],[5542,4.33,17.78,55.15],[5544,5.15,17.78,31.42],[5571,4.66,17.86,21.03],[5586,4.51,17.92,30.09],[5737,5.19,18.43,7.58],[5799,5.13,18.6,-7.92],[5862,4.96,18.8,-45.53],[5896,4.95,18.94,-68.88],[5951,5.43,19.15,-2.5],[6061,5.14,19.45,3.61],[6242,4.98,20.02,58.23],[6315,5.22,20.28,28.74],[6411,4.87,20.59,45.53],[6592,5.42,21.17,-41.49],[6670,4.91,21.41,-14.6],[6692,4.73,21.48,68.13],[6706,5.34,21.56,19.17],[6813,4.83,21.91,45.41],[6960,5.1,22.4,-21.63],[6999,5.26,22.53,47.01],[7213,5.49,23.23,-36.87],[7294,4.68,23.48,59.23],[7450,5.4,24,-15.4],[7513,4.1,24.2,41.41],[7650,5.28,24.63,73.04],[7719,5.01,24.84,44.39],[7818,4.94,25.15,40.58],[7918,4.96,25.45,42.61],[7955,5.26,25.54,-32.33],[7981,5.24,25.62,20.27],[7999,4.98,25.68,-3.69],[8016,5.17,25.73,70.62],[8068,4.06,25.92,50.69],[8209,5.31,26.41,-25.05],[8230,5.34,26.5,-5.73],[8240,5.49,26.52,-50.82],[8241,5.03,26.53,-53.52],[8497,4.68,27.4,-10.69],[8814,5.39,28.32,40.73],[8882,5.11,28.59,-42.5],[8928,4.69,28.73,-67.65],[9009,4.97,29,68.69],[9061,4.85,29.17,-22.53],[9095,4.83,29.29,-47.39],[9110,5.11,29.34,17.82],[9153,4.77,29.48,23.6],[9312,5.28,29.91,64.62],[9326,5.43,29.94,-20.82],[9372,5.51,30.11,-8.52],[9440,5.35,30.31,-30],[9459,5.14,30.43,-44.71],[9480,4.54,30.49,70.91],[9505,5.04,30.58,54.49],[9589,5.42,30.8,0.13],[9677,4.69,31.12,-29.3],[9727,5.27,31.28,77.28],[9763,5.22,31.38,76.12],[9836,5.02,31.64,22.65],[9977,4.82,32.12,37.86],[10053,4.98,32.36,25.94],[10280,4.95,33.09,30.3],[10306,5.23,33.2,21.21],[10320,5.26,33.23,-30.72],[10340,4.83,33.31,44.23],[10366,5.31,33.4,51.07],[10644,4.84,34.26,34.22],[10670,4,34.33,33.85],[10793,5.29,34.74,28.64],[10819,5.31,34.82,47.38],[11021,5.29,35.49,0.4],[11029,5.42,35.51,-10.78],[11046,5.42,35.55,-0.88],[11060,5.17,35.59,55.85],[11072,5.2,35.64,-23.82],[11220,5.19,36.1,50.01],[11249,5.48,36.2,10.61],[11258,5.36,36.22,-60.31],[11313,4.71,36.41,50.28],[11477,5.12,37.01,-33.81],[11486,5.29,37.04,29.67],[11569,4.46,37.27,67.4],[11738,5.27,37.88,2.27],[11757,5.28,37.92,-79.11],[11784,5.14,38.03,36.15],[11791,5.36,38.04,-1.03],[11918,4.96,38.46,-28.23],[12086,5.37,38.95,34.69],[12225,5.29,39.35,-52.54],[12273,5.17,39.51,72.82],[12332,5.45,39.7,21.96],[12489,5.3,40.17,27.06],[12623,4.92,40.56,40.19],[12653,5.4,40.64,-50.8],[12719,4.67,40.86,27.71],[12768,5.44,41.02,44.3],[12777,4.11,41.05,49.23],[12832,5.17,41.24,12.45],[12876,4.82,41.39,-67.62],[13061,4.51,41.98,29.25],[13141,5.25,42.26,-62.81],[13165,5.26,42.32,17.46],[13202,5.38,42.48,-27.94],[13244,4.74,42.62,-75.07],[13265,5.47,42.67,-35.68],[13288,4.77,42.76,-21],[13328,4.53,42.88,35.06],[13490,5.34,43.43,38.34],[13717,5.16,44.16,-3.71],[13775,5.09,44.32,31.93],[13782,5.45,44.35,-23.86],[13874,5.23,44.68,-2.78],[13879,4.7,44.69,39.66],[13884,4.97,44.7,-64.07],[13905,4.93,44.77,35.18],[13914,4.63,44.8,21.34],[13965,5.49,44.96,47.22],[14043,5.22,45.22,52.35],[14168,5.34,45.68,-7.69],[14293,5.3,46.07,-7.6],[14376,5.47,46.36,25.26],[14382,4.77,46.39,56.71],[14417,5.52,46.53,79.42],[14456,5.26,46.64,-6.09],[14632,4.05,47.27,49.61],[14817,4.61,47.82,39.61],[14838,4.37,47.91,19.73],[14862,4.83,47.98,74.39],[14954,5.07,48.19,-1.2],[15110,4.87,48.73,21.04],[15219,5.03,49.05,50.94],[15338,5.48,49.45,44.03],[15371,5.23,49.55,-62.51],[15382,4.88,49.59,-22.51],[15404,5.16,49.66,50.22],[15416,4.82,49.68,34.22],[15444,5.03,49.78,50.09],[15457,4.85,49.84,3.37],[15520,4.85,50,65.65],[15547,5.44,50.08,77.73],[15549,4.47,50.08,29.05],[15627,5.36,50.31,21.15],[15648,4.95,50.36,43.33],[15737,5.13,50.69,20.74],[15770,5.3,50.8,49.21],[15890,5.19,51.17,64.59],[16147,4.97,52.01,49.06],[16244,4.74,52.34,49.51],[16245,4.7,52.34,-62.94],[16281,4.54,52.48,58.88],[16292,5.09,52.5,55.45],[16322,5.12,52.6,11.34],[16335,4.36,52.64,48],[16341,4.73,52.65,-5.08],[16369,4.1,52.72,12.94],[16470,5.46,53.04,48.02],[16499,5.32,53.11,46.06],[16803,5.23,54.07,-17.47],[16826,4.23,54.12,48.19],[16852,4.3,54.22,0.4],[16870,4.58,54.27,-40.27],[17296,5.11,55.54,63.22],[17304,4.97,55.56,-31.94],[17313,4.97,55.59,33.97],[17351,4.58,55.71,-37.31],[17457,5.25,56.13,-1.16],[17489,5.46,56.2,24.29],[17531,4.3,56.3,24.47],[17563,5.34,56.42,6.05],[17587,4.81,56.51,63.35],[17593,4.42,56.54,-12.1],[17608,4.18,56.58,23.95],[17717,5.24,56.92,-23.87],[17771,5.07,57.07,11.14],[17776,5.45,57.09,23.42],[17851,5.09,57.3,24.14],[17854,5.39,57.31,70.87],[17884,4.48,57.38,65.53],[17886,5.11,57.39,33.09],[17954,5.23,57.58,25.58],[18141,5.48,58.17,-5.36],[18213,5.09,58.41,-34.73],[18216,4.62,58.43,-24.61],[18255,4.45,58.57,-2.95],[18396,5.38,58.99,47.87],[18434,5.49,59.12,35.08],[18453,5.28,59.15,50.7],[18488,5.05,59.28,61.11],[18673,4.66,59.98,-24.02],[18744,4.5,60.22,-62.16],[18772,4.96,60.33,-61.08],[18788,5.28,60.38,-1.55],[18859,5.38,60.65,-0.27],[18957,5.33,60.94,5.44],[18975,5.45,60.99,8.2],[18993,5.36,61.04,2.83],[19009,5.51,61.09,24.11],[19018,5.12,61.11,59.16],[19038,4.37,61.17,22.08],[19167,4.29,61.65,50.35],[19171,5.17,61.65,27.6],[19205,5.2,61.75,29],[19398,5.44,62.32,-16.39],[19461,5.1,62.51,80.7],[19483,5.44,62.59,-6.92],[19513,5.39,62.71,26.48],[19515,4.93,62.71,-41.99],[19587,4.03,62.97,-6.84],[19719,5.29,63.39,7.72],[19740,4.84,63.48,9.26],[19777,4.9,63.6,-10.26],[19799,5.22,63.65,10.01],[19805,5.46,63.7,-62.19],[19811,4.69,63.72,40.48],[19812,4.16,63.72,48.41],[19849,4.43,63.82,-7.65],[19860,4.28,63.88,8.89],[19949,5.19,64.18,53.61],[19990,4.91,64.32,20.58],[20070,4.59,64.56,50.3],[20156,5.4,64.81,50.05],[20161,5.33,64.82,-44.27],[20186,5.35,64.9,21.77],[20250,4.95,65.09,27.35],[20252,4.93,65.1,34.57],[20261,5.24,65.15,15.1],[20264,5.38,65.16,-20.64],[20266,5.27,65.17,65.14],[20354,4.81,65.39,46.5],[20376,5.4,65.45,60.74],[20384,5.24,65.47,-63.39],[20430,5.38,65.65,25.63],[20507,5.17,65.92,-3.75],[20522,5.1,65.97,9.46],[20542,4.8,66.02,17.44],[20635,4.2,66.34,22.29],[20641,5.26,66.35,22.2],[20704,5.28,66.53,31.44],[20711,4.28,66.58,22.81],[20713,4.48,66.59,15.62],[20732,4.69,66.65,14.71],[20776,5.43,66.76,80.82],[20877,4.97,67.11,16.36],[20901,5.01,67.21,13.05],[20982,5.47,67.5,83.34],[21029,4.76,67.64,16.19],[21036,5.4,67.66,13.72],[21039,5.45,67.66,15.69],[21139,4.9,67.97,-0.04],[21248,4.51,68.38,-29.77],[21273,4.65,68.46,14.84],[21296,5.19,68.55,-8.23],[21297,5.23,68.55,-8.97],[21402,4.25,68.91,10.16],[21476,4.26,69.17,41.26],[21515,5.32,69.31,1],[21547,5.21,69.4,-2.47],[21589,4.27,69.54,12.51],[21644,5,69.72,-12.12],[21670,5.37,69.78,7.87],[21673,5.08,69.79,15.8],[21683,4.67,69.82,15.92],[21685,5.46,69.83,-14.36],[21727,5.07,69.98,53.08],[21730,5.36,69.99,53.47],[21735,5.45,70.01,12.2],[21763,4.3,70.11,-19.67],[21914,5.3,70.69,-50.48],[21928,5.3,70.73,43.37],[22040,5.28,71.09,-59.73],[22044,5.38,71.11,11.15],[22157,5.35,71.51,11.71],[22263,5.5,71.9,-16.93],[22287,5.28,72,56.76],[22453,4.87,72.48,37.49],[22479,5.03,72.55,-16.22],[22565,5.09,72.84,18.84],[22626,5.47,73.02,63.51],[22667,4.72,73.13,14.25],[22678,4.78,73.16,36.7],[22833,5.18,73.7,11.43],[22834,5.32,73.7,7.78],[22871,5.45,73.8,-74.94],[22957,4.06,74.09,13.51],[23040,4.43,74.32,53.75],[23179,5,74.81,37.89],[23221,5.39,74.96,-10.26],[23231,4.77,74.98,-12.54],[23265,5.09,75.09,81.19],[23362,4.89,75.36,-20.05],[23364,4.81,75.36,-7.17],[23430,5,75.54,-26.28],[23467,5.29,75.68,-71.31],[23482,5.37,75.7,-49.15],[23497,4.62,75.77,21.59],[23522,4.02,75.85,60.44],[23595,4.57,76.1,-35.48],[23607,4.66,76.14,15.4],[23649,5.01,76.24,-49.58],[23693,4.71,76.38,-57.47],[23734,5.08,76.54,58.97],[23783,4.98,76.67,51.6],[23794,5.12,76.69,-4.66],[23835,4.91,76.86,18.65],[23840,5.21,76.89,-63.4],[23871,5.28,76.95,20.42],[23879,5.33,76.97,8.5],[23941,5.12,77.18,-4.46],[23983,5.43,77.33,9.83],[24010,4.82,77.42,15.6],[24197,5.16,77.92,16.05],[24254,5.45,78.09,73.95],[24331,4.48,78.32,2.86],[24340,4.82,78.36,38.48],[24372,4.8,78.44,-67.19],[24505,5.04,78.85,-26.94],[24504,5,78.85,32.69],[24659,4.83,79.37,-34.9],[24679,5.49,79.42,-13.52],[24727,4.54,79.54,33.37],[24799,5.37,79.75,33.75],[24813,4.71,79.79,40.1],[24817,5.33,79.8,2.6],[24822,4.95,79.82,22.1],[24829,5.45,79.84,-50.61],[24879,5.03,80,33.96],[24902,5.46,80.06,41.09],[24927,4.73,80.11,-21.24],[25044,4.74,80.44,-0.38],[25045,5.06,80.44,-24.77],[25048,5.21,80.45,41.8],[25142,5,80.71,3.54],[25197,5.25,80.87,57.54],[25202,5.23,80.88,-13.93],[25247,4.12,80.99,-7.81],[25278,5,81.11,17.38],[25282,5.07,81.12,-0.89],[25292,5,81.16,37.39],[25302,4.96,81.19,1.85],[25429,5.13,81.58,-58.91],[25473,4.61,81.71,3.1],[25499,5.4,81.79,17.96],[25539,4.87,81.91,21.94],[25541,5.06,81.91,34.48],[25695,5.48,82.32,25.15],[25737,4.71,82.43,-1.09],[25768,5.45,82.54,-47.08],[25769,5.41,82.54,63.07],[25813,4.2,82.7,5.95],[25861,5.46,82.81,3.29],[25923,4.63,82.98,-7.3],[25945,4.33,83.05,18.59],[25980,5.34,83.17,-1.59],[25984,4.79,83.18,32.19],[25993,5.46,83.21,-38.51],[26001,5.34,83.25,-64.23],[26063,5.34,83.38,-1.16],[26126,5.33,83.57,3.77],[26176,4.41,83.71,9.49],[26199,4.72,83.76,-6],[26220,6.73,83.82,-5.39],[26221,5.13,83.82,-5.39],[26235,6.39,83.85,-5.42],[26237,4.59,83.85,-4.84],[26248,5.38,83.86,24.04],[26268,5.23,83.91,-4.86],[26366,4.09,84.23,9.29],[26460,5.31,84.44,-28.69],[26536,5.41,84.66,30.49],[26563,4.8,84.72,-7.21],[26594,4.59,84.8,4.12],[26640,5.17,84.93,25.9],[26649,5.44,84.96,-32.63],[26736,4.95,85.21,-1.13],[26777,4.84,85.32,16.53],[26868,5.28,85.56,-34.67],[26885,4.9,85.62,1.47],[27196,5.46,86.48,49.83],[27204,5.18,86.5,-32.31],[27243,5.3,86.61,-46.6],[27338,5.46,86.86,17.73],[27364,5.29,86.93,13.9],[27386,5.26,87,6.45],[27468,4.87,87.25,24.57],[27483,4.5,87.29,39.18],[27511,4.88,87.39,12.65],[27517,5.49,87.4,-14.48],[27534,5.11,87.47,-66.9],[27566,5.45,87.57,-79.36],[27621,5.17,87.72,-52.11],[27639,4.74,87.76,37.31],[27658,5.34,87.84,-7.52],[27750,4.75,88.11,1.86],[27810,4.87,88.28,-33.8],[27830,4.55,88.33,27.61],[27947,5.29,88.71,-52.64],[27949,4.96,88.71,55.71],[27971,5.2,88.74,59.89],[28010,4.96,88.87,-37.12],[28237,4.82,89.5,25.95],[28296,5.2,89.71,0.55],[28325,5.03,89.77,-9.56],[28404,4.25,89.98,45.94],[28413,4.52,90.01,-3.07],[28574,5.01,90.46,-10.6],[28675,5.04,90.82,-26.28],[28716,4.63,90.98,20.14],[28744,5.21,91.06,-6.71],[28816,4.93,91.25,-16.48],[28943,5.46,91.63,-23.11],[28946,5.35,91.65,38.48],[28949,5.36,91.66,-4.19],[28991,5.04,91.76,-62.15],[29034,4.99,91.88,-37.25],[29048,5.28,91.92,-19.17],[29134,5.04,92.18,-68.84],[29150,5.48,92.24,-22.43],[29246,5.36,92.5,58.94],[29271,5.07,92.56,-74.75],[29276,4.72,92.57,-54.97],[29353,5.01,92.81,-65.59],[29417,5.04,92.97,-6.55],[29434,4.92,93.01,16.13],[29490,5.34,93.21,65.72],[29650,5.2,93.71,19.16],[29696,4.35,93.84,29.5],[29704,5.33,93.85,16.14],[29730,5.35,93.92,60],[29735,5,93.94,-13.72],[29736,5.47,93.94,12.55],[29800,5.04,94.11,12.27],[29850,5.39,94.28,9.94],[29895,5.15,94.42,-16.82],[29919,5.05,94.48,61.52],[29996,5.35,94.71,-9.39],[29997,4.76,94.71,69.32],[30073,5.25,94.93,-7.82],[30093,4.9,95,-2.94],[30214,5.55,95.35,-11.77],[30247,5.33,95.44,53.45],[30457,5.21,96.04,-11.53],[30520,4.75,96.22,49.29],[30565,5.38,96.37,-69.69],[30679,5.2,96.7,58.42],[30717,5.19,96.81,0.3],[30772,5.04,96.99,-4.76],[30788,4.48,97.04,-32.58],[30932,5.2,97.37,-56.85],[30953,5.28,97.45,-50.24],[31084,5.15,97.85,-12.39],[31119,5.21,97.95,11.54],[31121,5.41,97.96,-8.16],[31125,4.33,97.96,-23.42],[31165,5.25,98.09,-37.7],[31216,4.5,98.23,7.33],[31278,5.08,98.41,-1.22],[31299,5.41,98.46,-36.23],[31407,4.4,98.74,-52.98],[31434,5.26,98.8,28.02],[31579,5.25,99.14,38.45],[31688,5.26,99.45,-32.34],[31700,4.43,99.47,-18.24],[31765,5.03,99.66,-48.22],[31789,5.33,99.7,39.9],[31827,4.81,99.82,-14.15],[31832,4.82,99.83,42.49],[31978,4.68,100.24,9.9],[32064,5.19,100.48,-9.17],[32104,5.21,100.6,17.65],[32173,5.02,100.77,44.52],[32249,4.49,101,13.23],[32292,5.17,101.12,-31.07],[32311,5.44,101.19,28.97],[32411,5.3,101.5,-14.8],[32438,4.86,101.56,59.44],[32439,5.44,101.56,79.56],[32480,5.24,101.68,43.58],[32489,5.34,101.71,57.17],[32492,5.27,101.71,-14.43],[32494,5.38,101.72,-51.27],[32533,4.77,101.83,8.04],[32537,5.26,101.84,-37.93],[32558,5.06,101.91,-9],[32562,5.22,101.91,48.79],[32578,4.47,101.97,2.41],[32677,5.39,102.24,-15.14],[32761,4.41,102.46,-53.62],[32765,5.14,102.48,-46.61],[32844,4.98,102.69,41.78],[32855,4.99,102.72,-34.37],[32864,5.12,102.74,67.57],[32912,5.4,102.86,-70.96],[32921,5.26,102.89,21.76],[33048,5.38,103.27,59.45],[33092,4.83,103.39,-20.22],[33104,5.1,103.43,68.89],[33184,5.44,103.6,-1.13],[33202,4.72,103.66,13.18],[33302,4.66,103.91,-20.14],[33316,5.3,103.95,-22.94],[33345,5.09,104.03,-14.04],[33357,4.95,104.07,-48.72],[33384,5.45,104.14,-79.42],[33478,5.47,104.39,-24.63],[33485,4.89,104.4,45.09],[33558,5.07,104.6,-34.11],[33682,5.17,104.96,-67.92],[33694,4.54,105.02,76.98],[33779,5.15,105.21,-51.4],[33878,5.19,105.48,-5.72],[33927,5.18,105.6,24.22],[33971,5,105.73,-4.24],[34033,5.12,105.91,10.95],[34059,4.93,105.97,-49.58],[34081,5.19,106.01,-42.34],[34105,5.17,106.08,-56.75],[34301,5.39,106.67,-11.29],[34440,5.48,107.09,15.93],[34495,4.83,107.21,-39.66],[34622,4.92,107.56,-4.24],[34624,5.45,107.58,-27.49],[34670,5.09,107.7,-48.93],[34724,5.43,107.85,-0.3],[34752,4.89,107.91,39.32],[34802,5.31,108.07,-40.5],[34834,4.49,108.14,-46.76],[34899,4.87,108.31,-45.18],[34909,5,108.34,16.16],[34912,5.5,108.35,51.43],[34922,5.1,108.38,-44.64],[34981,4.65,108.56,-26.35],[34987,5.34,108.58,3.11],[35020,4.76,108.66,-48.27],[35083,5.34,108.84,-30.69],[35146,5.2,108.98,59.64],[35180,5.45,109.06,-15.59],[35205,4.64,109.15,-27.88],[35210,4.79,109.15,-23.32],[35226,5.01,109.21,-36.59],[35363,4.67,109.58,-36.73],[35384,5.05,109.63,49.46],[35393,5.24,109.64,-39.21],[35406,5.11,109.66,-36.74],[35412,4.95,109.67,-24.56],[35415,4.4,109.68,-24.95],[35427,5.29,109.71,-26.59],[35589,5.37,110.16,-52.09],[35699,5.08,110.49,20.44],[35710,5.12,110.51,36.76],[35727,4.95,110.56,-19.02],[35795,5.43,110.75,-31.92],[35846,5.02,110.87,25.05],[35848,5.36,110.87,-27.83],[35855,5.39,110.88,-32.2],[35907,5.19,111.04,40.67],[35951,5.19,111.17,-16.2],[35957,5.28,111.18,-31.81],[35987,5.36,111.24,11.67],[36041,4.99,111.41,9.28],[36114,5.08,111.59,-51.02],[36238,5.24,111.93,21.45],[36265,5.22,112.01,6.94],[36284,4.3,112.04,8.93],[36363,5.4,112.27,-38.81],[36366,4.18,112.28,31.78],[36393,5.06,112.34,28.12],[36425,4.53,112.45,12.01],[36429,5.01,112.45,27.92],[36431,4.86,112.46,-23.02],[36439,5.36,112.48,49.67],[36514,4.65,112.68,-30.96],[36547,4.96,112.77,82.41],[36616,5.44,112.95,17.09],[36641,5.23,113.02,1.91],[36760,5.26,113.4,15.83],[36773,4.97,113.45,-14.52],[36778,5.44,113.46,-36.34],[36795,4.39,113.51,-22.3],[36817,5.09,113.58,-23.47],[36896,5.35,113.79,30.96],[36917,4.63,113.85,-28.37],[36942,4.92,113.92,-52.53],[37088,5.13,114.32,-4.11],[37096,4.53,114.34,-34.97],[37173,4.67,114.58,-25.36],[37265,4.9,114.79,34.58],[37297,4.84,114.86,-38.31],[37300,5.05,114.87,17.67],[37379,4.95,115.1,-15.26],[37391,5.07,115.13,87.02],[37450,5.39,115.32,-38.53],[37606,5.04,115.74,-45.17],[37609,4.95,115.75,58.71],[37629,4.29,115.83,28.88],[37648,4.59,115.88,-28.41],[37664,5.17,115.92,-40.93],[37701,5.36,116.02,50.43],[37704,5.29,116.03,25.78],[37853,5.36,116.4,-34.17],[37891,5.03,116.49,-14.56],[37901,5.5,116.51,-6.77],[37908,4.87,116.53,18.51],[37921,5.24,116.57,10.77],[37946,5.18,116.66,37.52],[38010,5.07,116.85,-38.51],[38016,5.14,116.88,33.42],[38020,5.21,116.88,-46.61],[38048,5.48,116.99,-12.19],[38070,4.49,117.02,-25.94],[38089,4.71,117.08,-47.08],[38164,4.11,117.31,-46.37],[38211,5.16,117.42,-17.23],[38373,5.16,117.92,1.77],[38382,5.16,117.94,-13.9],[38423,5.01,118.07,-34.71],[38455,4.47,118.16,-38.86],[38497,5.42,118.26,-36.36],[38500,4.63,118.27,-49.61],[38518,4.24,118.33,-48.1],[38538,4.96,118.37,26.77],[38593,5.46,118.55,-35.88],[38639,5.45,118.68,47.56],[38722,5.37,118.92,19.88],[38835,4.18,119.21,-22.88],[38846,5.35,119.24,-43.5],[38872,5.06,119.33,-44.11],[38901,4.79,119.42,-30.33],[38917,5.12,119.47,-45.58],[38957,4.41,119.56,-49.24],[38962,5.3,119.59,2.22],[39023,5.11,119.77,-23.31],[39061,5.22,119.87,-39.3],[39070,5.18,119.91,-60.59],[39079,4.93,119.93,-3.68],[39095,4.61,119.97,-18.4],[39117,5.35,120.05,73.92],[39138,4.81,120.08,-63.57],[39211,4.68,120.31,-1.39],[39311,4.38,120.57,2.33],[39424,4.94,120.88,27.79],[39487,5.12,121.07,-32.67],[39538,5.39,121.2,79.48],[39567,5.14,121.27,13.12],[39690,5.02,121.67,-45.27],[39734,5.34,121.83,-20.55],[39780,5.3,121.94,21.58],[39847,4.8,122.11,51.51],[39903,4.74,122.25,-61.3],[39906,4.39,122.26,-19.25],[39961,5.18,122.4,-44.12],[39970,5.22,122.43,-47.94],[40084,4.72,122.82,-12.93],[40091,4.42,122.84,-39.62],[40096,4.75,122.86,-42.99],[40107,5.35,122.89,-7.77],[40167,4.67,123.05,17.65],[40215,5.33,123.2,68.47],[40259,4.99,123.33,-15.79],[40274,4.77,123.37,-35.9],[40285,5.13,123.4,-46.99],[40321,5.06,123.49,-36.32],[40326,4.44,123.51,-40.35],[40429,5.26,123.82,-62.92],[40680,5.06,124.58,-65.61],[40706,4.4,124.64,-36.66],[40817,5.32,124.95,-71.51],[40888,4.34,125.16,-77.48],[40943,5.18,125.34,-36.48],[40945,4.8,125.35,-33.05],[41003,5.28,125.52,-73.4],[41039,4.82,125.63,-48.49],[41260,5.3,126.27,-24.05],[41296,5.17,126.38,-51.73],[41323,5.42,126.47,-42.15],[41325,5.12,126.48,7.56],[41483,5.07,126.9,-53.09],[41616,5.33,127.27,-47.93],[41639,5.15,127.36,-44.72],[41817,5.43,127.88,-19.58],[41822,5.34,127.9,18.09],[41909,5.33,128.18,20.44],[42080,5.45,128.65,65.15],[42088,5.01,128.68,-49.94],[42129,5.23,128.81,-58.22],[42134,4.85,128.83,-58.01],[42286,5.46,129.33,-62.85],[42312,4.14,129.41,-42.99],[42334,5.27,129.47,-26.26],[42425,5.2,129.77,-70.39],[42430,5.17,129.78,-22.66],[42459,5.44,129.85,-53.44],[42483,4.87,129.93,-29.56],[42504,5.19,129.99,-53.05],[42509,4.97,130.01,-12.48],[42527,4.61,130.05,64.33],[42540,5.22,130.08,-40.26],[42604,5.36,130.25,45.83],[42624,4.77,130.3,-47.32],[42637,5.45,130.33,-78.96],[42662,4.87,130.43,-15.94],[42679,5.23,130.49,-45.41],[42712,5.47,130.57,-48.1],[42715,5.47,130.58,-53.1],[42726,4.82,130.61,-53.11],[42834,5.16,130.92,-49.82],[42835,4.63,130.92,-7.23],[42884,4.05,131.1,-42.65],[43067,4.32,131.59,-13.55],[43082,5.46,131.63,-45.91],[43105,4.49,131.68,-56.77],[43142,5.28,131.81,-1.9],[43305,5.31,132.34,-3.44],[43325,5.47,132.41,-40.32],[43347,4.94,132.45,-45.31],[43352,5.19,132.46,-32.78],[43413,5.11,132.64,-46.53],[43414,5.33,132.65,-66.79],[43531,5.15,132.99,43.73],[43671,5.3,133.46,-47.52],[43721,7.08,133.56,30.58],[43825,4.89,133.88,-27.68],[43834,5.23,133.92,27.93],[43851,5.44,133.98,11.63],[43878,4.72,134.08,-52.72],[43908,5.42,134.17,-85.66],[43932,5.44,134.24,32.91],[43937,4.9,134.24,-59.23],[43970,5.22,134.31,15.32],[44093,5.15,134.72,-47.23],[44143,5.16,134.85,-59.08],[44154,5.22,134.89,32.42],[44191,4.45,135.02,-41.25],[44337,5.23,135.44,-52.19],[44390,4.76,135.64,67.63],[44405,5.45,135.68,24.45],[44599,4.47,136.29,-72.6],[44613,5.95,136.35,48.53],[44626,4.65,136.41,-70.54],[44659,4.98,136.49,5.09],[44798,5.24,136.94,10.67],[44818,5.42,137,29.65],[44824,4.56,137.01,-25.86],[44857,5.14,137.1,66.87],[44901,4.48,137.22,51.6],[44946,5.15,137.34,22.05],[44961,5.46,137.4,-8.79],[45038,4.8,137.6,67.13],[45075,4.64,137.73,63.51],[45085,5,137.77,-44.87],[45290,5.28,138.45,43.22],[45328,5.25,138.57,-55.57],[45333,5.18,138.59,61.42],[45344,5.25,138.6,-43.23],[45410,5.35,138.81,14.94],[45439,4.94,138.9,-38.57],[45448,4.62,138.94,-37.41],[45455,5.27,138.96,56.74],[45493,4.81,139.05,54.02],[45496,4.32,139.05,-57.54],[45505,5.09,139.1,-44.27],[45526,5.47,139.17,-8.74],[45527,5.23,139.17,-6.35],[45544,5.3,139.24,-39.4],[45571,5.39,139.32,-68.69],[45581,5.32,139.36,-74.89],[45631,5.25,139.52,-51.05],[45751,4.77,139.94,-11.97],[45811,4.81,140.12,-9.56],[45856,4.8,140.24,-62.4],[45902,4.72,140.37,-25.97],[46026,4.68,140.8,-28.83],[46107,5.36,141.04,-80.79],[46146,4.46,141.16,26.18],[46283,5.09,141.57,-53.38],[46358,5.47,141.78,-71.6],[46371,4.69,141.83,-22.34],[46404,5.38,141.95,-6.07],[46454,5.4,142.11,9.06],[46471,5.39,142.17,45.6],[46515,4.51,142.31,-35.95],[46578,5.48,142.48,-26.59],[46594,5.46,142.52,-51.52],[46735,5.37,142.89,35.1],[46741,5.45,142.9,-73.08],[46750,4.31,142.93,22.97],[46771,4.96,142.99,11.3],[46774,5.07,142.99,9.72],[46811,5.4,143.08,-40.65],[46880,5,143.3,-21.12],[46914,5.12,143.44,-49.01],[46928,5.06,143.47,-80.94],[46950,5.03,143.54,-51.26],[46974,4.09,143.61,-59.23],[46977,4.57,143.62,69.83],[47006,4.46,143.71,52.05],[47029,4.8,143.77,39.62],[47080,5.34,143.91,35.81],[47175,4.35,144.21,-49.36],[47193,4.26,144.27,81.33],[47204,5.47,144.3,-53.67],[47205,5.01,144.3,6.84],[47300,5.28,144.59,40.24],[47310,4.68,144.61,4.65],[47391,4.5,144.84,-61.33],[47452,5.05,145.08,-14.33],[47479,5.31,145.18,-57.98],[47522,4.76,145.32,-23.59],[47592,4.94,145.56,-23.92],[47654,5.14,145.74,72.25],[47723,5.35,145.93,14.02],[47758,4.79,146.05,-27.77],[47956,5.44,146.59,-76.78],[47965,5.2,146.63,57.13],[48113,5.1,147.15,46.02],[48224,5.08,147.49,-45.73],[48374,4.58,147.92,-46.55],[48390,5.29,147.97,24.4],[48437,5.07,148.13,-8.11],[48559,4.88,148.55,-25.93],[48615,4.94,148.72,-19.01],[48682,5.27,148.93,49.82],[48833,5.1,149.42,41.06],[48883,5.26,149.56,12.44],[49029,4.7,150.05,8.04],[49081,5.37,150.25,31.92],[49402,4.59,151.28,-13.06],[49485,5.06,151.55,-47.37],[49637,4.38,151.98,10],[49698,5.26,152.18,-65.82],[49712,4.85,152.23,-51.81],[49809,5.3,152.52,-12.82],[50070,5.27,153.35,-51.23],[50083,5.14,153.38,-66.37],[50303,5.49,154.06,29.31],[50333,5.41,154.17,13.73],[50414,5.24,154.41,-8.07],[50555,4.54,154.9,-55.03],[50564,4.78,154.93,19.47],[50676,4.51,155.23,-56.04],[50799,4.83,155.58,-41.65],[50847,4.99,155.74,-66.9],[50888,5.33,155.87,-38.01],[50933,4.93,156.03,65.57],[51056,4.72,156.48,33.8],[51192,4.7,156.85,-57.64],[51313,5.27,157.22,-64.17],[51362,5.18,157.37,-2.74],[51438,4.71,157.58,-71.99],[51459,4.82,157.66,55.98],[51495,4.92,157.76,-73.22],[51502,5.25,157.77,82.56],[51523,4.89,157.84,-53.72],[51585,5.46,158.05,14.14],[51635,5.03,158.24,-47],[51658,4.72,158.31,40.43],[51718,5.06,158.5,-23.75],[51775,5.07,158.7,6.95],[51808,4.85,158.77,75.71],[51814,5.15,158.79,57.08],[51849,4.43,158.9,-57.56],[51912,5.09,159.09,-59.56],[51979,4.89,159.31,-27.41],[52004,5.45,159.36,-58.73],[52009,4.82,159.39,-13.38],[52085,4.9,159.65,-16.88],[52098,4.68,159.68,31.98],[52102,4.87,159.69,-59.18],[52154,4.27,159.83,-55.6],[52353,5.12,160.49,65.72],[52370,4.82,160.56,-64.47],[52405,5.51,160.67,-59.22],[52425,4.99,160.77,69.08],[52457,5.07,160.85,23.19],[52469,5.18,160.89,46.2],[52502,4.79,161.03,-63.96],[52595,5.46,161.32,-80.47],[52633,4.43,161.45,-80.54],[52638,5.35,161.47,30.68],[52678,5.34,161.57,-64.51],[52689,5.48,161.61,14.19],[52701,5.23,161.62,-64.26],[52736,4.83,161.71,-64.38],[52737,5.44,161.72,-17.3],[52742,5.23,161.74,-56.76],[52911,5.31,162.31,10.55],[53154,5.25,163.13,-57.24],[53252,5.24,163.37,-20.14],[53261,5.11,163.39,54.59],[53273,5.45,163.43,-2.13],[53295,4.66,163.49,43.19],[53417,4.32,163.9,24.75],[53426,5.03,163.93,33.51],[53502,4.6,164.18,-37.14],[53721,5.03,164.87,40.43],[53773,4.39,165.04,-42.23],[53781,5.45,165.06,45.53],[53807,4.84,165.14,3.62],[53824,4.98,165.19,6.1],[53838,5.06,165.21,39.21],[53907,4.75,165.46,-2.48],[53954,4.4,165.58,20.18],[54173,5.41,166.23,-35.8],[54182,4.62,166.25,7.34],[54204,4.91,166.33,-27.29],[54301,4.61,166.64,-62.42],[54360,5.24,166.82,-42.64],[54461,5.19,167.14,-61.95],[54477,5.42,167.18,-28.08],[54746,5.37,168.14,-49.1],[54751,4.62,168.15,-60.32],[54767,5.22,168.19,-64.17],[54849,5.4,168.44,-0.07],[54951,4.63,168.8,23.1],[55016,5.32,168.97,13.31],[55084,4.45,169.17,-3.65],[55137,5.18,169.32,2.01],[55266,4.8,169.78,38.19],[55434,4.04,170.28,6.03],[55560,5.03,170.71,43.48],[55588,4.99,170.8,-36.16],[55597,5.09,170.84,-64.95],[55598,5.09,170.84,-18.78],[55642,4.01,170.98,10.53],[55650,5.39,171.01,1.41],[55756,5.22,171.37,-36.06],[55779,5.17,171.43,-63.97],[55831,5.54,171.65,-61.12],[55945,4.94,171.98,2.86],[56000,5.14,172.15,-42.67],[56034,5.35,172.27,39.34],[56127,4.77,172.58,-3],[56243,5.1,172.94,-59.44],[56250,5.14,172.95,-59.52],[56280,4.93,173.07,-29.26],[56290,5.46,173.09,61.08],[56332,5.11,173.23,-31.09],[56391,5.39,173.4,-40.59],[56573,5.25,173.98,-47.64],[56583,5.19,174.01,69.32],[56647,4.3,174.24,-0.82],[56656,5.15,174.25,-61.28],[56700,5.46,174.39,-47.75],[56754,5.14,174.53,-61.83],[56779,5.36,174.62,8.13],[56802,5.48,174.67,-13.2],[56862,5.1,174.87,-65.4],[56922,4.7,175.05,-34.74],[56975,5.26,175.2,21.35],[56986,4.92,175.22,-62.09],[56997,5.34,175.26,34.2],[57047,5.2,175.43,-32.5],[57111,5.31,175.62,66.74],[57175,5.03,175.88,-62.49],[57328,4.84,176.32,8.26],[57371,5.27,176.43,-45.69],[57439,4.1,176.63,-61.18],[57443,4.88,176.63,-40.5],[57477,5.25,176.73,55.63],[57512,5.41,176.83,-57.7],[57562,5.32,176.98,8.25],[57565,4.52,177,20.22],[57581,4.73,177.06,-66.81],[57613,5.11,177.19,-26.75],[57669,4.31,177.42,-63.79],[57696,4.96,177.49,-70.23],[57803,4.46,177.79,-45.17],[57851,4.99,177.96,-65.21],[58082,5.27,178.68,-25.71],[58379,5.44,179.56,-56.32],[58484,4.88,179.91,-78.22],[58510,5.35,179.99,3.66],[58587,5.26,180.21,-19.66],[58590,4.64,180.22,6.61],[58684,5.22,180.53,43.05],[58758,4.32,180.76,-63.31],[58803,5.15,180.91,-42.43],[58867,4.72,181.08,-63.17],[58884,5.34,181.16,-68.33],[58905,5.02,181.19,-76.52],[58948,4.12,181.3,8.73],[59072,4.14,181.72,-64.61],[59151,5.17,181.96,-75.37],[59173,4.47,182.02,-50.66],[59184,5.34,182.06,-48.69],[59394,5.47,182.77,-23.6],[59504,5.14,183.05,77.62],[59654,5.31,183.51,-45.72],[59819,5.09,184,14.9],[59847,4.86,184.09,23.95],[59856,4.94,184.13,33.06],[59929,4.02,184.39,-67.96],[60009,4.05,184.61,-64],[60044,5.46,184.71,75.16],[60059,5.01,184.75,-55.14],[60122,5.29,184.95,48.98],[60172,4.96,185.09,3.31],[60189,5.21,185.14,-22.22],[60202,4.74,185.18,17.79],[60221,5.14,185.23,-13.57],[60320,5.15,185.53,-67.52],[60351,4.81,185.63,25.85],[60379,5.37,185.71,-57.68],[60449,5.31,185.9,-35.41],[60485,4.76,186.01,51.56],[60514,5.18,186.08,26.1],[60646,5.01,186.46,39.02],[60697,4.95,186.6,27.27],[60710,4.81,186.63,-51.45],[60746,4.96,186.75,26.83],[60781,5.5,186.87,-58.99],[60855,5.44,187.09,-39.04],[60904,5.24,187.23,25.91],[60941,5.47,187.36,24.11],[60978,5.35,187.49,58.41],[60998,4.95,187.53,69.2],[61071,5.44,187.75,24.57],[61136,5.53,187.92,-59.42],[61309,5.38,188.41,33.25],[61318,5.48,188.44,-9.45],[61384,4.95,188.68,70.02],[61394,4.77,188.71,22.63],[61418,5.02,188.78,18.38],[61468,5.11,188.94,-41.02],[61621,5.41,189.43,-27.14],[61724,5.49,189.78,21.06],[61740,4.64,189.81,-8],[61789,4.64,189.97,-39.99],[61910,5.17,190.32,-13.01],[61960,4.88,190.47,10.24],[61966,4.94,190.49,-59.69],[62012,4.66,190.65,-48.81],[62027,5.31,190.71,-63.06],[62131,5.45,191,-28.32],[62223,4.87,191.28,45.44],[62267,5.21,191.4,7.67],[62268,4.69,191.41,-60.98],[62327,4.62,191.59,-56.49],[62356,5.12,191.66,16.58],[62423,5.42,191.89,66.79],[62572,5.35,192.31,83.41],[62683,4.89,192.67,-34],[62763,4.94,192.92,27.54],[62867,4.33,193.28,-48.94],[62886,4.91,193.32,21.24],[62896,4.27,193.36,-40.18],[62985,4.8,193.59,-9.54],[63003,4.04,193.65,-57.18],[63005,5.2,193.65,-57.17],[63007,4.6,193.66,-59.15],[63031,5.45,193.75,-85.12],[63066,5.45,193.83,-42.92],[63076,5.23,193.87,65.44],[63117,5.32,193.99,-56.84],[63210,5.16,194.27,-51.2],[63355,5,194.73,17.41],[63432,5.37,194.98,66.6],[63462,4.88,195.07,30.79],[63503,4.93,195.18,56.37],[63724,4.83,195.89,-49.53],[63901,5.2,196.44,35.8],[63945,4.69,196.57,-48.46],[64004,4.27,196.73,-49.91],[64022,4.69,196.79,27.62],[64078,5.15,196.97,-10.74],[64094,5.53,197.03,-65.31],[64238,4.4,197.49,-5.54],[64348,5.23,197.85,-43.37],[64408,4.85,198.01,-37.8],[64407,5.04,198.01,-16.2],[64425,4.59,198.07,-59.92],[64540,4.94,198.43,40.15],[64577,5.33,198.55,-19.93],[64583,4.93,198.56,-59.1],[64661,4.78,198.81,-67.89],[64725,5.22,198.99,-19.94],[64792,5.19,199.19,9.42],[64803,5.11,199.22,-31.51],[64820,4.85,199.3,-66.78],[64823,5.33,199.32,13.68],[64844,4.7,199.39,40.57],[64852,4.8,199.4,5.47],[64906,5.15,199.56,49.68],[64924,4.74,199.6,-18.31],[65112,5.44,200.16,-52.75],[65271,4.51,200.66,-60.99],[65301,5.35,200.75,-17.74],[65387,4.52,201,-64.54],[65468,5.04,201.28,-74.89],[65479,5.31,201.31,-64.49],[65535,5.09,201.53,-39.76],[65581,5.25,201.68,-12.71],[65639,4.75,201.86,-15.97],[65721,4.97,202.11,13.78],[65728,5.4,202.11,59.95],[65810,5.03,202.36,-51.17],[66006,4.69,202.99,-6.26],[66098,5.21,203.24,-10.16],[66200,4.94,203.53,3.66],[66234,4.7,203.61,49.02],[66257,4.98,203.7,37.18],[66458,4.82,204.37,36.29],[66634,5.46,204.88,52.92],[66738,4.66,205.18,54.68],[66803,5.01,205.4,-8.7],[66821,4.99,205.44,-54.56],[66849,5.37,205.5,-58.79],[66936,5.42,205.77,3.54],[67153,4.23,206.42,-33.04],[67234,4.63,206.66,-51.43],[67244,5.15,206.73,-36.25],[67275,4.49,206.82,17.46],[67288,5.43,206.86,-17.86],[67304,5.45,206.91,-50.32],[67457,4.19,207.36,-34.45],[67480,4.91,207.43,21.26],[67494,4.96,207.47,-18.13],[67627,4.66,207.86,64.72],[67665,4.74,207.95,34.44],[67669,4.32,207.96,-32.99],[67703,5.26,208.02,-52.81],[67786,4.73,208.3,-31.93],[67929,5.16,208.68,-1.5],[68103,5,209.14,27.49],[68191,4.7,209.41,-63.69],[68269,5.15,209.63,-24.97],[68523,4.33,210.43,-45.6],[68581,5.47,210.59,-27.43],[68862,4.34,211.51,-41.18],[68940,5.45,211.68,-9.31],[69038,5.28,211.98,43.85],[69068,5.25,212.07,49.46],[69112,4.81,212.21,77.55],[69191,4.74,212.48,-53.44],[69226,4.83,212.6,25.09],[69269,4.91,212.71,-16.3],[69373,5.24,213.02,69.43],[69389,5.02,213.07,2.41],[69415,5.08,213.19,-27.26],[69483,4.5,213.37,51.79],[69612,5.32,213.71,10.1],[69618,5.07,213.74,-57.09],[69713,4.75,214.04,51.37],[69732,4.18,214.1,46.09],[69879,4.8,214.5,35.51],[69896,4.89,214.56,-81.01],[69974,4.52,214.78,-13.37],[69989,5.4,214.82,13],[70012,5.14,214.89,-2.27],[70027,4.84,214.94,16.31],[70035,5.23,214.96,-61.27],[70069,4.35,215.08,-56.39],[70090,4.03,215.14,-37.89],[70104,4.77,215.18,-45.19],[70248,5.05,215.6,-80.11],[70264,4.94,215.65,-58.46],[70300,4.42,215.76,-39.51],[70306,4.75,215.77,-27.75],[70327,4.87,215.84,8.45],[70400,5.09,216.05,5.82],[70469,5.33,216.2,-24.81],[70497,4.05,216.3,51.85],[70574,4.55,216.53,-45.22],[70602,5.39,216.61,19.23],[70692,4.24,216.88,75.7],[70753,4.97,217.04,-29.49],[70755,4.84,217.05,-2.23],[70794,5.42,217.17,-6.9],[70931,5.38,217.59,-49.52],[71121,4.42,218.15,-50.46],[71284,4.47,218.67,29.75],[71500,5.43,219.33,-46.13],[71618,5.39,219.71,44.4],[71762,4.89,220.18,16.42],[71832,4.86,220.41,8.16],[71865,4,220.49,-37.79],[71995,4.79,220.86,26.53],[72010,4.04,220.91,-35.17],[72104,4.92,221.25,-35.19],[72125,4.6,221.31,16.96],[72131,5.36,221.32,-62.88],[72197,5.15,221.5,-25.44],[72290,5.22,221.76,-52.38],[72357,5.23,221.94,-26.09],[72489,5.31,222.33,-14.15],[72571,4.41,222.57,-27.96],[72582,5.47,222.62,37.27],[72603,5.16,222.67,-16],[72631,4.94,222.75,-2.3],[72659,4.59,222.85,19.1],[72664,5.48,222.86,59.29],[72683,4.31,222.91,-43.58],[72800,5.02,223.21,-37.8],[72929,5.27,223.58,-24.64],[73036,5.18,223.89,-60.11],[73049,5.31,223.94,-33.86],[73095,5.39,224.07,-52.81],[73129,5.11,224.18,-62.78],[73133,5.45,224.19,-11.41],[73165,4.49,224.3,-4.35],[73199,4.54,224.4,65.93],[73223,5.36,224.47,-76.66],[73473,4.93,225.24,-8.52],[73568,4.81,225.53,25.01],[73620,4.4,225.73,2.09],[73624,5.44,225.75,-32.64],[73695,4.83,225.95,47.65],[73745,4.55,226.11,26.95],[73776,5.17,226.2,-64.03],[73826,5.13,226.33,-41.07],[73909,5.25,226.57,54.56],[73945,5.2,226.66,-16.26],[73996,4.93,226.83,24.87],[74117,4.05,227.21,-45.28],[74305,5.43,227.82,-55.35],[74392,4.54,228.06,-19.79],[74449,4.81,228.21,-44.5],[74596,5.27,228.62,29.16],[74604,4.92,228.66,-31.52],[74605,5.15,228.66,67.35],[74649,5.34,228.8,4.94],[74707,5.17,229.02,-41.49],[74778,5.09,229.24,-60.96],[74793,5.02,229.27,71.82],[74837,4.85,229.41,-63.61],[74857,4.33,229.46,-30.15],[74911,4.27,229.63,-47.88],[74941,5.46,229.7,-60.5],[74975,5.04,229.83,1.77],[75119,5.39,230.26,0.72],[75178,5.37,230.45,32.93],[75206,5,230.53,-47.93],[75304,4.54,230.79,-36.86],[75312,4.98,230.8,30.29],[75379,4.92,231.05,-10.32],[75411,4.31,231.12,37.38],[75439,5.37,231.19,-39.71],[75501,4.6,231.33,-38.73],[75530,5.17,231.45,15.43],[75572,5.45,231.57,34.34],[75647,5.45,231.83,-36.77],[75761,5.17,232.16,1.84],[75828,5.22,232.35,-46.73],[75973,5.03,232.73,40.83],[76008,4.98,232.85,77.35],[76013,5.49,232.88,-73.39],[76041,4.98,232.95,40.9],[76219,4.62,233.54,-10.06],[76243,5.17,233.61,-9.18],[76259,5.14,233.66,-28.05],[76307,5.11,233.81,39.01],[76371,4.55,233.97,-44.96],[76397,5.43,234.05,-44.4],[76425,5.25,234.12,10.01],[76440,4.1,234.18,-66.32],[76534,5.25,234.46,40.35],[76618,5.42,234.71,-52.37],[76628,5.36,234.73,-19.3],[76669,4.98,234.84,36.64],[76705,4.66,234.94,-34.41],[76742,4.96,235.07,-23.82],[76829,4.63,235.3,-44.66],[76852,4.51,235.39,19.67],[76866,5.33,235.45,12.85],[76880,4.72,235.49,-19.68],[76939,5.24,235.66,-37.42],[76945,4.72,235.67,-34.71],[76957,5.48,235.71,52.36],[77060,5.41,236.02,-15.67],[77227,5.39,236.52,-1.8],[77257,4.42,236.61,7.35],[77277,5.19,236.67,62.6],[77578,5.22,237.57,2.2],[77635,4.64,237.74,-25.75],[77655,4.82,237.81,35.66],[77660,5.1,237.81,-3.09],[77661,4.78,237.82,20.98],[77811,5.03,238.33,-20.17],[77840,4.59,238.4,-25.33],[77858,5.37,238.47,-24.53],[77859,5.4,238.48,-23.98],[77902,5.44,238.64,20.31],[77907,5.38,238.66,43.14],[77982,5.1,238.87,-68.6],[78012,5.42,238.95,37.95],[78105,5.08,239.22,-33.97],[78180,4.96,239.45,54.75],[78207,4.87,239.55,-14.28],[78246,5.43,239.65,-24.83],[78323,4.98,239.88,-41.74],[78400,5.45,240.08,-16.53],[78459,5.39,240.26,33.3],[78481,5.1,240.31,17.82],[78554,4.82,240.57,22.8],[78592,4.71,240.7,46.04],[78650,4.97,240.84,-25.87],[78655,4.89,240.85,-38.6],[78662,4.67,240.88,-57.78],[78727,4.17,241.09,-11.37],[78821,4.89,241.36,-19.8],[78893,5.44,241.58,67.81],[78914,4.71,241.62,-45.17],[78918,4.2,241.65,-36.8],[78990,4.33,241.85,-20.87],[79043,4.99,242.02,17.05],[79050,5.38,242.03,-26.33],[79101,4.27,242.19,44.93],[79119,4.73,242.24,36.49],[79195,5.38,242.46,-3.47],[79280,5.47,242.71,75.88],[79302,5.1,242.76,-29.42],[79374,4,243,-19.46],[79375,4.93,243,-10.06],[79387,5.42,243.03,-8.55],[79404,4.57,243.08,-27.93],[79488,5.45,243.31,5.02],[79540,5.24,243.46,-11.84],[79607,5.23,243.67,33.86],[79653,5.12,243.81,-47.37],[79672,5.5,243.91,-8.37],[79754,5.44,244.18,-53.81],[79790,5.09,244.25,-50.07],[79804,5.4,244.31,59.76],[79881,4.78,244.57,-28.61],[79963,5.44,244.82,-42.67],[80008,5.48,244.98,39.71],[80047,4.68,245.09,-78.7],[80057,5.25,245.11,-78.67],[80079,4.57,245.16,-24.17],[80161,5.26,245.45,69.11],[80179,4.82,245.52,1.03],[80181,4.85,245.52,30.89],[80197,5.2,245.59,33.8],[80208,5.32,245.62,-49.57],[80214,5.39,245.62,33.7],[80337,5.38,246.01,-39.19],[80343,4.5,246.03,-20.04],[80390,5.42,246.13,-37.57],[80399,5.41,246.17,-29.7],[80463,4.58,246.35,14.03],[80473,4.63,246.4,-23.45],[80569,4.43,246.76,-18.46],[80620,5.23,246.93,-7.6],[80628,4.63,246.95,-8.37],[80645,5.29,246.99,-64.06],[80650,4.95,247,68.77],[80686,4.9,247.12,-70.08],[80693,5.39,247.14,0.67],[80704,5.01,247.16,41.88],[80782,5.37,247.43,-46.24],[80815,4.79,247.55,-25.12],[80843,5.24,247.64,20.48],[80874,5.18,247.71,-61.63],[80894,4.27,247.78,-16.61],[80911,4.23,247.85,-34.7],[80945,5.39,247.92,-41.82],[80975,4.45,248.03,-21.47],[81008,4.85,248.15,11.49],[81122,4.94,248.52,-44.05],[81292,5.07,249.06,52.92],[81304,4.16,249.09,-35.26],[81305,5.52,249.09,-42.86],[81437,5.28,249.5,56.02],[81497,4.9,249.69,48.93],[81660,4.84,250.23,64.59],[81724,4.92,250.39,-17.74],[82020,4.84,251.32,56.78],[82073,5.15,251.46,8.58],[82129,5.1,251.67,-67.11],[82135,5.48,251.7,-39.38],[82216,5.24,251.94,5.25],[82321,4.82,252.31,45.98],[82369,4.63,252.46,-10.78],[82402,5.47,252.58,7.25],[82493,5.22,252.89,-41.23],[82504,5.03,252.94,24.66],[82587,5.33,253.24,31.7],[82673,4.38,253.5,10.17],[82676,5.45,253.51,-41.81],[82730,5.23,253.65,-6.15],[82764,5.39,253.73,20.96],[82802,5.35,253.84,18.43],[82860,4.88,254.01,65.13],[82960,5.49,254.3,-33.26],[83153,4.05,254.9,-53.16],[83262,4.81,255.27,-4.22],[83313,5.27,255.4,33.57],[83336,5.01,255.47,-32.14],[83430,4.98,255.78,14.09],[83431,5.28,255.79,-53.24],[83574,4.87,256.21,-34.12],[83608,4.91,256.33,54.47],[83613,4.87,256.34,12.74],[83838,5.39,257.01,35.94],[83947,5.07,257.39,40.78],[83962,5.43,257.45,-10.52],[84033,5.08,257.68,-44.56],[84177,5.34,258.12,10.59],[84405,4.33,258.84,-26.6],[84514,4.72,259.15,-0.45],[84573,4.8,259.33,33.1],[84626,5.11,259.5,-24.29],[84671,5.02,259.65,10.86],[84720,5.48,259.77,-46.64],[84821,5.36,260.04,25.54],[84833,5,260.08,18.06],[84862,5.39,260.16,32.47],[84887,5.12,260.23,24.5],[84893,4.39,260.25,-21.11],[84969,4.78,260.5,-67.77],[84979,5.39,260.52,-70.12],[85079,5.25,260.82,-47.47],[85084,5.29,260.84,-28.14],[85162,5.11,261.05,-44.16],[85312,5.19,261.5,-50.63],[85340,4.15,261.59,-24.18],[85355,4.31,261.63,4.14],[85365,4.54,261.66,-5.09],[85389,5.28,261.72,-45.84],[85423,4.27,261.84,-29.87],[85537,5.41,262.21,0.33],[85667,5.31,262.6,-1.06],[85805,5.07,262.99,68.14],[85819,4.89,263.04,55.18],[86036,5.21,263.75,61.87],[86092,4.59,263.91,-46.51],[86170,4.27,264.14,-38.64],[86182,5.35,264.16,48.59],[86201,4.77,264.24,68.76],[86284,4.62,264.46,-8.12],[86305,5.24,264.52,-54.5],[86486,4.77,265.1,-49.42],[86614,4.55,265.48,72.15],[86736,4.86,265.86,-21.68],[86796,5.15,266.04,-51.83],[87194,5.1,267.2,25.62],[87212,5.02,267.27,50.78],[87220,4.8,267.29,-31.7],[87234,5.02,267.36,76.96],[87294,4.8,267.55,-40.09],[87563,5.15,268.33,40.01],[87728,5.43,268.8,72.01],[87747,5.36,268.85,26.05],[87846,4.85,269.2,-44.34],[87847,5.44,269.2,-4.08],[87936,4.86,269.45,-41.72],[87998,4.41,269.63,30.19],[88060,5,269.77,-30.25],[88116,4.72,269.95,-23.82],[88128,4.67,270.01,16.75],[88149,4.6,270.07,4.37],[88175,4.62,270.12,-3.69],[88267,4.26,270.38,21.6],[88290,4.43,270.44,1.31],[88331,5.25,270.6,20.83],[88380,5.34,270.71,-24.28],[88404,4.79,270.77,-8.18],[88567,4.69,271.26,-29.58],[88601,4.03,271.36,2.5],[88657,5.06,271.51,22.22],[88726,4.95,271.71,-43.43],[88745,5.13,271.76,30.56],[88765,4.64,271.83,8.73],[88788,5,271.87,43.46],[88836,5.49,272.01,36.4],[88839,4.56,272.02,-28.46],[88886,4.35,272.19,20.81],[88899,5.1,272.22,20.05],[89042,5.49,272.61,-62],[89112,4.51,272.81,-45.95],[89153,4.98,272.93,-23.7],[89172,4.97,272.98,31.41],[89290,5.46,273.3,-41.34],[89348,4.99,273.47,64.4],[89369,5.47,273.57,-21.71],[89439,5.37,273.8,-20.73],[89507,5.45,273.97,-44.21],[89605,5.36,274.28,-56.02],[89678,4.63,274.51,-27.04],[89772,5.41,274.79,7.26],[89773,5.28,274.79,24.45],[89826,4.34,274.97,36.06],[89851,5.37,275.04,-15.83],[89861,4.96,275.07,21.96],[89908,4.22,275.19,71.34],[89918,4.86,275.22,3.38],[89935,5.12,275.25,28.87],[89981,5.05,275.39,49.12],[90023,5.41,275.54,23.29],[90037,5.07,275.58,-38.66],[90067,5.25,275.7,17.83],[90074,5.34,275.72,-36.67],[90133,5.46,275.9,-75.04],[90135,4.66,275.91,-8.93],[90156,4.98,275.98,58.8],[90191,5.12,276.06,39.51],[90200,5.23,276.08,-44.11],[90289,4.86,276.34,-20.54],[90344,4.82,276.5,65.56],[90414,5.45,276.73,-48.12],[90441,5.2,276.8,0.2],[90642,5.37,277.42,-1.99],[90763,5.39,277.77,-32.99],[90797,4.64,277.84,-62.28],[90806,5.12,277.86,-18.4],[90830,4.92,277.94,-45.91],[90853,5.07,278.01,-45.76],[90905,4.76,278.14,57.05],[90913,5.51,278.18,-14.87],[90923,5.47,278.21,30.55],[90982,4.61,278.38,-42.31],[91004,5.46,278.47,-24.03],[91013,5.38,278.49,52.35],[91014,5.28,278.49,-33.02],[91105,5.12,278.76,-10.98],[91217,5.39,279.12,9.12],[91235,5.41,279.16,33.47],[91237,5.43,279.16,6.67],[91494,5.43,279.9,-43.19],[91726,4.71,280.57,-9.05],[91755,5.02,280.66,55.54],[91845,4.89,280.88,-8.28],[91918,4.87,281.08,-35.64],[91919,4.67,281.08,39.67],[91926,4.59,281.09,39.61],[91975,5.01,281.21,2.06],[91989,5.44,281.24,-39.69],[92024,4.77,281.36,-64.87],[92043,4.19,281.42,20.55],[92056,5.24,281.44,74.09],[92088,4.84,281.52,26.66],[92111,5.37,281.59,-22.39],[92112,5.36,281.59,75.43],[92161,4.36,281.76,18.18],[92226,5.22,281.94,-40.41],[92308,5.46,282.21,-43.68],[92390,5.21,282.42,-20.32],[92405,5.23,282.47,32.55],[92512,4.64,282.8,59.39],[92614,5.39,283.07,21.43],[92646,5.17,283.17,-52.11],[92689,4.92,283.31,50.71],[92761,4.85,283.54,-22.74],[92782,4.81,283.6,71.3],[92818,4.6,283.69,22.65],[92824,5.28,283.7,-87.61],[92831,5.44,283.72,41.6],[92845,4.98,283.78,-22.67],[92862,4,283.83,43.95],[92951,4.98,284.06,4.2],[93017,5.2,284.26,32.9],[93026,4.82,284.27,-5.85],[93057,5.05,284.34,-20.66],[93124,5.38,284.56,17.36],[93148,4.84,284.62,-52.94],[93163,5.14,284.65,-60.2],[93203,5.26,284.77,13.62],[93256,5.26,284.94,26.23],[93279,4.93,285,32.15],[93299,5.38,285.06,50.53],[93408,5.01,285.36,46.93],[93429,4.02,285.42,-5.74],[93526,5.4,285.73,-3.7],[93667,5.48,286.1,-31.05],[93713,5.38,286.23,53.4],[93717,5.39,286.24,-4.03],[93815,5.17,286.58,-52.34],[93867,5.09,286.74,11.07],[93903,5.25,286.83,36.1],[93917,5.22,286.86,32.5],[94068,5.23,287.25,6.07],[94083,5.11,287.29,76.56],[94150,5.31,287.47,-68.42],[94302,5.13,287.92,56.86],[94385,5.34,288.17,-7.94],[94477,5.15,288.43,2.29],[94481,4.4,288.44,39.15],[94490,5,288.48,57.71],[94643,4.86,288.89,-25.26],[94648,4.45,288.89,73.36],[94703,4.77,289.05,21.39],[94712,5.37,289.09,-45.47],[94713,4.38,289.09,38.13],[94827,5.43,289.43,23.03],[94834,5.28,289.45,11.6],[94885,5.28,289.64,1.09],[95066,4.99,290.14,-5.42],[95073,5.45,290.15,-0.89],[95081,4.59,290.17,65.71],[95176,4.61,290.43,-15.96],[95260,5.19,290.71,26.26],[95261,5.02,290.71,-54.42],[95372,4.98,291.03,29.62],[95447,5.17,291.24,11.94],[95477,5.01,291.32,-24.51],[95498,5.16,291.37,19.8],[95503,5.43,291.37,-23.96],[95556,5.15,291.54,36.32],[95585,4.72,291.63,0.34],[95865,5.49,292.47,-26.99],[95937,5.03,292.67,-2.79],[95951,5.11,292.69,27.97],[96052,4.72,292.94,34.45],[96100,4.68,293.09,69.66],[96229,4.45,293.52,7.38],[96275,5,293.65,19.77],[96288,5.34,293.67,42.41],[96302,5.41,293.71,29.46],[96327,5.12,293.78,-10.56],[96341,4.88,293.8,-48.1],[96441,4.48,294.11,50.22],[96459,5.17,294.16,44.69],[96465,4.6,294.18,-24.88],[96468,4.36,294.18,-1.29],[96483,4.96,294.22,-7.03],[96536,5.45,294.39,-14.3],[96556,5.68,294.45,-4.65],[96665,5.17,294.8,5.4],[96683,4.67,294.84,30.15],[96693,5.4,294.86,42.82],[96808,5.3,295.18,-16.29],[96825,5.06,295.21,45.52],[96950,5.05,295.63,-16.12],[96957,5.31,295.64,11.83],[97063,5.49,295.89,-15.47],[97118,4.89,296.07,37.35],[97290,4.87,296.59,-19.76],[97295,5,296.61,33.73],[97421,5.33,297,-56.36],[97496,5.03,297.24,19.14],[97534,5.39,297.36,-72.5],[97630,5.12,297.64,38.72],[97635,5.03,297.66,52.99],[97646,5.41,297.69,-59.19],[97650,5.39,297.69,-10.76],[97675,5.12,297.76,10.42],[97679,4.96,297.77,22.61],[97749,5.33,297.96,-39.87],[97870,5.13,298.32,57.52],[97886,4.64,298.37,24.08],[97938,4.71,298.56,8.46],[98055,5.02,298.91,52.44],[98066,4.7,298.96,-26.3],[98068,4.95,298.97,38.49],[98073,4.96,298.98,58.85],[98103,5.28,299.06,11.42],[98162,4.53,299.24,-27.17],[98174,5.24,299.28,-58.9],[98194,5.46,299.31,40.37],[98258,5,299.49,-15.49],[98353,4.85,299.74,-26.2],[98421,5.3,299.96,-34.7],[98425,5.19,299.98,37.04],[98438,5.35,300.01,17.52],[98571,5.05,300.34,50.1],[98583,5.27,300.37,64.82],[98608,5.13,300.44,-59.38],[98624,5.33,300.47,-66.94],[98636,5.23,300.51,24.94],[98702,4.5,300.7,67.87],[98761,4.76,300.89,-37.94],[98842,4.99,301.08,-32.06],[98962,5.41,301.39,62],[99031,5.38,301.59,35.97],[99080,5.06,301.72,23.61],[99120,4.94,301.85,-52.88],[99255,4.4,302.22,77.71],[99303,4.93,302.36,36.84],[99461,5.32,302.8,-36.1],[99631,5.47,303.31,-1.01],[99639,4.82,303.33,46.82],[99655,4.27,303.35,56.57],[99738,5.19,303.56,28.69],[99742,4.95,303.57,15.2],[99770,4.99,303.63,36.81],[99824,4.75,303.82,25.59],[99853,5.18,303.88,23.51],[99874,4.52,303.94,27.81],[99951,5.3,304.2,24.67],[99968,5.24,304.23,40.37],[100027,4.27,304.41,-12.51],[100044,4.82,304.45,38.03],[100122,5.16,304.66,34.98],[100195,5.27,304.85,-19.12],[100310,4.76,305.17,-12.76],[100541,5.3,305.79,5.34],[100587,4.44,305.97,32.19],[100881,5.14,306.83,-18.21],[100965,5.37,307.06,81.42],[101027,4.77,307.22,-17.81],[101076,4.01,307.35,30.37],[101093,4.22,307.4,62.99],[101101,4.9,307.41,-2.89],[101138,4.94,307.51,48.95],[101243,5.44,307.83,49.22],[101260,5.19,307.88,74.95],[101474,4.64,308.48,35.25],[101477,5.12,308.48,-44.52],[101483,5.38,308.49,13.03],[101589,4.65,308.83,14.67],[101612,4.75,308.9,-60.58],[101692,4.88,309.18,-2.55],[101773,4.85,309.4,-61.53],[101800,5.42,309.45,11.38],[101847,4.33,309.58,-1.11],[101867,4.82,309.63,21.2],[101868,5.05,309.63,24.12],[101916,5.07,309.78,10.09],[101923,5.24,309.82,-14.95],[101936,5.15,309.85,0.49],[101983,5.12,310.01,-60.55],[101984,5.1,310.01,-18.14],[102014,5.47,310.08,-33.43],[102157,5.13,310.49,-66.76],[102177,5.4,310.55,50.34],[102333,4.5,311.01,-51.92],[102388,4.91,311.22,25.27],[102431,4.51,311.34,57.58],[102453,4.23,311.42,30.72],[102497,5.47,311.58,-39.2],[102531,4.96,311.66,16.12],[102571,4.93,311.79,34.37],[102589,4.54,311.85,36.49],[102599,5.37,311.89,80.55],[102624,4.44,311.93,-5.03],[102693,5.1,312.12,-43.99],[102724,4.86,312.23,46.11],[102773,5.41,312.33,-68.78],[102790,4.88,312.37,-46.23],[102843,5.06,312.52,44.06],[102950,5.04,312.88,-51.61],[103004,4.57,313.03,27.1],[103045,4.72,313.16,-8.98],[103089,4.77,313.31,44.39],[103094,5.46,313.33,45.18],[103127,5.33,313.42,-39.81],[103145,5.47,313.47,33.44],[103200,5.01,313.64,28.06],[103294,5.18,313.9,13.72],[103401,5.48,314.23,-9.7],[103511,5.29,314.57,22.33],[103569,5.3,314.77,4.29],[103571,5.24,314.77,4.29],[103632,4.75,314.96,47.52],[103732,5.43,315.3,46.16],[103882,5.31,315.74,-38.63],[104019,4.84,316.1,-19.86],[104043,5.15,316.18,-77.02],[104085,5.16,316.31,-54.73],[104174,5.2,316.6,-32.34],[104194,4.51,316.65,47.65],[104214,5.21,316.72,38.75],[104234,4.5,316.78,-25.01],[104365,5.32,317.14,-21.19],[104382,5.42,317.2,-88.96],[104459,4.52,317.4,-11.37],[104738,5.26,318.26,-39.42],[104750,5.39,318.32,-27.62],[104755,5.07,318.34,-70.13],[104963,5.15,318.91,-20.65],[104974,5.32,318.94,-15.17],[105102,4.24,319.35,39.39],[105138,4.42,319.48,34.9],[105143,5.38,319.49,-17.99],[105186,5,319.61,43.95],[105268,5.18,319.84,64.87],[105382,4.82,320.19,-40.81],[105502,4.09,320.52,19.8],[105665,5.37,321.04,-20.85],[105668,5.48,321.05,-12.88],[105767,5.47,321.32,-3.56],[105898,5.31,321.72,48.84],[105942,5.29,321.84,37.12],[105966,5.38,321.92,27.61],[105972,5.41,321.94,66.81],[106039,4.5,322.18,-21.81],[106044,5.62,322.19,-69.51],[106093,5.22,322.36,46.54],[106140,4.51,322.49,23.64],[106327,5.29,323.02,-41.18],[106551,4.91,323.69,38.53],[106711,5.04,324.24,40.41],[106723,4.55,324.27,-19.47],[106786,4.69,324.44,-7.85],[106787,5.45,324.44,19.32],[106801,4.73,324.48,62.08],[106944,5.1,324.89,2.24],[106999,5.09,325.05,43.27],[107095,5.18,325.39,-14.05],[107119,4.55,325.48,71.31],[107128,5.24,325.5,-23.26],[107136,4.66,325.52,51.19],[107151,5.3,325.56,5.68],[107188,4.73,325.66,-18.87],[107230,5.17,325.77,72.32],[107259,4.08,325.88,58.78],[107348,4.35,326.13,17.35],[107380,4.34,326.24,-33.03],[107382,5.08,326.25,-9.08],[107418,4.29,326.36,61.12],[107472,5.27,326.52,22.95],[107533,4.18,326.7,49.31],[107763,5.07,327.46,30.17],[107788,5.34,327.54,17.29],[107843,5.29,327.73,-82.72],[108022,5.08,328.27,25.93],[108036,5.08,328.32,-13.55],[108294,5.44,329.09,-37.25],[108317,4.9,329.16,63.63],[108431,4.4,329.48,-54.99],[108535,5.04,329.81,73.18],[108870,4.69,330.84,-56.79],[108874,4.69,330.83,-2.16],[108917,4.29,330.95,64.63],[108924,5.3,330.97,63.12],[108991,5.27,331.2,-0.91],[109005,5.27,331.25,62.79],[109017,5.11,331.29,62.28],[109068,4.84,331.42,5.06],[109102,5.07,331.51,45.01],[109285,4.5,332.1,-32.99],[109289,4.99,332.11,-34.04],[109400,4.79,332.45,72.34],[109404,5.37,332.48,-34.01],[109410,4.29,332.5,33.18],[109472,5.42,332.66,-11.56],[109521,5.38,332.79,50.82],[109556,5.05,332.88,59.41],[109572,5.24,332.95,56.84],[109592,5.36,333.01,60.76],[109654,5.34,333.2,34.6],[109693,5.26,333.29,86.11],[109754,4.49,333.47,39.71],[109786,5.33,333.58,-21.07],[109789,5.43,333.58,-27.77],[109857,4.18,333.76,57.04],[109908,4.8,333.9,-41.35],[109973,5.12,334.11,-41.63],[110000,5.33,334.2,-12.83],[110078,5.47,334.46,-77.51],[110109,5.39,334.57,-53.63],[110256,5.18,335.01,-80.44],[110273,5.34,335.05,-7.82],[110298,5.37,335.11,5.79],[110351,4.54,335.26,46.54],[110371,4.81,335.33,28.33],[110386,4.99,335.38,12.21],[110391,5.12,335.4,-21.6],[110618,5.29,336.15,-72.26],[110649,5.31,336.23,-57.8],[110672,4.64,336.32,1.38],[110725,5.47,336.5,70.77],[110838,4.49,336.83,-64.97],[110882,4.8,336.96,4.7],[110936,5.47,337.16,-39.13],[110991,3.75,337.29,58.42],[111043,4.11,337.44,-43.75],[111056,5.46,337.47,78.82],[111310,4.81,338.25,-61.98],[111449,5.2,338.67,-20.71],[111532,5.08,338.94,73.64],[111674,4.63,339.34,51.55],[111710,5.03,339.44,-4.23],[111795,5.17,339.66,56.8],[111797,5.19,339.66,63.58],[111841,4.88,339.82,39.05],[111944,4.46,340.13,44.28],[112031,5.23,340.37,40.23],[112051,4.79,340.44,29.31],[112203,4.84,340.87,-41.41],[112211,4.69,340.9,-18.83],[112242,5.08,341.02,41.82],[112374,4.85,341.41,-53.5],[112519,4.78,341.87,83.15],[112529,5.26,341.89,-19.61],[112731,5.44,342.44,55.9],[112781,5.31,342.6,-80.12],[112832,5.4,342.76,-39.16],[112917,4.94,343.01,43.31],[112935,5.16,343.1,9.84],[112948,4.51,343.13,-32.88],[113116,4.68,343.6,84.35],[113186,4.9,343.81,8.82],[113288,4.94,344.11,49.73],[113327,5.43,344.27,48.68],[113357,5.46,344.37,20.77],[113521,5.43,344.86,0.96],[113561,5.13,345.02,56.95],[113788,5.09,345.65,42.76],[113860,5.12,345.87,-34.75],[113864,5.23,345.89,67.21],[113889,4.52,345.97,3.82],[113919,4.64,346.05,50.05],[113957,5.36,346.17,-53.96],[113996,5.47,346.29,-7.69],[114104,4.84,346.65,59.42],[114119,4.47,346.67,-23.74],[114144,4.52,346.75,9.41],[114155,4.74,346.78,25.47],[114200,5.29,346.91,46.39],[114222,4.41,346.97,75.39],[114273,5.43,347.17,2.13],[114347,5.14,347.38,8.68],[114375,4.8,347.48,-22.46],[114389,5.39,347.51,9.82],[114520,5.15,347.93,8.72],[114570,4.52,348.14,49.41],[114724,4.22,348.58,-6.05],[114939,5.06,349.21,-7.73],[115022,4.86,349.44,49.02],[115033,4.4,349.48,-9.18],[115088,4.75,349.66,68.11],[115115,5,349.74,-9.61],[115125,5.19,349.78,-13.46],[115126,5.18,349.78,-13.46],[115152,5.44,349.87,48.63],[115227,5.07,350.09,5.38],[115250,4.58,350.16,23.74],[115355,5.35,350.48,31.81],[115404,5.22,350.66,-15.04],[115444,5.08,350.77,12.31],[115590,4.96,351.21,62.28],[115623,4.4,351.34,23.4],[115669,4.39,351.51,-20.64],[115919,4.56,352.29,12.76],[115990,4.89,352.51,58.55],[116076,5.22,352.82,39.24],[116247,4.76,353.32,-20.91],[116264,5.42,353.37,22.5],[116310,5.01,353.49,31.33],[116389,4.71,353.77,-42.62],[116602,4.74,354.46,-45.49],[116611,5.48,354.49,18.4],[116631,4.29,354.53,43.27],[116709,5.35,354.78,50.47],[116758,4.98,354.95,-14.22],[116805,4.14,355.1,44.33],[116820,5.3,355.16,-32.07],[116889,5.34,355.39,-18.03],[116901,4.83,355.44,-17.82],[116957,5.26,355.62,-15.45],[116971,4.48,355.68,-14.54],[117020,5.07,355.84,10.33],[117073,4.96,356,29.36],[117089,5.24,356.05,-18.28],[117245,5.02,356.6,3.49],[117218,5.28,356.5,-18.68],[117221,4.97,356.51,46.42],[117301,4.87,356.76,58.65],[117315,5.17,356.82,-50.23],[117371,5.04,356.98,67.81],[117375,5.49,356.99,-2.76],[117447,5.43,357.21,62.21],[117452,4.57,357.23,-28.13],[117629,5.18,357.84,-18.91],[117689,5.11,358.03,-82.02],[117718,5.08,358.12,19.12],[117730,5.3,358.15,10.95],[117863,4.59,358.6,57.5],[118121,4.99,359.4,-64.3],[118131,4.66,359.44,25.14],[118209,4.89,359.67,-3.56],[118234,5.13,359.73,-52.75],[118243,4.88,359.75,55.75],[118322,4.47,359.98,-65.58]]"),$u=JSON.parse("[[677,2.06,2.1,29.09],[746,2.27,2.29,59.15],[765,3.87,2.35,-45.75],[1067,2.84,3.31,15.18],[1562,3.55,4.86,-8.82],[1599,4.23,5.02,-64.87],[1645,5.37,5.15,8.19],[2021,2.79,6.44,-77.25],[2072,3.94,6.55,-43.68],[2081,2.38,6.57,-42.31],[2484,4.29,7.89,-62.96],[2920,3.66,9.24,53.9],[3092,3.28,9.83,30.86],[3179,2.23,10.13,56.54],[3419,2.01,10.9,-17.99],[3760,5.91,12.07,7.3],[3821,3.44,12.28,57.82],[3881,4.53,12.45,41.08],[4427,2.39,14.18,60.72],[4436,3.87,14.19,38.5],[4577,4.27,14.65,-29.36],[4889,5.5,15.7,31.8],[4906,4.28,15.74,7.89],[5165,3.3,16.52,-46.72],[5348,4.01,17.1,-55.25],[5364,3.45,17.15,-10.18],[5447,2.05,17.43,35.62],[5742,4.66,18.44,24.58],[6193,4.75,19.87,27.26],[6537,3.59,21.01,-8.18],[6686,2.68,21.45,60.24],[6867,3.42,22.09,-43.32],[7007,4.84,22.55,6.14],[7083,3.94,22.81,-49.07],[7097,3.62,22.87,15.35],[7588,0.46,24.43,-57.24],[7607,3.57,24.5,48.63],[7884,4.44,25.36,5.49],[8102,3.5,26.02,-15.94],[8198,4.26,26.35,9.16],[8645,3.72,27.87,-10.34],[8796,3.42,28.27,29.58],[8832,3.9,28.38,19.29],[8833,4.6,28.39,3.19],[8837,4.41,28.41,-46.3],[8886,3.37,28.6,63.67],[8903,2.65,28.66,20.81],[9007,3.71,28.99,-51.61],[9236,2.84,29.69,-61.57],[9347,4.02,30,-21.08],[9487,3.8,30.51,2.76],[9598,3.94,30.86,72.42],[9640,2.1,30.97,42.33],[9884,2.01,31.79,23.46],[10064,3,32.39,34.99],[10324,4.35,33.25,8.85],[10559,5.25,33.98,33.36],[10602,3.57,34.13,-51.51],[10826,6.53,34.84,-2.98],[11001,4.09,35.44,-68.66],[11345,4.87,36.49,-12.29],[11407,4.25,36.75,-47.7],[11484,4.3,37.04,8.46],[11767,2.02,37.95,89.26],[11783,4.75,38.02,-15.24],[12093,4.87,38.97,5.59],[12387,4.07,39.87,0.33],[12390,4.87,39.89,-11.87],[12394,4.1,39.9,-68.27],[12413,4.75,39.95,-42.89],[12484,5.21,40.17,-54.55],[12486,4.12,40.17,-39.86],[12706,3.47,40.83,3.24],[12770,4.24,41.03,-13.86],[12828,4.26,41.24,10.11],[12843,4.46,41.28,-18.57],[13147,4.46,42.27,-32.41],[13209,3.59,42.5,27.26],[13254,4.2,42.65,38.32],[13268,3.79,42.67,55.9],[13531,3.96,43.56,52.76],[13701,3.87,44.11,-8.9],[13847,2.9,44.57,-40.3],[13954,4.7,44.93,8.91],[14135,2.53,45.57,4.09],[14146,4.09,45.6,-23.62],[14240,5.12,45.9,-59.74],[14328,2.93,46.2,53.51],[14354,3.39,46.29,38.84],[14576,2.12,47.04,40.96],[14668,3.81,47.37,44.86],[14879,3.98,48.02,-28.99],[15197,4.8,48.96,-8.82],[15474,3.7,49.88,-21.76],[15510,4.27,49.98,-43.07],[15863,1.79,51.08,49.86],[15900,3.6,51.2,9.03],[16083,3.75,51.79,9.73],[16228,4.22,52.27,59.94],[16537,3.73,53.23,-9.46],[16611,4.25,53.45,-21.63],[17358,3.01,55.73,47.79],[17378,3.54,55.81,-9.76],[17440,3.83,56.05,-64.81],[17448,3.91,56.08,32.29],[17499,3.7,56.22,24.11],[17529,3.8,56.3,42.58],[17573,3.87,56.46,24.37],[17651,4.2,56.71,-23.25],[17678,3.26,56.81,-74.24],[17702,2.87,56.87,24.11],[17797,4.27,57.15,-37.62],[17847,3.63,57.29,24.05],[17874,4.17,57.36,-36.2],[17959,4.6,57.59,71.33],[18246,2.85,58.53,31.88],[18505,5.04,59.36,63.07],[18532,2.89,59.46,40.01],[18543,2.94,59.51,-13.51],[18597,4.57,59.69,-61.4],[18614,4.06,59.74,35.79],[18724,3.41,60.17,12.49],[18907,3.88,60.79,5.99],[19343,4.03,62.17,47.71],[19747,3.86,63.5,-42.29],[19780,3.36,63.61,-62.47],[19893,4.2,64.01,-51.49],[19921,4.44,64.12,-59.3],[20042,3.56,64.47,-33.8],[20205,3.65,64.95,15.63],[20455,3.76,65.73,17.54],[20535,3.96,66.01,-34.02],[20648,4.3,66.37,17.93],[20885,3.84,67.14,15.96],[20889,3.53,67.15,19.18],[20894,3.41,67.17,15.87],[21060,5.06,67.71,-44.95],[21281,3.28,68.5,-55.04],[21393,3.82,68.89,-30.56],[21421,0.86,68.98,16.51],[21444,3.93,69.08,-3.35],[21594,3.87,69.55,-14.3],[21770,4.45,70.14,-41.86],[21861,5.05,70.51,-37.14],[21881,4.26,70.56,22.96],[21949,5.51,70.77,-70.93],[22109,4,71.38,-3.25],[22449,3.19,72.46,6.96],[22509,4.35,72.65,8.9],[22549,3.68,72.8,5.61],[22701,4.4,73.22,-5.45],[22730,5.32,73.34,2.51],[22783,4.29,73.51,66.34],[22797,3.73,73.56,2.44],[22845,4.65,73.72,10.15],[23015,2.69,74.25,33.17],[23123,4.46,74.64,1.71],[23416,2.99,75.49,43.82],[23453,3.75,75.62,41.08],[23685,3.18,76.37,-22.37],[23767,3.18,76.63,41.23],[23875,2.79,76.96,-5.09],[23972,4.27,77.29,-8.75],[24244,4.45,78.07,-11.87],[24305,3.29,78.23,-16.21],[24327,4.44,78.31,-12.94],[24436,0.13,78.63,-8.2],[24608,0.08,79.17,46],[24674,3.59,79.4,-6.84],[24845,4.29,79.89,-13.18],[24873,5.28,80,-12.32],[25110,5.1,80.64,79.23],[120412,11.2,80.89,-60.92],[25281,3.35,81.12,-2.4],[25336,1.64,81.28,6.35],[25428,1.65,81.57,28.61],[25606,2.84,82.06,-20.76],[25859,3.87,82.8,-35.47],[25918,5.2,82.97,-76.34],[25930,2.41,83,-0.3],[25985,2.57,83.18,-17.82],[26069,3.76,83.41,-62.49],[26207,3.66,83.78,9.93],[26241,2.77,83.86,-5.91],[26311,1.69,84.05,-1.2],[26451,3.03,84.41,21.14],[26549,3.79,84.69,-2.6],[26634,2.65,84.91,-34.07],[26727,1.77,85.19,-1.94],[27072,3.6,86.12,-22.45],[27100,4.36,86.19,-65.74],[27288,3.53,86.74,-14.82],[27321,3.86,86.82,-51.07],[27366,2.06,86.94,-9.67],[27530,4.49,87.46,-56.17],[27628,3.12,87.74,-35.77],[27654,3.85,87.83,-20.88],[27673,3.95,87.87,39.15],[27890,4.66,88.53,-63.09],[27913,4.4,88.6,20.28],[27989,0.42,88.79,7.41],[28103,3.72,89.1,-14.17],[28199,4.36,89.38,-35.28],[28328,3.96,89.79,-42.82],[28358,3.72,89.88,54.28],[28360,1.9,89.88,44.95],[28380,2.62,89.93,37.21],[28614,4.1,90.6,9.65],[28691,5.13,90.86,19.69],[28734,4.15,91.03,23.26],[28910,4.66,91.54,-14.94],[29038,4.4,91.89,14.77],[29151,5.73,92.24,2.5],[29426,4.48,92.98,14.21],[29651,3.96,93.71,-6.27],[29655,3.28,93.72,22.51],[29807,4.37,94.14,-35.14],[30060,4.43,94.91,59.01],[30122,2.99,95.08,-30.06],[30277,3.85,95.53,-33.44],[30324,1.97,95.67,-17.96],[30343,2.87,95.74,22.51],[30419,4.4,95.94,4.59],[30438,-0.74,95.99,-52.7],[30867,3.74,97.2,-7.03],[30883,4.14,97.24,20.21],[31416,4.5,98.76,-22.96],[31592,3.91,99.17,-19.26],[31681,1.92,99.43,16.4],[31685,3.17,99.44,-43.2],[32246,2.98,100.98,25.13],[32349,-1.46,101.29,-16.72],[32362,3.36,101.32,12.9],[32607,3.23,102.05,-61.94],[32759,3.89,102.46,-32.51],[32768,2.93,102.48,-50.61],[33018,3.6,103.2,33.96],[33152,3.87,103.53,-24.18],[33160,4.08,103.55,-12.04],[33165,6.91,103.55,-23.93],[33347,4.39,104.03,-17.05],[33449,4.35,104.32,58.42],[33579,1.5,104.66,-28.97],[33856,3.47,105.43,-27.93],[33977,3.02,105.76,-23.83],[34045,4.12,105.94,-15.63],[34088,3.79,106.03,20.57],[34444,1.84,107.1,-26.39],[34481,3.75,107.19,-70.5],[34693,4.42,107.78,30.25],[34769,4.15,107.97,-0.49],[35037,3.82,108.7,-26.77],[35228,3.99,109.21,-67.96],[35264,2.7,109.29,-37.1],[35350,3.56,109.52,16.54],[35550,3.53,110.03,21.98],[35904,2.45,111.02,-29.3],[36046,3.79,111.43,27.8],[36145,4.61,111.68,49.21],[36188,2.89,111.79,8.29],[36377,3.25,112.31,-43.3],[36850,1.58,113.65,31.89],[36962,4.06,113.98,26.9],[37229,3.8,114.71,-26.8],[37279,0.37,114.83,5.22],[37447,3.93,115.31,-9.55],[37504,3.94,115.46,-72.61],[37677,3.93,115.95,-28.95],[37740,3.57,116.11,24.4],[37819,3.61,116.31,-37.97],[37826,1.14,116.33,28.03],[38146,5.31,117.26,-24.91],[38170,3.3,117.32,-24.86],[38414,3.7,118.05,-40.58],[38827,3.43,119.19,-52.98],[39429,2.25,120.9,-40],[39757,2.81,121.89,-24.3],[39794,4.4,121.98,-68.62],[39863,4.33,122.15,-2.98],[39953,1.83,122.38,-47.34],[40526,3.52,124.13,9.19],[40702,4.05,124.63,-76.92],[40843,5.1,125.02,27.22],[41037,1.86,125.63,-59.51],[41075,4.25,125.71,43.19],[41307,3.9,126.42,-3.91],[41312,3.76,126.43,-66.14],[41704,3.42,127.57,60.72],[42313,4.13,129.41,5.7],[42402,4.43,129.69,3.34],[42515,3.95,130.03,-35.31],[42536,3.63,130.07,-52.92],[42568,4.31,130.15,-59.76],[42570,3.81,130.16,-46.65],[42799,4.3,130.81,3.4],[42806,4.65,130.82,21.47],[42828,3.68,130.9,-33.19],[42911,3.94,131.17,18.15],[42913,1.9,131.18,-54.71],[43023,3.91,131.51,-46.04],[43103,4.02,131.67,28.76],[43109,3.38,131.69,6.42],[43234,4.34,132.11,5.84],[43409,4.01,132.63,-27.71],[43783,3.8,133.76,-60.64],[43813,3.1,133.85,5.95],[44066,4.25,134.62,11.86],[44127,3.14,134.8,48.04],[44248,3.96,135.16,41.78],[44382,3.99,135.61,-66.4],[44471,3.55,135.91,47.16],[44511,3.75,136.04,-47.1],[44700,4.54,136.63,38.45],[44816,2.21,137,-43.43],[45080,3.4,137.74,-58.97],[45101,3.94,137.82,-62.32],[45238,1.69,138.3,-69.72],[45336,3.9,138.59,2.31],[45556,2.26,139.27,-59.28],[45688,3.92,139.71,36.8],[45860,3.14,140.26,34.39],[45941,2.47,140.53,-55.01],[46390,1.97,141.9,-8.66],[46509,4.6,142.29,-2.77],[46651,3.6,142.67,-40.47],[46701,3.14,142.81,-57.03],[46733,3.67,142.88,63.06],[46776,4.55,143,-1.18],[46853,3.18,143.21,51.68],[46952,4.6,143.56,36.4],[47431,3.91,144.96,-1.14],[47508,3.52,145.29,9.89],[47854,3.75,146.31,-62.51],[47908,2.98,146.46,23.77],[48002,2.99,146.78,-65.07],[48319,3.81,147.75,59.04],[48356,4.11,147.87,-14.85],[48402,4.56,148.03,54.06],[48455,3.88,148.19,26.01],[48774,3.45,149.22,-54.57],[48926,5.22,149.72,-35.89],[49583,3.41,151.83,16.76],[49593,4.49,151.86,35.24],[49641,4.49,151.98,-0.37],[49669,1.4,152.09,11.97],[49841,3.61,152.65,-12.35],[50099,3.33,153.43,-70.04],[50191,3.85,153.68,-42.12],[50335,3.41,154.17,23.42],[50371,3.35,154.27,-61.33],[50372,3.45,154.27,42.91],[50583,2.37,154.99,19.84],[50801,3.05,155.58,41.5],[50954,4.01,156.1,-74.03],[51069,3.81,156.52,-16.84],[51172,4.25,156.79,-31.07],[51232,3.81,156.97,-58.74],[51233,4.21,156.97,36.71],[51437,5.1,157.57,-0.64],[51576,3.27,158.01,-61.69],[51624,3.87,158.2,9.31],[51839,4.12,158.87,-78.61],[51986,3.84,159.33,-48.23],[52419,2.76,160.74,-64.39],[52468,4.55,160.88,-60.57],[52727,2.69,161.69,-49.42],[52943,3.11,162.41,-16.19],[53229,3.83,163.33,34.21],[53253,3.79,163.37,-58.85],[53740,4.07,164.94,-18.3],[53910,2.37,165.46,56.38],[54061,1.79,165.93,61.75],[54463,3.83,167.15,-58.98],[54539,3.01,167.42,44.5],[54682,4.45,167.91,-22.83],[54872,2.53,168.53,20.52],[54879,3.35,168.56,15.43],[55203,3.79,169.55,31.53],[55219,3.49,169.62,33.09],[55282,3.56,169.84,-14.78],[55425,3.9,170.25,-54.49],[55687,4.8,171.15,-10.86],[55705,4.06,171.22,-17.68],[56211,3.85,172.85,69.33],[56343,3.54,173.25,-31.86],[56480,4.61,173.69,-54.26],[56561,3.14,173.95,-63.02],[56633,4.67,174.17,-9.8],[57283,4.71,176.19,-18.35],[57363,3.65,176.4,-66.73],[57380,4.04,176.46,6.53],[57399,3.72,176.51,47.78],[57632,2.13,177.26,14.57],[57757,3.6,177.67,1.76],[57936,4.28,178.23,-33.91],[58001,2.44,178.46,53.69],[58188,5.16,179,-17.15],[59196,2.52,182.09,-50.72],[59199,4.01,182.1,-24.73],[59316,2.98,182.53,-22.62],[59449,3.96,182.91,-52.37],[59747,2.75,183.79,-58.75],[59774,3.32,183.86,57.03],[59803,2.58,183.95,-17.54],[60000,4.23,184.59,-79.31],[60030,5.9,184.67,-0.79],[60129,3.9,184.98,-0.67],[60260,3.57,185.34,-60.4],[60718,0.8,186.65,-63.1],[60742,4.34,186.73,28.27],[60823,3.91,187.01,-50.23],[60965,2.94,187.47,-16.52],[61084,1.64,187.79,-57.11],[61174,4.29,188.02,-16.2],[61199,3.88,188.12,-72.13],[61281,3.89,188.37,69.79],[61317,4.25,188.44,41.36],[61359,2.64,188.6,-23.4],[61585,2.65,189.3,-69.14],[61622,3.86,189.43,-48.54],[61932,2.17,190.38,-48.96],[61941,2.74,190.42,-1.45],[62322,3,191.57,-68.11],[62434,1.25,191.93,-59.69],[62956,1.77,193.51,55.96],[63090,3.38,193.9,3.4],[63125,2.88,194.01,38.32],[63608,2.79,195.54,10.96],[63613,3.61,195.57,-71.55],[64166,4.93,197.26,-23.12],[64241,4.32,197.5,17.53],[64394,4.25,197.97,27.88],[64962,3,199.73,-23.17],[65109,2.73,200.15,-36.71],[65378,2.2,200.98,54.93],[65474,0.97,201.3,-11.16],[65477,4.01,201.31,54.99],[65936,3.88,202.76,-39.41],[66249,3.38,203.67,-0.6],[66657,2.3,204.97,-53.47],[67301,1.86,206.89,49.31],[67459,4.07,207.37,15.8],[67464,3.39,207.38,-41.69],[67472,3.43,207.4,-42.47],[67927,2.68,208.67,18.4],[68002,2.55,208.88,-47.29],[68245,3.8,209.57,-42.1],[68282,3.87,209.67,-44.8],[68520,4.24,210.41,1.54],[68702,0.58,210.96,-60.37],[68756,3.68,211.1,64.38],[68895,3.28,211.59,-26.68],[68933,2.05,211.67,-36.37],[69427,4.21,213.22,-10.27],[69673,-0.05,213.92,19.18],[69701,4.08,214,-6],[69996,3.53,214.85,-46.06],[70576,4.35,216.55,-45.38],[70638,4.3,216.73,-83.67],[71053,3.59,217.96,30.37],[71075,3.02,218.02,38.31],[71352,2.31,218.88,-42.16],[71536,4.05,219.47,-49.43],[71681,1.33,219.9,-60.84],[71683,0.01,219.9,-60.83],[71795,3.78,220.29,13.73],[71860,2.29,220.48,-47.39],[71908,3.19,220.63,-64.98],[71957,3.88,220.77,-5.66],[72105,2.45,221.25,27.07],[72220,3.73,221.56,1.89],[72370,3.8,221.97,-79.04],[72607,2.08,222.68,74.16],[72622,2.75,222.72,-16.04],[73273,2.68,224.63,-43.13],[73334,3.11,224.79,-42.1],[73555,3.52,225.49,40.39],[73714,3.21,226.02,-25.28],[73807,3.89,226.28,-47.05],[74376,3.7,227.98,-48.74],[74395,3.41,228.07,-52.1],[74666,3.49,228.88,33.31],[74785,2.62,229.25,-9.38],[74824,4.06,229.38,-58.8],[74946,2.89,229.73,-68.68],[75097,3,230.18,71.83],[75141,3.19,230.34,-40.65],[75177,3.55,230.45,-36.26],[75264,3.37,230.67,-44.69],[75323,4.5,230.84,-59.32],[75458,3.29,231.23,58.97],[75695,3.68,231.96,29.11],[76127,4.13,233.23,31.36],[76267,2.24,233.67,26.71],[76276,3.8,233.7,10.54],[76297,2.77,233.79,-41.17],[76333,3.91,233.88,-14.79],[76470,3.59,234.26,-28.14],[76552,4.33,234.51,-42.57],[76600,3.64,234.66,-29.78],[76952,3.8,235.69,26.3],[77055,4.27,236.01,77.79],[77070,2.63,236.07,6.43],[77233,3.67,236.55,15.42],[77450,4.09,237.18,18.14],[77512,4.63,237.4,26.07],[77516,3.53,237.41,-3.43],[77622,3.69,237.7,4.48],[77634,3.95,237.74,-33.63],[77760,4.62,238.17,42.45],[77853,4.16,238.46,-16.73],[77952,2.85,238.79,-63.43],[78072,3.84,239.11,15.66],[78104,3.86,239.22,-29.21],[78159,4.13,239.4,26.88],[78265,2.91,239.71,-26.11],[78384,3.41,240.03,-38.4],[78401,2.32,240.08,-22.62],[78493,4.97,240.36,29.85],[78527,4,240.47,58.57],[78639,4.64,240.8,-49.23],[78820,2.62,241.36,-19.81],[78933,3.97,241.7,-20.67],[78970,5.7,241.82,-36.76],[79509,4.94,243.37,-54.63],[79593,2.75,243.59,-3.69],[79664,3.84,243.86,-63.69],[79822,5,244.38,75.76],[79882,3.23,244.58,-4.69],[79992,3.87,244.94,46.31],[80000,4.02,244.96,-50.16],[80112,2.89,245.3,-25.59],[80170,3.76,245.48,19.15],[80331,2.74,246,61.51],[80582,4.52,246.8,-47.55],[80763,0.91,247.35,-26.43],[80816,2.77,247.56,21.49],[80883,3.9,247.73,1.98],[81065,3.85,248.36,-78.9],[81126,4.2,248.53,42.44],[81266,2.81,248.97,-28.22],[81377,2.56,249.29,-10.57],[81693,2.8,250.32,31.6],[81833,3.5,250.72,38.92],[81852,4.24,250.77,-77.52],[82080,4.21,251.49,82.04],[82273,1.88,252.17,-69.03],[82363,3.74,252.45,-59.04],[82396,2.29,252.54,-34.29],[82514,2.98,252.97,-38.05],[82545,3.54,253.08,-38.02],[82671,4.79,253.5,-42.36],[82729,3.62,253.65,-42.36],[83000,3.2,254.42,9.38],[83081,3.08,254.66,-55.99],[83207,3.92,255.07,30.93],[83895,3.17,257.2,65.71],[84012,2.42,257.59,-15.72],[84143,3.33,258.04,-43.24],[84345,2.8,258.66,14.39],[84379,3.13,258.76,24.84],[84380,3.18,258.76,36.81],[84606,4.65,259.42,37.29],[84880,4.32,260.21,-12.85],[84970,3.26,260.5,-25],[85112,4.17,260.92,37.15],[85258,2.85,261.32,-55.53],[85267,3.34,261.35,-56.38],[85670,2.81,262.61,52.3],[85693,4.41,262.68,26.11],[85696,2.65,262.69,-37.3],[85727,3.62,262.77,-60.68],[85755,4.81,262.85,-23.96],[85792,2.95,262.96,-49.88],[85822,4.34,263.05,86.59],[85829,4.9,263.07,55.17],[85927,1.63,263.4,-37.1],[86032,2.07,263.73,12.56],[86228,1.85,264.33,-43],[86263,3.52,264.4,-15.4],[86414,3.8,264.87,46.01],[86565,4.23,265.35,-12.88],[86670,2.39,265.62,-39.03],[86742,2.75,265.87,4.57],[86929,3.58,266.43,-64.72],[86974,3.42,266.61,27.72],[87072,4.54,266.89,-27.83],[87073,2.99,266.9,-40.13],[87108,3.75,266.97,2.71],[87261,3.21,267.46,-37.04],[87585,3.75,268.38,56.87],[87808,3.88,269.06,37.25],[87833,2.23,269.15,51.49],[87933,3.7,269.44,29.25],[88048,3.34,269.76,-9.77],[88192,3.93,270.16,2.93],[88635,2.99,271.45,-30.42],[88714,3.66,271.66,-50.09],[88771,3.73,271.84,9.56],[88794,3.83,271.89,28.76],[88866,4.33,272.15,-63.67],[89341,3.85,273.44,-21.06],[89642,3.11,274.41,-36.76],[89931,2.67,275.25,-29.83],[89937,3.58,275.26,72.73],[89962,3.25,275.33,-2.9],[90098,4.37,275.81,-61.49],[90139,3.84,275.92,21.77],[90185,1.81,276.04,-34.38],[90422,3.46,276.74,-45.97],[90496,2.81,276.99,-25.42],[90568,4.11,277.21,-49.07],[90595,4.68,277.3,-14.57],[90887,5.16,278.09,-39.7],[91117,3.83,278.8,-8.24],[91262,0.03,279.23,38.78],[91792,4,280.76,-71.43],[91875,5.11,280.95,-38.32],[91971,4.36,281.19,37.61],[92041,3.14,281.41,-26.99],[92175,4.22,281.79,-4.75],[92202,5.2,281.87,-5.71],[92420,3.42,282.52,33.36],[92609,4.21,283.05,-62.19],[92791,4.3,283.63,36.9],[92814,5.09,283.68,-15.6],[92855,2.07,283.82,-26.3],[92946,4.57,284.05,4.2],[92953,5.35,284.07,-42.71],[92989,5.38,284.17,-37.34],[93015,4.4,284.24,-67.23],[93085,3.51,284.43,-21.11],[93174,4.85,284.68,-37.11],[93194,3.25,284.74,32.69],[93244,4.02,284.91,15.07],[93506,2.59,285.65,-29.88],[93542,4.73,285.78,-42.1],[93683,3.77,286.17,-21.74],[93747,2.99,286.35,13.86],[93805,3.43,286.56,-4.88],[93825,4.21,286.6,-37.06],[93864,3.31,286.74,-27.67],[94005,4.57,287.09,-40.5],[94114,4.09,287.37,-37.9],[94141,2.88,287.44,-21.02],[94160,4.1,287.51,-39.34],[94376,3.07,288.14,67.66],[94779,3.76,289.28,53.37],[94820,4.88,289.41,-18.95],[95168,3.93,290.42,-17.85],[95241,4.01,290.66,-44.46],[95294,4.27,290.8,-44.8],[95347,3.94,290.97,-40.62],[95501,3.36,291.37,3.11],[95771,4.45,292.18,24.66],[95853,3.76,292.43,51.73],[95947,3.08,292.68,27.96],[96406,5.64,294.01,-24.72],[96757,4.38,295.02,18.01],[96837,4.38,295.26,17.48],[97165,2.87,296.24,45.13],[97278,2.72,296.56,10.61],[97365,3.81,296.85,18.53],[97433,3.91,297.04,70.27],[97649,0.76,297.7,8.87],[97804,3.8,298.12,1.01],[98032,4.13,298.82,-41.87],[98036,3.71,298.83,6.41],[98110,3.88,299.08,35.08],[98337,3.47,299.69,19.49],[98412,4.37,299.93,-35.28],[98495,3.94,300.15,-72.91],[98543,4.65,300.28,27.75],[98688,4.58,300.66,-27.71],[98920,5.09,301.29,19.99],[99240,3.56,302.18,-66.18],[99473,3.22,302.83,-0.82],[99675,3.8,303.41,46.74],[99848,3.98,303.87,47.71],[100064,3.58,304.51,-12.54],[100345,3.08,305.25,-14.78],[100453,2.23,305.56,40.26],[100751,1.92,306.41,-56.74],[101421,4.03,308.3,11.3],[101769,3.63,309.39,14.6],[101772,3.11,309.39,-47.29],[101958,3.8,309.91,15.91],[102098,1.25,310.36,45.28],[102281,4.42,310.86,15.07],[102395,3.41,311.24,-66.2],[102422,3.41,311.32,61.84],[102485,4.12,311.52,-25.27],[102488,2.48,311.55,33.97],[102532,4.25,311.66,16.12],[102618,3.77,311.92,-9.5],[102831,4.89,312.49,-33.78],[102978,4.12,312.96,-26.92],[103227,3.65,313.7,-58.45],[103413,3.94,314.29,41.17],[103738,4.65,315.32,-32.26],[104060,3.73,316.23,43.93],[104139,4.07,316.49,-17.23],[104521,4.68,317.59,10.13],[104732,3.21,318.23,30.23],[104858,4.49,318.62,10.01],[104887,3.73,318.7,38.05],[104987,3.93,318.96,5.25],[105140,4.71,319.48,-32.17],[105199,2.46,319.64,62.59],[105319,4.48,319.97,-53.45],[105515,4.27,320.56,-16.83],[105570,5.15,320.72,6.81],[105858,4.22,321.61,-65.37],[105881,3.74,321.67,-22.41],[106032,3.23,322.16,70.56],[106278,2.89,322.89,-5.57],[106481,4.02,323.5,45.59],[106985,3.67,325.02,-16.66],[107089,3.73,325.37,-77.39],[107310,4.5,326.04,28.74],[107315,2.39,326.05,9.88],[107354,4.14,326.16,25.65],[107556,2.83,326.76,-16.13],[107608,5.02,326.93,-30.9],[108085,3.01,328.48,-37.36],[108661,5.4,330.21,-28.45],[109074,2.94,331.45,-0.32],[109111,4.46,331.53,-39.54],[109139,4.27,331.61,-13.87],[109176,3.77,331.75,25.35],[109268,1.71,332.06,-46.96],[109352,5.58,332.31,33.17],[109422,4.92,332.54,-32.55],[109427,3.55,332.55,6.2],[109492,3.35,332.71,58.2],[109937,4.15,333.99,37.75],[110003,4.16,334.21,-7.78],[110130,2.82,334.63,-60.26],[110395,3.83,335.41,-1.39],[110538,4.44,335.89,52.23],[110609,4.58,336.13,49.48],[110960,3.65,337.21,-0.02],[110997,3.97,337.32,-43.5],[111022,4.37,337.38,47.71],[111104,4.51,337.62,43.12],[111123,4.81,337.66,-10.68],[111169,3.77,337.82,50.28],[111188,4.29,337.88,-32.35],[111497,4.03,338.84,-0.12],[111954,4.18,340.16,-27.04],[112029,3.41,340.37,10.83],[112122,2.11,340.67,-46.88],[112158,2.95,340.75,30.22],[112405,4.13,341.51,-81.38],[112440,3.93,341.63,23.57],[112447,4.2,341.67,12.17],[112623,3.47,342.14,-51.32],[112716,3.98,342.4,-13.59],[112724,3.54,342.42,66.2],[112748,3.48,342.5,24.6],[112961,3.79,343.15,-7.58],[113136,3.28,343.66,-15.82],[113246,4.21,343.99,-32.54],[113368,1.16,344.41,-29.62],[113638,4.12,345.22,-52.75],[113726,3.62,345.48,42.33],[113881,2.42,345.94,28.08],[113963,2.48,346.19,15.21],[114131,4.33,346.72,-43.52],[114341,3.64,347.36,-21.17],[114421,3.88,347.59,-45.25],[114855,4.25,348.97,-9.09],[114971,3.7,349.29,3.28],[114996,3.98,349.36,-58.24],[115102,4.41,349.71,-32.53],[115438,3.98,350.74,-20.1],[115738,4.94,351.73,1.26],[115830,4.3,351.99,6.38],[116231,4.37,353.24,-37.82],[116584,3.82,354.39,46.46],[116727,3.2,354.84,77.63],[116771,4.12,354.99,5.63],[116928,4.51,355.51,1.78],[118268,4,359.83,6.86]]"),w1={stars:qu,stars_con:$u};async function Yu(){return[...w1.stars,...w1.stars_con].map(([t,e,n,i])=>({label:t,mag:e,ra:n,dec:i}))}async function ju(){return[...w1.stars_con].map(([t,e,n,i])=>({label:t,mag:e,ra:n,dec:i}))}const lt=Math.PI/180;function Zu(t){return Math.max(-Math.PI/2,Math.min(Math.PI/2,t))}function Ku(t){return{deg:t,rad:Zu(t*lt)}}function e8(t){return t.getTime()/864e5+24405875e-1}function ya(t=new Date,e=0){const n=e8(t),r=(Math.floor(n-.5)+.5-2451545)/36525;let a=(6.697374558+2400.051336*r+25862e-9*r*r)%24;a<0&&(a+=24);const c=(((t.getUTCMilliseconds()/1e3+t.getUTCSeconds())/60+t.getUTCMinutes())/60+t.getUTCHours())*1.002737909;a+=c;let l=a%24;l<0&&(l+=24);let u=(l+e/15)/24;u=u-Math.floor(u),u<0&&(u+=1);const d=24*u;return{GST:l,LST:d,JD:n}}function J1(t,e,n,i){const s=Math.PI*n/12-t,r=Math.sin(e),a=Math.cos(e),o=Math.sin(i),c=Math.cos(i),l=r*o+a*c*Math.cos(s),u=Math.asin(l),d=(r-l*o)/(Math.cos(u)*c);let m=Math.acos(B1.clamp(d,-1,1));return Math.sin(s)>0&&(m=2*Math.PI-m),[u,m]}function Qt(t,e,n,i,s,r){const a=t*lt,o=e*lt,c=Ku(i).rad,{LST:l}=ya(n,s),[u,d]=J1(a,o,l,c);return wi(d,u,r)}function wi(t,e,n){const i=-n*Math.cos(e)*Math.sin(t),s=n*Math.sin(e),r=n*Math.cos(e)*Math.cos(t);return new O(i,s,r)}function cr(t,e){return(t-e+180)*lt}function I3(t,e,n,i,s,r=0){const a=t8(t*lt,e*lt),[o,c]=J1(a.ra,a.dec,n,i),l=(c*180/Math.PI-r+180)*lt;return wi(l,o,s)}function t8(t,e){const n=23.439291*lt,i=Math.sin(n),s=Math.cos(n),r=Math.sin(t),a=Math.cos(t),o=Math.sin(e),c=Math.cos(e),l=Math.atan2(r*s-Math.tan(e)*i,a),u=Math.asin(o*s+c*i*r);return{ra:l<0?l+2*Math.PI:l,dec:u}}const n8="sky_atlas",i8={code:"en",name:"English"},s8={Mercury:"Mercury",Venus:"Venus",Mars:"Mars",Jupiter:"Jupiter",Saturn:"Saturn",Uranus:"Uranus",Neptune:"Neptune"},r8="Sun",a8="Moon",o8="Date &amp; Time",c8="Change the date/time (shown in your local time)",l8="Latitude",u8="Longitude",h8="Change the longitude/latitude",d8="N",f8="E",p8="S",m8="W",g8="cardinal points",_8="stars",M8="atmosphere",v8="ground",x8="Az/Alt gridlines",S8="Ra/Dec gridlines",T8="Galactic gridlines",y8="Ecliptic line",E8="Meridian line",D8="constellation lines",A8="constellation boundaries",b8="constellation names",w8="planets",C8="planet orbits",R8="meteor shower radiants",L8="messier",P8={7588:"Achernar",11767:"Polaris",21421:"Aldebaran",24436:"Rigel",24608:"Capella",27989:"Betelgeuse",30438:"Canopus",32349:"Sirius",33579:"Adara",37279:"Procyon",37826:"Pollux",49669:"Regulus",62434:"Mimosa",65378:"Mizar",65474:"Spica",68702:"Hadar",69673:"Arcturus",71683:"Alpha Centauri A",80763:"Antares",85927:"Shaula",91262:"Vega",97649:"Altair",102098:"Deneb",113368:"Fomalhaut"},U8={And:"Andromeda",Ant:"Antlia",Aps:"Apus",Aqr:"Aquarius",Aql:"Aquila",Ara:"Ara",Ari:"Aries",Aur:"Auriga",Boo:"Bo&ouml;tes",Cae:"Caelum",Cam:"Camelopardalis",Cnc:"Cancer",CVn:"Canes Venatici",CMa:"Canis Major",CMi:"Canis Minor",Cap:"Capricornus",Car:"Carina",Cas:"Cassiopeia",Cen:"Centaurus",Cep:"Cepheus",Cet:"Cetus",Cha:"Chamaeleon",Cir:"Circinus",Col:"Columba",Com:"Coma Berenices",CrA:`Corona
Austrina`,CrB:`Corona
Borealis`,Crv:"Corvus",Crt:"Crater",Cru:"Crux",Cyg:"Cygnus",Del:"Delphinus",Dor:"Dorado",Dra:"Draco",Equ:"Equuleus",Eri:"Eridanus",For:"Fornax",Gem:"Gemini",Gru:"Grus",Her:"Hercules",Hor:"Horologium",Hya:"Hydra",Hyi:"Hydrus",Ind:"Indus",Lac:"Lacerta",Leo:"Leo",LMi:"Leo Minor",Lep:"Lepus",Lib:"Libra",Lup:"Lupus",Lyn:"Lynx",Lyr:"Lyra",Men:"Mensa",Mic:"Microscopium",Mon:"Monoceros",Mus:"Musca",Nor:"Norma",Oct:"Octans",Oph:"Ophiuchus",Ori:"Orion",Pav:"Pavo",Peg:"Pegasus",Per:"Perseus",Phe:"Phoenix",Pic:"Pictor",Psc:"Pisces",PsA:"Piscis Austrinus",Pup:"Puppis",Pyx:"Pyxis",Ret:"Reticulum",Sge:"Sagitta",Sgr:"Sagittarius",Sco:"Scorpius",Scl:"Sculptor",Sct:"Scutum",Ser:"Serpens",Sex:"Sextans",Tau:"Taurus",Tel:"Telescopium",Tri:"Triangulum",TrA:`Triangulum
Australe`,Tuc:"Tucana",UMa:"Ursa Major",UMi:"Ursa Minor",Vel:"Vela",Vir:"Virgo",Vol:"Volans",Vul:"Vulpecula"},Oo={title:n8,language:i8,planets:s8,Sun:r8,Moon:a8,date:o8,datechange:c8,latitude:l8,longitude:u8,positionchange:h8,N:d8,E:f8,S:p8,W:m8,cardinal:g8,stars:_8,atmos:M8,ground:v8,az:x8,eq:S8,gal:T8,ec:y8,meridian:E8,con:D8,conbound:A8,names:b8,planet:w8,orbits:C8,meteorshowers:R8,messier:L8,starnames:P8,constellations:U8},I8="sky_atlas",O8={code:"zh-cn",name:"简体中文"},N8={Mercury:"水星",Venus:"金星",Mars:"火星",Jupiter:"木星",Saturn:"土星",Uranus:"天王星",Neptune:"海王星"},F8="太阳",B8="月亮",z8="日期",G8="Change the date/time (shown in your local time)",H8="纬度",k8="经度",V8="设置位置",J8="北",W8="东",Q8="南",X8="西",q8="cardinal points",$8="stars",Y8="atmosphere",j8="地平面",Z8="地平坐标线",K8="赤道坐标线",eh="银河线",th="黄道线",nh="子午线",ih="星座线",sh="星座边界",rh="constellation names",ah="行星",oh="行星轨道线",ch="流星雨",lh="深空天体",uh={7588:"Achernar",11767:"Polaris",21421:"Aldebaran",24436:"Rigel",24608:"Capella",27989:"Betelgeuse",30438:"Canopus",32349:"Sirius",33579:"Adara",37279:"Procyon",37826:"Pollux",49669:"Regulus",62434:"Mimosa",65378:"Mizar",65474:"Spica",68702:"Hadar",69673:"Arcturus",71683:"Alpha Centauri A",80763:"Antares",85927:"Shaula",91262:"Vega",97649:"Altair",102098:"Deneb",113368:"Fomalhaut"},hh={And:"Andromeda",Ant:"Antlia",Aps:"Apus",Aqr:"Aquarius",Aql:"Aquila",Ara:"Ara",Ari:"Aries",Aur:"Auriga",Boo:"Bo&ouml;tes",Cae:"Caelum",Cam:"Camelopardalis",Cnc:"Cancer",CVn:"Canes Venatici",CMa:"Canis Major",CMi:"Canis Minor",Cap:"Capricornus",Car:"Carina",Cas:"Cassiopeia",Cen:"Centaurus",Cep:"Cepheus",Cet:"Cetus",Cha:"Chamaeleon",Cir:"Circinus",Col:"Columba",Com:"Coma Berenices",CrA:`Corona
Austrina`,CrB:`Corona
Borealis`,Crv:"Corvus",Crt:"Crater",Cru:"Crux",Cyg:"Cygnus",Del:"Delphinus",Dor:"Dorado",Dra:"Draco",Equ:"Equuleus",Eri:"Eridanus",For:"Fornax",Gem:"Gemini",Gru:"Grus",Her:"Hercules",Hor:"Horologium",Hya:"Hydra",Hyi:"Hydrus",Ind:"Indus",Lac:"Lacerta",Leo:"Leo",LMi:"Leo Minor",Lep:"Lepus",Lib:"Libra",Lup:"Lupus",Lyn:"Lynx",Lyr:"Lyra",Men:"Mensa",Mic:"Microscopium",Mon:"Monoceros",Mus:"Musca",Nor:"Norma",Oct:"Octans",Oph:"Ophiuchus",Ori:"Orion",Pav:"Pavo",Peg:"Pegasus",Per:"Perseus",Phe:"Phoenix",Pic:"Pictor",Psc:"Pisces",PsA:"Piscis Austrinus",Pup:"Puppis",Pyx:"Pyxis",Ret:"Reticulum",Sge:"Sagitta",Sgr:"Sagittarius",Sco:"Scorpius",Scl:"Sculptor",Sct:"Scutum",Ser:"Serpens",Sex:"Sextans",Tau:"Taurus",Tel:"Telescopium",Tri:"Triangulum",TrA:`Triangulum
Australe`,Tuc:"Tucana",UMa:"大熊座",UMi:"小熊座",Vel:"Vela",Vir:"Virgo",Vol:"Volans",Vul:"Vulpecula"},O3={title:I8,language:O8,planets:N8,Sun:F8,Moon:B8,date:z8,datechange:G8,latitude:H8,longitude:k8,positionchange:V8,N:J8,E:W8,S:Q8,W:X8,cardinal:q8,stars:$8,atmos:Y8,ground:j8,az:Z8,eq:K8,gal:eh,ec:th,meridian:nh,con:ih,conbound:sh,names:rh,planet:ah,orbits:oh,meteorshowers:ch,messier:lh,starnames:uh,constellations:hh};class dh{constructor(){Le(this,"lookup");Le(this,"lang");Le(this,"i18n");this.lookup={stars:[],planets:[],sun:[],moon:[],messier:[],meteorshower:[]},this.lang=this.detectLanguage(),this.i18n=this.getLanguageData(this.lang)}register(e,n){this.lookup[e].push(n)}clear(){for(const e in this.lookup)this.lookup[e]=[]}detectLanguage(){return"zh-cn"}getLanguageData(e){switch(e){case"zh-cn":return O3;case"en":default:return Oo}}setLanguage(e){switch(this.lang=e,e){case"en":this.i18n=Oo;break;case"zh-cn":this.i18n=O3;break;default:this.i18n=Oo}}t(e){const n=e.split(".");let i=this.i18n;for(const s of n)if(i&&s in i)i=i[s];else return e;return typeof i=="string"?i:e}}const bt=new dh;async function fh(t,e,n,i,s,r){const a=await Yu(),o=new vt,c=[],l=[],u=ya(e,i).LST;for(const h of a){const{ra:f,dec:g,mag:p,label:_}=h;if(p>=t)continue;const D=Qt(f,g,e,n,i,s);if(r&&D.y<=0)continue;c.push(D.x,D.y,D.z);let T=.8*Math.max(3-p/2.1,.5);const S=J1(f,g,u,n)[0],L=Math.exp(-(90-S)*.01);T*=Math.sqrt(L),l.push(T),bt.register("stars",{ra:f*lt,dec:g*lt,label:String(_),xyz:D})}o.setAttribute("position",new Wt(c,3)),o.setAttribute("size",new Wt(l,1));const d=new Gn({uniforms:{color:{value:new $e(16777215)}},vertexShader:`
      attribute float size;
      void main() {
        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);
        gl_PointSize = size * (300.0 / -mvPosition.z); //模拟视距远近调整点大小
        gl_Position = projectionMatrix * mvPosition;
      }
    `,fragmentShader:`
      uniform vec3 color;
      void main() {
        float dist = length(gl_PointCoord - vec2(0.5));
        if (dist > 0.5) discard;
        gl_FragColor = vec4(color, 1.0);
      }
    `,transparent:!0});return new Bc(o,d)}var Ze=(t=>(t.Mean="Mean",t.True="True",t))(Ze||{}),he=(t=>(t.MeanOfTheDate="MeanOfTheDate",t.StandardJ2000="StandardJ2000",t))(he||{});const _i=2440588,ph=2451545,mh=24000005e-1,Mi=1e3*3600*24,Ea=Math.PI,gh=Ea*2,N3=Ea/2,H=Ea/180,De=180/Ea,y5=360/24,E5=24/360,D5=20.49552,W1=23.4392911,_h=6378.14,Mh=1/298.257,vh=149597870691e-3,Fn=-.5667,xh=-.8333,da=29.53058770576;var tr=(t=>(t[t.New=0]="New",t[t.FirstQuarter=1]="FirstQuarter",t[t.Full=2]="Full",t[t.LastQuarter=3]="LastQuarter",t))(tr||{}),Lt=(t=>(t[t.New=0]="New",t[t.WaxingCrescent=1]="WaxingCrescent",t[t.FirstQuarter=2]="FirstQuarter",t[t.WaxingGibbous=3]="WaxingGibbous",t[t.Full=4]="Full",t[t.WaningGibbous=5]="WaningGibbous",t[t.LastQuarter=6]="LastQuarter",t[t.WaningCrescent=7]="WaningCrescent",t))(Lt||{});const $n={0:.033863193308711,1:.216136806691289,2:.283863193308711,3:.466136806691289,4:.533863193308711,5:.716136806691289,6:.783863193308711,7:.966136806691289};var A5=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function b5(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var w5={exports:{}};(function(t,e){(function(n,i){t.exports=i()})(A5,function(){var n=1e3,i=6e4,s=36e5,r="millisecond",a="second",o="minute",c="hour",l="day",u="week",d="month",m="quarter",h="year",f="date",g="Invalid Date",p=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,_=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,D={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(z){var B=["th","st","nd","rd"],P=z%100;return"["+z+(B[(P-20)%10]||B[P]||B[0])+"]"}},T=function(z,B,P){var J=String(z);return!J||J.length>=B?z:""+Array(B+1-J.length).join(P)+z},S={s:T,z:function(z){var B=-z.utcOffset(),P=Math.abs(B),J=Math.floor(P/60),R=P%60;return(B<=0?"+":"-")+T(J,2,"0")+":"+T(R,2,"0")},m:function z(B,P){if(B.date()<P.date())return-z(P,B);var J=12*(P.year()-B.year())+(P.month()-B.month()),R=B.clone().add(J,d),$=P-R<0,Z=B.clone().add(J+($?-1:1),d);return+(-(J+(P-R)/($?R-Z:Z-R))||0)},a:function(z){return z<0?Math.ceil(z)||0:Math.floor(z)},p:function(z){return{M:d,y:h,w:u,d:l,D:f,h:c,m:o,s:a,ms:r,Q:m}[z]||String(z||"").toLowerCase().replace(/s$/,"")},u:function(z){return z===void 0}},L="en",A={};A[L]=D;var w="$isDayjsObject",F=function(z){return z instanceof q||!(!z||!z[w])},y=function z(B,P,J){var R;if(!B)return L;if(typeof B=="string"){var $=B.toLowerCase();A[$]&&(R=$),P&&(A[$]=P,R=$);var Z=B.split("-");if(!R&&Z.length>1)return z(Z[0])}else{var se=B.name;A[se]=B,R=se}return!J&&R&&(L=R),R||!J&&L},v=function(z,B){if(F(z))return z.clone();var P=typeof B=="object"?B:{};return P.date=z,P.args=arguments,new q(P)},b=S;b.l=y,b.i=F,b.w=function(z,B){return v(z,{locale:B.$L,utc:B.$u,x:B.$x,$offset:B.$offset})};var q=function(){function z(P){this.$L=y(P.locale,null,!0),this.parse(P),this.$x=this.$x||P.x||{},this[w]=!0}var B=z.prototype;return B.parse=function(P){this.$d=function(J){var R=J.date,$=J.utc;if(R===null)return new Date(NaN);if(b.u(R))return new Date;if(R instanceof Date)return new Date(R);if(typeof R=="string"&&!/Z$/i.test(R)){var Z=R.match(p);if(Z){var se=Z[2]-1||0,ve=(Z[7]||"0").substring(0,3);return $?new Date(Date.UTC(Z[1],se,Z[3]||1,Z[4]||0,Z[5]||0,Z[6]||0,ve)):new Date(Z[1],se,Z[3]||1,Z[4]||0,Z[5]||0,Z[6]||0,ve)}}return new Date(R)}(P),this.init()},B.init=function(){var P=this.$d;this.$y=P.getFullYear(),this.$M=P.getMonth(),this.$D=P.getDate(),this.$W=P.getDay(),this.$H=P.getHours(),this.$m=P.getMinutes(),this.$s=P.getSeconds(),this.$ms=P.getMilliseconds()},B.$utils=function(){return b},B.isValid=function(){return this.$d.toString()!==g},B.isSame=function(P,J){var R=v(P);return this.startOf(J)<=R&&R<=this.endOf(J)},B.isAfter=function(P,J){return v(P)<this.startOf(J)},B.isBefore=function(P,J){return this.endOf(J)<v(P)},B.$g=function(P,J,R){return b.u(P)?this[J]:this.set(R,P)},B.unix=function(){return Math.floor(this.valueOf()/1e3)},B.valueOf=function(){return this.$d.getTime()},B.startOf=function(P,J){var R=this,$=!!b.u(J)||J,Z=b.p(P),se=function(Je,xe){var tt=b.w(R.$u?Date.UTC(R.$y,xe,Je):new Date(R.$y,xe,Je),R);return $?tt:tt.endOf(l)},ve=function(Je,xe){return b.w(R.toDate()[Je].apply(R.toDate("s"),($?[0,0,0,0]:[23,59,59,999]).slice(xe)),R)},we=this.$W,Q=this.$M,te=this.$D,pe="set"+(this.$u?"UTC":"");switch(Z){case h:return $?se(1,0):se(31,11);case d:return $?se(1,Q):se(0,Q+1);case u:var re=this.$locale().weekStart||0,Te=(we<re?we+7:we)-re;return se($?te-Te:te+(6-Te),Q);case l:case f:return ve(pe+"Hours",0);case c:return ve(pe+"Minutes",1);case o:return ve(pe+"Seconds",2);case a:return ve(pe+"Milliseconds",3);default:return this.clone()}},B.endOf=function(P){return this.startOf(P,!1)},B.$set=function(P,J){var R,$=b.p(P),Z="set"+(this.$u?"UTC":""),se=(R={},R[l]=Z+"Date",R[f]=Z+"Date",R[d]=Z+"Month",R[h]=Z+"FullYear",R[c]=Z+"Hours",R[o]=Z+"Minutes",R[a]=Z+"Seconds",R[r]=Z+"Milliseconds",R)[$],ve=$===l?this.$D+(J-this.$W):J;if($===d||$===h){var we=this.clone().set(f,1);we.$d[se](ve),we.init(),this.$d=we.set(f,Math.min(this.$D,we.daysInMonth())).$d}else se&&this.$d[se](ve);return this.init(),this},B.set=function(P,J){return this.clone().$set(P,J)},B.get=function(P){return this[b.p(P)]()},B.add=function(P,J){var R,$=this;P=Number(P);var Z=b.p(J),se=function(Q){var te=v($);return b.w(te.date(te.date()+Math.round(Q*P)),$)};if(Z===d)return this.set(d,this.$M+P);if(Z===h)return this.set(h,this.$y+P);if(Z===l)return se(1);if(Z===u)return se(7);var ve=(R={},R[o]=i,R[c]=s,R[a]=n,R)[Z]||1,we=this.$d.getTime()+P*ve;return b.w(we,this)},B.subtract=function(P,J){return this.add(-1*P,J)},B.format=function(P){var J=this,R=this.$locale();if(!this.isValid())return R.invalidDate||g;var $=P||"YYYY-MM-DDTHH:mm:ssZ",Z=b.z(this),se=this.$H,ve=this.$m,we=this.$M,Q=R.weekdays,te=R.months,pe=R.meridiem,re=function(xe,tt,st,We){return xe&&(xe[tt]||xe(J,$))||st[tt].slice(0,We)},Te=function(xe){return b.s(se%12||12,xe,"0")},Je=pe||function(xe,tt,st){var We=xe<12?"AM":"PM";return st?We.toLowerCase():We};return $.replace(_,function(xe,tt){return tt||function(st){switch(st){case"YY":return String(J.$y).slice(-2);case"YYYY":return b.s(J.$y,4,"0");case"M":return we+1;case"MM":return b.s(we+1,2,"0");case"MMM":return re(R.monthsShort,we,te,3);case"MMMM":return re(te,we);case"D":return J.$D;case"DD":return b.s(J.$D,2,"0");case"d":return String(J.$W);case"dd":return re(R.weekdaysMin,J.$W,Q,2);case"ddd":return re(R.weekdaysShort,J.$W,Q,3);case"dddd":return Q[J.$W];case"H":return String(se);case"HH":return b.s(se,2,"0");case"h":return Te(1);case"hh":return Te(2);case"a":return Je(se,ve,!0);case"A":return Je(se,ve,!1);case"m":return String(ve);case"mm":return b.s(ve,2,"0");case"s":return String(J.$s);case"ss":return b.s(J.$s,2,"0");case"SSS":return b.s(J.$ms,3,"0");case"Z":return Z}return null}(xe)||Z.replace(":","")})},B.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},B.diff=function(P,J,R){var $,Z=this,se=b.p(J),ve=v(P),we=(ve.utcOffset()-this.utcOffset())*i,Q=this-ve,te=function(){return b.m(Z,ve)};switch(se){case h:$=te()/12;break;case d:$=te();break;case m:$=te()/3;break;case u:$=(Q-we)/6048e5;break;case l:$=(Q-we)/864e5;break;case c:$=Q/s;break;case o:$=Q/i;break;case a:$=Q/n;break;default:$=Q}return R?$:b.a($)},B.daysInMonth=function(){return this.endOf(d).$D},B.$locale=function(){return A[this.$L]},B.locale=function(P,J){if(!P)return this.$L;var R=this.clone(),$=y(P,J,!0);return $&&(R.$L=$),R},B.clone=function(){return b.w(this.$d,this)},B.toDate=function(){return new Date(this.valueOf())},B.toJSON=function(){return this.isValid()?this.toISOString():null},B.toISOString=function(){return this.$d.toISOString()},B.toString=function(){return this.$d.toUTCString()},z}(),W=q.prototype;return v.prototype=W,[["$ms",r],["$s",a],["$m",o],["$H",c],["$W",l],["$M",d],["$y",h],["$D",f]].forEach(function(z){W[z[1]]=function(B){return this.$g(B,z[0],z[1])}}),v.extend=function(z,B){return z.$i||(z(B,q,v),z.$i=!0),v},v.locale=y,v.isDayjs=F,v.unix=function(z){return v(1e3*z)},v.en=A[L],v.Ls=A,v.p={},v})})(w5);var Sh=w5.exports;const Q1=b5(Sh),Mn=[{JD:24417145e-1,DeltaT:43.4724},{JD:24417425e-1,DeltaT:43.5648},{JD:24417735e-1,DeltaT:43.6737},{JD:24418035e-1,DeltaT:43.7782},{JD:24418345e-1,DeltaT:43.8763},{JD:24418645e-1,DeltaT:43.9562},{JD:24418955e-1,DeltaT:44.0315},{JD:24419265e-1,DeltaT:44.1132},{JD:24419565e-1,DeltaT:44.1982},{JD:24419875e-1,DeltaT:44.2952},{JD:24420175e-1,DeltaT:44.3936},{JD:24420485e-1,DeltaT:44.4841},{JD:24420795e-1,DeltaT:44.5646},{JD:24421075e-1,DeltaT:44.6425},{JD:24421385e-1,DeltaT:44.7386},{JD:24421685e-1,DeltaT:44.837},{JD:24421995e-1,DeltaT:44.9302},{JD:24422295e-1,DeltaT:44.9986},{JD:24422605e-1,DeltaT:45.0584},{JD:24422915e-1,DeltaT:45.1284},{JD:24423215e-1,DeltaT:45.2064},{JD:24423525e-1,DeltaT:45.298},{JD:24423825e-1,DeltaT:45.3897},{JD:24424135e-1,DeltaT:45.4761},{JD:24424445e-1,DeltaT:45.5633},{JD:24424725e-1,DeltaT:45.645},{JD:24425035e-1,DeltaT:45.7375},{JD:24425335e-1,DeltaT:45.8284},{JD:24425645e-1,DeltaT:45.9133},{JD:24425945e-1,DeltaT:45.982},{JD:24426255e-1,DeltaT:46.0408},{JD:24426565e-1,DeltaT:46.1067},{JD:24426865e-1,DeltaT:46.1825},{JD:24427175e-1,DeltaT:46.2789},{JD:24427475e-1,DeltaT:46.3713},{JD:24427785e-1,DeltaT:46.4567},{JD:24428095e-1,DeltaT:46.5445},{JD:24428385e-1,DeltaT:46.6311},{JD:24428695e-1,DeltaT:46.7302},{JD:24428995e-1,DeltaT:46.8284},{JD:24429305e-1,DeltaT:46.9247},{JD:24429605e-1,DeltaT:46.997},{JD:24429915e-1,DeltaT:47.0709},{JD:24430225e-1,DeltaT:47.1451},{JD:24430525e-1,DeltaT:47.2362},{JD:24430835e-1,DeltaT:47.3413},{JD:24431135e-1,DeltaT:47.4319},{JD:24431445e-1,DeltaT:47.5214},{JD:24431755e-1,DeltaT:47.6049},{JD:24432035e-1,DeltaT:47.6837},{JD:24432345e-1,DeltaT:47.7781},{JD:24432645e-1,DeltaT:47.8771},{JD:24432955e-1,DeltaT:47.9687},{JD:24433255e-1,DeltaT:48.0348},{JD:24433565e-1,DeltaT:48.0942},{JD:24433875e-1,DeltaT:48.1608},{JD:24434175e-1,DeltaT:48.246},{JD:24434485e-1,DeltaT:48.3439},{JD:24434785e-1,DeltaT:48.4355},{JD:24435095e-1,DeltaT:48.5344},{JD:24435405e-1,DeltaT:48.6325},{JD:24435685e-1,DeltaT:48.7294},{JD:24435995e-1,DeltaT:48.8365},{JD:24436295e-1,DeltaT:48.9353},{JD:24436605e-1,DeltaT:49.0319},{JD:24436905e-1,DeltaT:49.1013},{JD:24437215e-1,DeltaT:49.1591},{JD:24437525e-1,DeltaT:49.2286},{JD:24437825e-1,DeltaT:49.307},{JD:24438135e-1,DeltaT:49.4018},{JD:24438435e-1,DeltaT:49.4945},{JD:24438745e-1,DeltaT:49.5862},{JD:24439055e-1,DeltaT:49.6805},{JD:24439335e-1,DeltaT:49.7602},{JD:24439645e-1,DeltaT:49.8556},{JD:24439945e-1,DeltaT:49.9489},{JD:24440255e-1,DeltaT:50.0347},{JD:24440555e-1,DeltaT:50.1019},{JD:24440865e-1,DeltaT:50.1622},{JD:24441175e-1,DeltaT:50.226},{JD:24441475e-1,DeltaT:50.2968},{JD:24441785e-1,DeltaT:50.3831},{JD:24442085e-1,DeltaT:50.4599},{JD:24442395e-1,DeltaT:50.5387},{JD:24442705e-1,DeltaT:50.6161},{JD:24442995e-1,DeltaT:50.6866},{JD:24443305e-1,DeltaT:50.7658},{JD:24443605e-1,DeltaT:50.8454},{JD:24443915e-1,DeltaT:50.9187},{JD:24444215e-1,DeltaT:50.9761},{JD:24444525e-1,DeltaT:51.0278},{JD:24444835e-1,DeltaT:51.0843},{JD:24445135e-1,DeltaT:51.1538},{JD:24445445e-1,DeltaT:51.2319},{JD:24445745e-1,DeltaT:51.3063},{JD:24446055e-1,DeltaT:51.3808},{JD:24446365e-1,DeltaT:51.4526},{JD:24446645e-1,DeltaT:51.516},{JD:24446955e-1,DeltaT:51.5985},{JD:24447255e-1,DeltaT:51.6809},{JD:24447565e-1,DeltaT:51.7573},{JD:24447865e-1,DeltaT:51.8133},{JD:24448175e-1,DeltaT:51.8532},{JD:24448485e-1,DeltaT:51.9014},{JD:24448785e-1,DeltaT:51.9603},{JD:24449095e-1,DeltaT:52.0328},{JD:24449395e-1,DeltaT:52.0985},{JD:24449705e-1,DeltaT:52.1668},{JD:24450015e-1,DeltaT:52.2316},{JD:24450295e-1,DeltaT:52.2938},{JD:24450605e-1,DeltaT:52.368},{JD:24450905e-1,DeltaT:52.4465},{JD:24451215e-1,DeltaT:52.518},{JD:24451515e-1,DeltaT:52.5752},{JD:24451825e-1,DeltaT:52.6178},{JD:24452135e-1,DeltaT:52.6668},{JD:24452435e-1,DeltaT:52.734},{JD:24452745e-1,DeltaT:52.8056},{JD:24453045e-1,DeltaT:52.8792},{JD:24453355e-1,DeltaT:52.9565},{JD:24453665e-1,DeltaT:53.0445},{JD:24453945e-1,DeltaT:53.1268},{JD:24454255e-1,DeltaT:53.2197},{JD:24454555e-1,DeltaT:53.3024},{JD:24454865e-1,DeltaT:53.3747},{JD:24455165e-1,DeltaT:53.4335},{JD:24455475e-1,DeltaT:53.4778},{JD:24455785e-1,DeltaT:53.53},{JD:24456085e-1,DeltaT:53.5845},{JD:24456395e-1,DeltaT:53.6523},{JD:24456695e-1,DeltaT:53.7256},{JD:24457005e-1,DeltaT:53.7882},{JD:24457315e-1,DeltaT:53.8367},{JD:24457605e-1,DeltaT:53.883},{JD:24457915e-1,DeltaT:53.9443},{JD:24458215e-1,DeltaT:54.0042},{JD:24458525e-1,DeltaT:54.0536},{JD:24458825e-1,DeltaT:54.0856},{JD:24459135e-1,DeltaT:54.1084},{JD:24459445e-1,DeltaT:54.1463},{JD:24459745e-1,DeltaT:54.1914},{JD:24460055e-1,DeltaT:54.2452},{JD:24460355e-1,DeltaT:54.2958},{JD:24460665e-1,DeltaT:54.3427},{JD:24460975e-1,DeltaT:54.3911},{JD:24461255e-1,DeltaT:54.432},{JD:24461565e-1,DeltaT:54.4898},{JD:24461865e-1,DeltaT:54.5456},{JD:24462175e-1,DeltaT:54.5977},{JD:24462475e-1,DeltaT:54.6355},{JD:24462785e-1,DeltaT:54.6532},{JD:24463095e-1,DeltaT:54.6776},{JD:24463395e-1,DeltaT:54.7174},{JD:24463705e-1,DeltaT:54.7741},{JD:24464005e-1,DeltaT:54.8253},{JD:24464315e-1,DeltaT:54.8713},{JD:24464625e-1,DeltaT:54.9161},{JD:24464905e-1,DeltaT:54.9581},{JD:24465215e-1,DeltaT:54.9997},{JD:24465515e-1,DeltaT:55.0476},{JD:24465825e-1,DeltaT:55.0912},{JD:24466125e-1,DeltaT:55.1132},{JD:24466435e-1,DeltaT:55.1328},{JD:24466745e-1,DeltaT:55.1532},{JD:24467045e-1,DeltaT:55.1898},{JD:24467355e-1,DeltaT:55.2416},{JD:24467655e-1,DeltaT:55.2838},{JD:24467965e-1,DeltaT:55.3222},{JD:24468275e-1,DeltaT:55.3613},{JD:24468555e-1,DeltaT:55.4063},{JD:24468865e-1,DeltaT:55.4629},{JD:24469165e-1,DeltaT:55.5111},{JD:24469475e-1,DeltaT:55.5524},{JD:24469775e-1,DeltaT:55.5812},{JD:24470085e-1,DeltaT:55.6004},{JD:24470395e-1,DeltaT:55.6262},{JD:24470695e-1,DeltaT:55.6656},{JD:24471005e-1,DeltaT:55.7168},{JD:24471305e-1,DeltaT:55.7698},{JD:24471615e-1,DeltaT:55.8197},{JD:24471925e-1,DeltaT:55.8615},{JD:24472215e-1,DeltaT:55.913},{JD:24472525e-1,DeltaT:55.9663},{JD:24472825e-1,DeltaT:56.022},{JD:24473135e-1,DeltaT:56.07},{JD:24473435e-1,DeltaT:56.0939},{JD:24473745e-1,DeltaT:56.1105},{JD:24474055e-1,DeltaT:56.1314},{JD:24474355e-1,DeltaT:56.1611},{JD:24474665e-1,DeltaT:56.2068},{JD:24474965e-1,DeltaT:56.2583},{JD:24475275e-1,DeltaT:56.3},{JD:24475585e-1,DeltaT:56.3399},{JD:24475865e-1,DeltaT:56.379},{JD:24476175e-1,DeltaT:56.4283},{JD:24476475e-1,DeltaT:56.4804},{JD:24476785e-1,DeltaT:56.5352},{JD:24477085e-1,DeltaT:56.5697},{JD:24477395e-1,DeltaT:56.5983},{JD:24477705e-1,DeltaT:56.6328},{JD:24478005e-1,DeltaT:56.6739},{JD:24478315e-1,DeltaT:56.7332},{JD:24478615e-1,DeltaT:56.7972},{JD:24478925e-1,DeltaT:56.8553},{JD:24479235e-1,DeltaT:56.9111},{JD:24479515e-1,DeltaT:56.9755},{JD:24479825e-1,DeltaT:57.0471},{JD:24480125e-1,DeltaT:57.1136},{JD:24480435e-1,DeltaT:57.1738},{JD:24480735e-1,DeltaT:57.2226},{JD:24481045e-1,DeltaT:57.2597},{JD:24481355e-1,DeltaT:57.3073},{JD:24481655e-1,DeltaT:57.3643},{JD:24481965e-1,DeltaT:57.4334},{JD:24482265e-1,DeltaT:57.5016},{JD:24482575e-1,DeltaT:57.5653},{JD:24482885e-1,DeltaT:57.6333},{JD:24483165e-1,DeltaT:57.6973},{JD:24483475e-1,DeltaT:57.7711},{JD:24483775e-1,DeltaT:57.8407},{JD:24484085e-1,DeltaT:57.9058},{JD:24484385e-1,DeltaT:57.9576},{JD:24484695e-1,DeltaT:57.9975},{JD:24485005e-1,DeltaT:58.0426},{JD:24485305e-1,DeltaT:58.1043},{JD:24485615e-1,DeltaT:58.1679},{JD:24485915e-1,DeltaT:58.2389},{JD:24486225e-1,DeltaT:58.3092},{JD:24486535e-1,DeltaT:58.3833},{JD:24486825e-1,DeltaT:58.4537},{JD:24487135e-1,DeltaT:58.5401},{JD:24487435e-1,DeltaT:58.6228},{JD:24487745e-1,DeltaT:58.6917},{JD:24488045e-1,DeltaT:58.741},{JD:24488355e-1,DeltaT:58.7836},{JD:24488665e-1,DeltaT:58.8406},{JD:24488965e-1,DeltaT:58.8986},{JD:24489275e-1,DeltaT:58.9714},{JD:24489575e-1,DeltaT:59.0438},{JD:24489885e-1,DeltaT:59.1218},{JD:24490195e-1,DeltaT:59.2003},{JD:24490475e-1,DeltaT:59.2747},{JD:24490785e-1,DeltaT:59.3574},{JD:24491085e-1,DeltaT:59.4434},{JD:24491395e-1,DeltaT:59.5242},{JD:24491695e-1,DeltaT:59.585},{JD:24492005e-1,DeltaT:59.6344},{JD:24492315e-1,DeltaT:59.6928},{JD:24492615e-1,DeltaT:59.7588},{JD:24492925e-1,DeltaT:59.8386},{JD:24493225e-1,DeltaT:59.9111},{JD:24493535e-1,DeltaT:59.9845},{JD:24493845e-1,DeltaT:60.0564},{JD:24494125e-1,DeltaT:60.1231},{JD:24494435e-1,DeltaT:60.2042},{JD:24494735e-1,DeltaT:60.2804},{JD:24495045e-1,DeltaT:60.353},{JD:24495345e-1,DeltaT:60.4012},{JD:24495655e-1,DeltaT:60.444},{JD:24495965e-1,DeltaT:60.49},{JD:24496265e-1,DeltaT:60.5578},{JD:24496575e-1,DeltaT:60.6324},{JD:24496875e-1,DeltaT:60.7059},{JD:24497185e-1,DeltaT:60.7853},{JD:24497495e-1,DeltaT:60.8664},{JD:24497775e-1,DeltaT:60.9387},{JD:24498085e-1,DeltaT:61.0277},{JD:24498385e-1,DeltaT:61.1103},{JD:24498695e-1,DeltaT:61.187},{JD:24498995e-1,DeltaT:61.2454},{JD:24499305e-1,DeltaT:61.2881},{JD:24499615e-1,DeltaT:61.3378},{JD:24499915e-1,DeltaT:61.4036},{JD:24500225e-1,DeltaT:61.476},{JD:24500525e-1,DeltaT:61.5525},{JD:24500835e-1,DeltaT:61.6287},{JD:24501145e-1,DeltaT:61.6846},{JD:24501435e-1,DeltaT:61.7433},{JD:24501745e-1,DeltaT:61.8132},{JD:24502045e-1,DeltaT:61.8823},{JD:24502355e-1,DeltaT:61.9497},{JD:24502655e-1,DeltaT:61.9969},{JD:24502965e-1,DeltaT:62.0343},{JD:24503275e-1,DeltaT:62.0714},{JD:24503575e-1,DeltaT:62.1202},{JD:24503885e-1,DeltaT:62.181},{JD:24504185e-1,DeltaT:62.2382},{JD:24504495e-1,DeltaT:62.295},{JD:24504805e-1,DeltaT:62.3506},{JD:24505085e-1,DeltaT:62.3995},{JD:24505395e-1,DeltaT:62.4754},{JD:24505695e-1,DeltaT:62.5463},{JD:24506005e-1,DeltaT:62.6136},{JD:24506305e-1,DeltaT:62.6571},{JD:24506615e-1,DeltaT:62.6942},{JD:24506925e-1,DeltaT:62.7383},{JD:24507225e-1,DeltaT:62.7926},{JD:24507535e-1,DeltaT:62.8567},{JD:24507835e-1,DeltaT:62.9146},{JD:24508145e-1,DeltaT:62.9659},{JD:24508455e-1,DeltaT:63.0217},{JD:24508735e-1,DeltaT:63.0807},{JD:24509045e-1,DeltaT:63.1462},{JD:24509345e-1,DeltaT:63.2053},{JD:24509655e-1,DeltaT:63.2599},{JD:24509955e-1,DeltaT:63.2844},{JD:24510265e-1,DeltaT:63.2961},{JD:24510575e-1,DeltaT:63.3126},{JD:24510875e-1,DeltaT:63.3422},{JD:24511185e-1,DeltaT:63.3871},{JD:24511485e-1,DeltaT:63.4339},{JD:24511795e-1,DeltaT:63.4673},{JD:24512105e-1,DeltaT:63.4979},{JD:24512385e-1,DeltaT:63.5319},{JD:24512695e-1,DeltaT:63.5679},{JD:24512995e-1,DeltaT:63.6104},{JD:24513305e-1,DeltaT:63.6444},{JD:24513605e-1,DeltaT:63.6642},{JD:24513915e-1,DeltaT:63.6739},{JD:24514225e-1,DeltaT:63.6926},{JD:24514525e-1,DeltaT:63.7147},{JD:24514835e-1,DeltaT:63.7518},{JD:24515135e-1,DeltaT:63.7927},{JD:24515445e-1,DeltaT:63.8285},{JD:24515755e-1,DeltaT:63.8557},{JD:24516045e-1,DeltaT:63.8804},{JD:24516355e-1,DeltaT:63.9075},{JD:24516655e-1,DeltaT:63.9393},{JD:24516965e-1,DeltaT:63.9691},{JD:24517265e-1,DeltaT:63.9799},{JD:24517575e-1,DeltaT:63.9833},{JD:24517885e-1,DeltaT:63.9938},{JD:24518185e-1,DeltaT:64.0093},{JD:24518495e-1,DeltaT:64.04},{JD:24518795e-1,DeltaT:64.067},{JD:24519105e-1,DeltaT:64.0908},{JD:24519415e-1,DeltaT:64.1068},{JD:24519695e-1,DeltaT:64.1282},{JD:24520005e-1,DeltaT:64.1584},{JD:24520305e-1,DeltaT:64.1833},{JD:24520615e-1,DeltaT:64.2094},{JD:24520915e-1,DeltaT:64.2117},{JD:24521225e-1,DeltaT:64.2073},{JD:24521535e-1,DeltaT:64.2116},{JD:24521835e-1,DeltaT:64.2223},{JD:24522145e-1,DeltaT:64.25},{JD:24522445e-1,DeltaT:64.2761},{JD:24522755e-1,DeltaT:64.2998},{JD:24523065e-1,DeltaT:64.3192},{JD:24523345e-1,DeltaT:64.345},{JD:24523655e-1,DeltaT:64.3735},{JD:24523955e-1,DeltaT:64.3943},{JD:24524265e-1,DeltaT:64.4151},{JD:24524565e-1,DeltaT:64.4132},{JD:24524875e-1,DeltaT:64.4118},{JD:24525185e-1,DeltaT:64.4097},{JD:24525485e-1,DeltaT:64.4168},{JD:24525795e-1,DeltaT:64.4329},{JD:24526095e-1,DeltaT:64.4511},{JD:24526405e-1,DeltaT:64.4734},{JD:24526715e-1,DeltaT:64.4893},{JD:24526995e-1,DeltaT:64.5053},{JD:24527305e-1,DeltaT:64.5269},{JD:24527605e-1,DeltaT:64.5471},{JD:24527915e-1,DeltaT:64.5597},{JD:24528215e-1,DeltaT:64.5512},{JD:24528525e-1,DeltaT:64.5371},{JD:24528835e-1,DeltaT:64.5359},{JD:24529135e-1,DeltaT:64.5415},{JD:24529445e-1,DeltaT:64.5544},{JD:24529745e-1,DeltaT:64.5654},{JD:24530055e-1,DeltaT:64.5736},{JD:24530365e-1,DeltaT:64.5891},{JD:24530655e-1,DeltaT:64.6015},{JD:24530965e-1,DeltaT:64.6176},{JD:24531265e-1,DeltaT:64.6374},{JD:24531575e-1,DeltaT:64.6549},{JD:24531875e-1,DeltaT:64.653},{JD:24532185e-1,DeltaT:64.6379},{JD:24532495e-1,DeltaT:64.6372},{JD:24532795e-1,DeltaT:64.64},{JD:24533105e-1,DeltaT:64.6543},{JD:24533405e-1,DeltaT:64.6723},{JD:24533715e-1,DeltaT:64.6876},{JD:24534025e-1,DeltaT:64.7052},{JD:24534305e-1,DeltaT:64.7313},{JD:24534615e-1,DeltaT:64.7575},{JD:24534915e-1,DeltaT:64.7811},{JD:24535225e-1,DeltaT:64.8001},{JD:24535525e-1,DeltaT:64.7995},{JD:24535835e-1,DeltaT:64.7876},{JD:24536145e-1,DeltaT:64.7831},{JD:24536445e-1,DeltaT:64.7921},{JD:24536755e-1,DeltaT:64.8096},{JD:24537055e-1,DeltaT:64.8311},{JD:24537365e-1,DeltaT:64.8452},{JD:24537675e-1,DeltaT:64.8597},{JD:24537955e-1,DeltaT:64.885},{JD:24538265e-1,DeltaT:64.9175},{JD:24538565e-1,DeltaT:64.948},{JD:24538875e-1,DeltaT:64.9794},{JD:24539175e-1,DeltaT:64.9895},{JD:24539485e-1,DeltaT:65.0028},{JD:24539795e-1,DeltaT:65.0138},{JD:24540095e-1,DeltaT:65.0371},{JD:24540405e-1,DeltaT:65.0773},{JD:24540705e-1,DeltaT:65.1122},{JD:24541015e-1,DeltaT:65.1464},{JD:24541325e-1,DeltaT:65.1833},{JD:24541605e-1,DeltaT:65.2145},{JD:24541915e-1,DeltaT:65.2494},{JD:24542215e-1,DeltaT:65.2921},{JD:24542525e-1,DeltaT:65.3279},{JD:24542825e-1,DeltaT:65.3413},{JD:24543135e-1,DeltaT:65.3452},{JD:24543445e-1,DeltaT:65.3496},{JD:24543745e-1,DeltaT:65.3711},{JD:24544055e-1,DeltaT:65.3972},{JD:24544355e-1,DeltaT:65.4296},{JD:24544665e-1,DeltaT:65.4573},{JD:24544975e-1,DeltaT:65.4868},{JD:24545265e-1,DeltaT:65.5152},{JD:24545575e-1,DeltaT:65.545},{JD:24545875e-1,DeltaT:65.5781},{JD:24546185e-1,DeltaT:65.6127},{JD:24546485e-1,DeltaT:65.6288},{JD:24546795e-1,DeltaT:65.637},{JD:24547105e-1,DeltaT:65.6493},{JD:24547405e-1,DeltaT:65.676},{JD:24547715e-1,DeltaT:65.7097},{JD:24548015e-1,DeltaT:65.7461},{JD:24548325e-1,DeltaT:65.7768},{JD:24548635e-1,DeltaT:65.8025},{JD:24548915e-1,DeltaT:65.8237},{JD:24549225e-1,DeltaT:65.8595},{JD:24549525e-1,DeltaT:65.8973},{JD:24549835e-1,DeltaT:65.9323},{JD:24550135e-1,DeltaT:65.9509},{JD:24550445e-1,DeltaT:65.9534},{JD:24550755e-1,DeltaT:65.9628},{JD:24551055e-1,DeltaT:65.9839},{JD:24551365e-1,DeltaT:66.0147},{JD:24551665e-1,DeltaT:66.042},{JD:24551975e-1,DeltaT:66.0699},{JD:24552285e-1,DeltaT:66.0961},{JD:24552565e-1,DeltaT:66.131},{JD:24552875e-1,DeltaT:66.1683},{JD:24553175e-1,DeltaT:66.2072},{JD:24553485e-1,DeltaT:66.2356},{JD:24553785e-1,DeltaT:66.2409},{JD:24554095e-1,DeltaT:66.2335},{JD:24554405e-1,DeltaT:66.2349},{JD:24554705e-1,DeltaT:66.2441},{JD:24555015e-1,DeltaT:66.2751},{JD:24555315e-1,DeltaT:66.3054},{JD:24555625e-1,DeltaT:66.3246},{JD:24555935e-1,DeltaT:66.3406},{JD:24556215e-1,DeltaT:66.3624},{JD:24556525e-1,DeltaT:66.3957},{JD:24556825e-1,DeltaT:66.4289},{JD:24557135e-1,DeltaT:66.4619},{JD:24557435e-1,DeltaT:66.4749},{JD:24557745e-1,DeltaT:66.4751},{JD:24558055e-1,DeltaT:66.4829},{JD:24558355e-1,DeltaT:66.5056},{JD:24558665e-1,DeltaT:66.5383},{JD:24558965e-1,DeltaT:66.5706},{JD:24559275e-1,DeltaT:66.603},{JD:24559585e-1,DeltaT:66.634},{JD:24559875e-1,DeltaT:66.6569},{JD:24560185e-1,DeltaT:66.6925},{JD:24560485e-1,DeltaT:66.7289},{JD:24560795e-1,DeltaT:66.7579},{JD:24561095e-1,DeltaT:66.7708},{JD:24561405e-1,DeltaT:66.774},{JD:24561715e-1,DeltaT:66.7846},{JD:24562015e-1,DeltaT:66.8103},{JD:24562325e-1,DeltaT:66.84},{JD:24562625e-1,DeltaT:66.8779},{JD:24562935e-1,DeltaT:66.9069},{JD:24563245e-1,DeltaT:66.9443},{JD:24563525e-1,DeltaT:66.9763},{JD:24563835e-1,DeltaT:67.0258},{JD:24564135e-1,DeltaT:67.0716},{JD:24564445e-1,DeltaT:67.11},{JD:24564745e-1,DeltaT:67.1266},{JD:24565055e-1,DeltaT:67.1331},{JD:24565365e-1,DeltaT:67.1458},{JD:24565665e-1,DeltaT:67.1717},{JD:24565975e-1,DeltaT:67.2091},{JD:24566275e-1,DeltaT:67.246},{JD:24566585e-1,DeltaT:67.281},{JD:24566895e-1,DeltaT:67.3136},{JD:24567175e-1,DeltaT:67.3457},{JD:24567485e-1,DeltaT:67.389},{JD:24567785e-1,DeltaT:67.4318},{JD:24568095e-1,DeltaT:67.4666},{JD:24568395e-1,DeltaT:67.4858},{JD:24568705e-1,DeltaT:67.4989},{JD:24569015e-1,DeltaT:67.5111},{JD:24569315e-1,DeltaT:67.5353},{JD:24569625e-1,DeltaT:67.5711},{JD:24569925e-1,DeltaT:67.607},{JD:24570235e-1,DeltaT:67.6439},{JD:24570545e-1,DeltaT:67.6765},{JD:24570825e-1,DeltaT:67.7117},{JD:24571135e-1,DeltaT:67.7591},{JD:24571435e-1,DeltaT:67.8012},{JD:24571745e-1,DeltaT:67.8402},{JD:24572045e-1,DeltaT:67.8606},{JD:24572355e-1,DeltaT:67.8822},{JD:24572665e-1,DeltaT:67.912},{JD:24572965e-1,DeltaT:67.9546},{JD:24573275e-1,DeltaT:68.0055},{JD:24573575e-1,DeltaT:68.0514},{JD:24573885e-1,DeltaT:68.1024},{JD:24574195e-1,DeltaT:68.1577},{JD:24574485e-1,DeltaT:68.2044},{JD:24574795e-1,DeltaT:68.2665},{JD:24575095e-1,DeltaT:68.3188},{JD:24575405e-1,DeltaT:68.3703},{JD:24575705e-1,DeltaT:68.3964},{JD:24576015e-1,DeltaT:68.4094},{JD:24576325e-1,DeltaT:68.4305},{JD:24576625e-1,DeltaT:68.463},{JD:24576935e-1,DeltaT:68.5078},{JD:24577235e-1,DeltaT:68.5537},{JD:24577545e-1,DeltaT:68.5928},{JD:24577855e-1,DeltaT:68.6298},{JD:24578135e-1,DeltaT:68.6671},{JD:24578445e-1,DeltaT:68.7135},{JD:24578745e-1,DeltaT:68.7623},{JD:24579055e-1,DeltaT:68.8033},{JD:2457937,DeltaT:68.81},{JD:245802825e-2,DeltaT:68.86},{JD:24581195e-1,DeltaT:68.99},{JD:245821075e-2,DeltaT:69.14},{JD:2458302,DeltaT:69.3},{JD:24584845e-1,DeltaT:69.5},{JD:245857575e-2,DeltaT:69.6},{JD:2458667,DeltaT:69.7},{JD:245875825e-2,DeltaT:69.8},{JD:24588495e-1,DeltaT:69.9},{JD:2458941,DeltaT:70},{JD:2459763,DeltaT:71},{JD:24610415e-1,DeltaT:72}],sn=[{JD:24373005e-1,LeapSeconds:1.422818,BaseMJD:37300,Coefficient:.001296},{JD:24375125e-1,LeapSeconds:1.372818,BaseMJD:37300,Coefficient:.001296},{JD:24376655e-1,LeapSeconds:1.845858,BaseMJD:37665,Coefficient:.0011232},{JD:24383345e-1,LeapSeconds:1.945858,BaseMJD:37665,Coefficient:.0011232},{JD:24383955e-1,LeapSeconds:3.24013,BaseMJD:38761,Coefficient:.001296},{JD:24384865e-1,LeapSeconds:3.34013,BaseMJD:38761,Coefficient:.001296},{JD:24386395e-1,LeapSeconds:3.44013,BaseMJD:38761,Coefficient:.001296},{JD:24387615e-1,LeapSeconds:3.54013,BaseMJD:38761,Coefficient:.001296},{JD:24388205e-1,LeapSeconds:3.64013,BaseMJD:38761,Coefficient:.001296},{JD:24389425e-1,LeapSeconds:3.74013,BaseMJD:38761,Coefficient:.001296},{JD:24390045e-1,LeapSeconds:3.84013,BaseMJD:38761,Coefficient:.001296},{JD:24391265e-1,LeapSeconds:4.31317,BaseMJD:39126,Coefficient:.002592},{JD:24398875e-1,LeapSeconds:4.21317,BaseMJD:39126,Coefficient:.002592},{JD:24413175e-1,LeapSeconds:10,BaseMJD:41317,Coefficient:0},{JD:24414995e-1,LeapSeconds:11,BaseMJD:41317,Coefficient:0},{JD:24416835e-1,LeapSeconds:12,BaseMJD:41317,Coefficient:0},{JD:24420485e-1,LeapSeconds:13,BaseMJD:41317,Coefficient:0},{JD:24424135e-1,LeapSeconds:14,BaseMJD:41317,Coefficient:0},{JD:24427785e-1,LeapSeconds:15,BaseMJD:41317,Coefficient:0},{JD:24431445e-1,LeapSeconds:16,BaseMJD:41317,Coefficient:0},{JD:24435095e-1,LeapSeconds:17,BaseMJD:41317,Coefficient:0},{JD:24438745e-1,LeapSeconds:18,BaseMJD:41317,Coefficient:0},{JD:24442395e-1,LeapSeconds:19,BaseMJD:41317,Coefficient:0},{JD:24447865e-1,LeapSeconds:20,BaseMJD:41317,Coefficient:0},{JD:24451515e-1,LeapSeconds:21,BaseMJD:41317,Coefficient:0},{JD:24455165e-1,LeapSeconds:22,BaseMJD:41317,Coefficient:0},{JD:24462475e-1,LeapSeconds:23,BaseMJD:41317,Coefficient:0},{JD:24471615e-1,LeapSeconds:24,BaseMJD:41317,Coefficient:0},{JD:24478925e-1,LeapSeconds:25,BaseMJD:41317,Coefficient:0},{JD:24482575e-1,LeapSeconds:26,BaseMJD:41317,Coefficient:0},{JD:24488045e-1,LeapSeconds:27,BaseMJD:41317,Coefficient:0},{JD:24491695e-1,LeapSeconds:28,BaseMJD:41317,Coefficient:0},{JD:24495345e-1,LeapSeconds:29,BaseMJD:41317,Coefficient:0},{JD:24500835e-1,LeapSeconds:30,BaseMJD:41317,Coefficient:0},{JD:24506305e-1,LeapSeconds:31,BaseMJD:41317,Coefficient:0},{JD:24511795e-1,LeapSeconds:32,BaseMJD:41317,Coefficient:0},{JD:24537365e-1,LeapSeconds:33,BaseMJD:41317,Coefficient:0},{JD:24548325e-1,LeapSeconds:34,BaseMJD:41317,Coefficient:0},{JD:24561095e-1,LeapSeconds:35,BaseMJD:41317,Coefficient:0},{JD:24572045e-1,LeapSeconds:36,BaseMJD:41317,Coefficient:0},{JD:24577545e-1,LeapSeconds:37,BaseMJD:41317,Coefficient:0}];function Th(t,e,n,i=!0){e<3&&(t=t-1,e=e+12);let s=0;if(i){const r=Math.floor(t/100);s=2-r+Math.floor(r/4)}return Math.floor(365.25*(t+4716))+Math.floor(30.6001*(e+1))+n+s-1524.5}function C5(t,e=!0){return e&&t%100===0?t%400===0:t%4===0}function yh(t,e=!0){const n=Da(t).getFullYear(),i=C5(n,e)?366:365;return n+(t-Th(n,1,1))/i}function ni(t,e=!0){const n=Da(t).getFullYear(),i=C5(n,e)?366:365,s=new Date(Date.UTC(n,0,0,0,0,0,0));return n+(t-q1(s))/i}function X1(t){let e=0;const n=Mn.length;if(t>=Mn[0].JD&&t<Mn[n-1].JD){let i=!1,s=0;for(;!i;)i=Mn[s].JD>t,i?e=(t-Mn[s-1].JD)/(Mn[s].JD-Mn[s-1].JD)*(Mn[s].DeltaT-Mn[s-1].DeltaT)+Mn[s-1].DeltaT:++s}else{const i=yh(t);if(i<-500){const s=(i-1820)/100;e=-20+32*(s*s)}else if(i<500){const s=i/100,r=s*s,a=r*s,o=a*s,c=o*s,l=c*s;e=10583.6+-1014.41*s+33.78311*r+-5.952053*a+-.1798452*o+.022174192*c+.0090316521*l}else if(i<1600){const s=(i-1e3)/100,r=s*s,a=r*s,o=a*s,c=o*s,l=c*s;e=1574.2+-556.01*s+71.23472*r+.319781*a+-.8503463*o+-.005050998*c+.0083572073*l}else if(i<1700){const s=(i-1600)/100,r=s*s,a=r*s;e=120+-98.08*s+-153.2*r+a/.007129}else if(i<1800){const s=(i-1700)/100,r=s*s,a=r*s,o=a*s;e=8.83+16.03*s+-59.285*r+133.36*a+-o/.01174}else if(i<1860){const s=(i-1800)/100,r=s*s,a=r*s,o=a*s,c=o*s,l=c*s,u=l*s;e=13.72+-33.2447*s+68.612*r+4111.6*a+-37436*o+121272*c+-169900*l+87500*u}else if(i<1900){const s=(i-1860)/100,r=s*s,a=r*s,o=a*s,c=o*s;e=7.62+57.37*s+-2517.54*r+16806.68*a+-44736.24*o+c/233174e-10}else if(i<1920){const s=(i-1900)/100,r=s*s,a=r*s,o=a*s;e=-2.79+149.4119*s+-598.939*r+6196.6*a+-19700*o}else if(i<1941){const s=(i-1920)/100,r=s*s,a=r*s;e=21.2+84.493*s+-761*r+2093.6*a}else if(i<1961){const s=(i-1950)/100,r=s*s,a=r*s;e=29.07+40.7*s+-r/.0233+a/.002547}else if(i<1986){const s=(i-1975)/100,r=s*s,a=r*s;e=45.45+106.7*s-r/.026-a/718e-6}else if(i<2005){const s=(i-2e3)/100,r=s*s,a=r*s,o=a*s,c=o*s;e=63.86+33.45*s+-603.74*r+1727.5*a+65181.4*o+237359.9*c}else if(i<2050){const s=(i-2e3)/100,r=s*s;e=62.92+32.217*s+55.89*r}else if(i<2150){const s=(i-1820)/100,r=s*s;e=-205.72+56.28*s+32*r}else{const s=(i-1820)/100;e=-20+32*(s*s)}}return e}function Eh(t){let e=0;const n=sn.length;if(t>=sn[0].JD){let i=!0,s=1;for(;i;)s>=n?(e=sn[n-1].LeapSeconds+(t-24000005e-1-sn[n-1].BaseMJD)*sn[n-1].Coefficient,i=!1):t<sn[s].JD&&(e=sn[s-1].LeapSeconds+(t-24000005e-1-sn[s-1].BaseMJD)*sn[s-1].Coefficient,i=!1),i&&++s}return e}function Dh(t){const e=sn.length;if(t<sn[0].JD||t>sn[e-1].JD+500)return Ah(t);const n=X1(t),i=Eh(t);return t-(n-i-32.184)/86400+n/86400}function Ah(t){return t+X1(t)/86400}var R5={exports:{}};(function(t,e){(function(n,i){t.exports=i()})(A5,function(){var n="minute",i=/[+-]\d\d(?::?\d\d)?/g,s=/([+-]|\d\d)/g;return function(r,a,o){var c=a.prototype;o.utc=function(g){var p={date:g,utc:!0,args:arguments};return new a(p)},c.utc=function(g){var p=o(this.toDate(),{locale:this.$L,utc:!0});return g?p.add(this.utcOffset(),n):p},c.local=function(){return o(this.toDate(),{locale:this.$L,utc:!1})};var l=c.parse;c.parse=function(g){g.utc&&(this.$u=!0),this.$utils().u(g.$offset)||(this.$offset=g.$offset),l.call(this,g)};var u=c.init;c.init=function(){if(this.$u){var g=this.$d;this.$y=g.getUTCFullYear(),this.$M=g.getUTCMonth(),this.$D=g.getUTCDate(),this.$W=g.getUTCDay(),this.$H=g.getUTCHours(),this.$m=g.getUTCMinutes(),this.$s=g.getUTCSeconds(),this.$ms=g.getUTCMilliseconds()}else u.call(this)};var d=c.utcOffset;c.utcOffset=function(g,p){var _=this.$utils().u;if(_(g))return this.$u?0:_(this.$offset)?d.call(this):this.$offset;if(typeof g=="string"&&(g=function(L){L===void 0&&(L="");var A=L.match(i);if(!A)return null;var w=(""+A[0]).match(s)||["-",0,0],F=w[0],y=60*+w[1]+ +w[2];return y===0?0:F==="+"?y:-y}(g),g===null))return this;var D=Math.abs(g)<=16?60*g:g,T=this;if(p)return T.$offset=D,T.$u=g===0,T;if(g!==0){var S=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(T=this.local().add(D+S,n)).$offset=D,T.$x.$localOffset=S}else T=this.utc();return T};var m=c.format;c.format=function(g){var p=g||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return m.call(this,p)},c.valueOf=function(){var g=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*g},c.isUTC=function(){return!!this.$u},c.toISOString=function(){return this.toDate().toISOString()},c.toString=function(){return this.toDate().toUTCString()};var h=c.toDate;c.toDate=function(g){return g==="s"&&this.$offset?o(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():h.call(this)};var f=c.diff;c.diff=function(g,p,_){if(g&&this.$u===g.$u)return f.call(this,g,p,_);var D=this.local(),T=o(g).local();return f.call(D,T,p,_)}}})})(R5);var bh=R5.exports;const wh=b5(bh);Q1.extend(wh);function L5(t){return!isNaN(parseFloat(t))&&isFinite(t)}function P5(t){return L5(t)&&parseFloat(t)>=0}function Ei(t,e){return Number(t-Math.floor(t/e)*e)}function Ch(t){return Ei(t,24)}function Re(t){return Ei(t,360)}function Rh(t){let e=Re(t);return e>180?e=e-360:e<-180&&(e=e+360),e}function yn(t){let e=Re(t);return e>270?e=e-360:(e>180||e>90)&&(e=180-e),e}function Da(t){return new Date((t+.5-_i)*Mi)}function q1(...t){if(t.length===0)return new Date().valueOf()/Mi-.5+_i;if(t.length===1){const e=t[0];if(e instanceof Date)return e.valueOf()/Mi-.5+_i;if(e instanceof String||typeof e=="string")return Q1(e).toDate().valueOf()/Mi-.5+_i;if(L5(e)){const n=Math.floor(e),i=Math.floor(e-n)*12,s=Math.floor(((e-n)*12-i)*365);return new Date(Date.UTC(n,i,s)).valueOf()/Mi-.5+_i}else return console.warn(`Invalid input argument for JulianDay : ${e} (${typeof e}). Using J2000 in place.`),ph}else return t.length===2?new Date(Date.UTC(t[0],t[1],0)).valueOf()/Mi-.5+_i:new Date(Date.UTC(t[0],t[1],t[2])).valueOf()/Mi-.5+_i}function Aa(t,e){const n=gt(t),i=280.46061837+360.98564736629*(t-2451545)+387933e-9*n*n-n*n*n/3871e4;return Ch(Re(i+e)*E5)}function Lh(t,e){const n=fe.getTrueObliquityOfEcliptic(t),i=fe.getNutationInLongitude(t);return Aa(t,e)+i*Math.cos(n)*E5}function Ph(t){return t-mh}function ba(t){return Math.floor(t-.5)+.5}function wa(t){return Dh(ba(t))}function gt(t){return(t-2451545)/36525}function ft(t){return(t-2451545)/365250}const Ca=Object.freeze(Object.defineProperty({__proto__:null,getApparentLocalSiderealTime:Lh,getDate:Da,getJulianCentury:gt,getJulianDay:q1,getJulianDayMidnight:ba,getJulianDayMidnightDynamicalTime:wa,getJulianMillenium:ft,getLocalSiderealTime:Aa,getModifiedJulianDay:Ph},Symbol.toStringTag,{value:"Module"})),Uh={equatorialRadius:695990};function Ih(t,e=W1){const n={longitude:t.longitude*H,latitude:t.latitude*H},i=e*H,s=Math.atan2(Math.sin(n.longitude)*Math.cos(i)-Math.tan(n.latitude)*Math.sin(i),Math.cos(n.longitude));return Re(s/H)}function Oh(t,e=W1){const n={longitude:t.longitude*H,latitude:t.latitude*H},i=e*H,s=Math.asin(Math.sin(n.latitude)*Math.cos(i)+Math.cos(n.latitude)*Math.sin(i)*Math.sin(n.longitude));return yn(s/H)}function ut(t,e=W1){return{rightAscension:Ih(t,e),declination:Oh(t,e)}}function U5(t,e,n){const i=gt(t),s=(e-1.397*i-31e-5*i*i)*H;return(-.09033+.03916*(Math.cos(s)-Math.sin(s))*Math.tan(n*H))/3600}function I5(t,e){const n=gt(t),i=(e-1.397*n-31e-5*n*n)*H;return .03916*(Math.cos(i)-Math.sin(i))/3600}function F3(t,e,n,i){const s=e-t,r=n-e,a=r-s;return e+i/2*(s+r+i*a)}function No(t,e,n,i,s,r,a=Fn){const o=Re(n+360.985647*t),c=t+i/86400,l=F3(s[0].rightAscension,s[1].rightAscension,s[2].rightAscension,c),u=F3(s[0].declination,s[1].declination,s[2].declination,c),d=r.longitude,m=r.latitude,h=Rh(o+d-l),f=Math.sin(m*H)*Math.sin(u*H)+Math.cos(m*H)*Math.cos(u*H)*Math.cos(h*H),g=Math.asin(f)/H;return{Deltam:e?-1*h/360:(g-a)/(Math.cos(u*H)*Math.cos(m*H)*Math.sin(h*H)*360),hourAngle:h,localAltitude:g}}function O5(t,e,n,i=Fn){const s=ba(t),r=Aa(s,0)*y5,a={m0:void 0,m1:void 0,m2:void 0,isCircumpolar:void 0,altitude:void 0,cosH0:void 0},o=e.rightAscension,c=n.longitude;a.m0=Ei((o-c-r)/360,1);const l=e.declination,u=n.latitude,d=Math.sin(i*H),m=Math.sin(u*H),h=Math.sin(l*H),f=Math.cos(u*H),g=Math.cos(l*H);if(a.cosH0=(d-m*h)/(f*g),a.isCircumpolar=Math.abs(a.cosH0)>1,a.altitude=Math.asin(m*h+f*g)/H,!a.isCircumpolar){const p=Math.acos(a.cosH0)/H/360;a.m1=Ei(a.m0-p,1),a.m2=Ei(a.m0+p,1)}return a}function Yt(t,e,n){const i=P5(t),s=Math.abs(t)+Math.abs(e)/60+Math.abs(n)/3600;return i?s:-1*Math.abs(s)}function Nh(t){const e=Math.abs(t),n=Math.floor(e),i=(e-n)*60,s=Math.floor(i),r=(i-s)*60,a=Math.floor(r),o=(r-a)*1e3;return{sign:P5(t)?1:-1,radix:n,minutes:s,seconds:a,milliseconds:o}}function yi(t,e){const n=Q1.utc(Da(t)),i=Nh(e);return q1(n.hour(i.radix).minute(i.minutes).second(i.seconds).toDate())}function Fh(t,e,n,i=Fn,s=1){const r={rise:{utc:void 0,julianDay:void 0},set:{utc:void 0,julianDay:void 0},transit:{utc:void 0,julianDay:void 0,altitude:void 0,refAltitude:i,isAboveHorizon:!1,isAboveAltitude:!1,isCircumpolar:!1,internals:{m0:void 0,cosH0:void 0}}},a=ba(t),o=Aa(a,0)*y5,c=O5(t,e[1],n,i);if(r.transit.utc=c.m0*24,r.transit.julianDay=yi(t,r.transit.utc),r.transit.altitude=c.altitude,r.transit.internals.m0=c.m0,r.transit.internals.cosH0=c.cosH0,r.transit.isCircumpolar=c.isCircumpolar,r.transit.isAboveHorizon=c.altitude>Fn,r.transit.isAboveAltitude=c.altitude>i,!c.isCircumpolar){const l=X1(t);for(let u=0;u<s;u++){const d=No(c.m0,!0,o,l,e,n,i),m=No(c.m1,!1,o,l,e,n,i),h=No(c.m2,!1,o,l,e,n,i);c.altitude=c.m0+d.localAltitude,c.m0=c.m0+d.Deltam,c.m1=c.m1+m.Deltam,c.m2=c.m2+h.Deltam}r.transit.altitude=c.altitude,r.transit.utc=c.m0*24,r.rise.utc=c.m1*24,r.set.utc=c.m2*24,r.transit.julianDay=yi(t,r.transit.utc),r.rise.julianDay=yi(t,r.rise.utc),r.set.julianDay=yi(t,r.set.utc),r.transit.isCircumpolar=c.isCircumpolar,r.transit.isAboveHorizon=c.altitude>Fn,r.transit.isAboveAltitude=c.altitude>i,r.rise.julianDay&&r.transit.julianDay&&r.rise.julianDay>r.transit.julianDay&&(r.rise.julianDay=r.rise.julianDay-1),r.set.julianDay&&r.transit.julianDay&&r.set.julianDay<r.transit.julianDay&&(r.set.julianDay=r.set.julianDay+1)}return r}function N5(t,e,n,i=Fn){const s={rise:{utc:void 0,julianDay:void 0},set:{utc:void 0,julianDay:void 0},transit:{utc:void 0,julianDay:void 0,altitude:void 0,refAltitude:i,isAboveHorizon:!1,isAboveAltitude:!1,isCircumpolar:!1,internals:{m0:void 0,cosH0:void 0}}},r=O5(t,e,n,i);return s.transit.altitude=r.altitude,s.transit.utc=r.m0*24,s.transit.julianDay=yi(t,s.transit.utc),s.transit.internals.m0=r.m0,s.transit.internals.cosH0=r.cosH0,s.transit.isCircumpolar=r.isCircumpolar,s.transit.isAboveHorizon=r.altitude>Fn,s.transit.isAboveAltitude=r.altitude>i,r.isCircumpolar||(s.rise.utc=r.m1*24,s.set.utc=r.m2*24,s.rise.julianDay=yi(t,s.rise.utc),s.set.julianDay=yi(t,s.set.utc),s.rise.julianDay&&s.transit.julianDay&&s.rise.julianDay>s.transit.julianDay&&(s.rise.julianDay=s.rise.julianDay-1),s.set.julianDay&&s.transit.julianDay&&s.set.julianDay<s.transit.julianDay&&(s.set.julianDay=s.set.julianDay+1)),s}function $1(t){const e=gt(t),n=357.52911+35999.05029*e-1537e-7*e*e+e*e*e/2449e4;return Re(n)}function Bh(t){const e=gt(t),n=$1(t),i=Y1(e,n);return Re(n+i)}function Y1(t,e){return(1.914602-.004817*t-14e-6*t*t)*Math.sin(e*H)+(.019993-101e-6*t)*Math.sin(2*e*H)+289e-6*Math.sin(3*e*H)}function zh(t){const e=280.46646+36000.76983*t+3032e-7*t*t;return Re(e)}function Gh(t){return Re(280.46646+36000.76983*t+3032e-7*t*t)}function Hh(t){const e=gt(t),n=Gh(e),i=$1(t),s=Y1(e,i);return Re(n+s)}function Ra(t,e=he.MeanOfTheDate){return Re(fe.getEclipticLongitude(t,e)+180)}function La(t,e=he.MeanOfTheDate){return-fe.getEclipticLatitude(t,e)}function F5(t,e=he.MeanOfTheDate){let n=Ra(t,e);const i=La(t,e);return n=n+U5(t,n,i),n}function B5(t,e=he.MeanOfTheDate){const n=Ra(t,e);let i=La(t,e);return i=i+I5(t,n),i}function z5(t,e=he.MeanOfTheDate){return{longitude:Ra(t,e),latitude:La(t,e)}}function kh(t,e=he.MeanOfTheDate){return ut(z5(t,e),fe.getMeanObliquityOfEcliptic(t))}function G5(t){let e=F5(t,he.MeanOfTheDate);e=e+Yt(0,0,fe.getNutationInLongitude(t));const n=fe.getRadiusVector(t);return e=e-Yt(0,0,20.4898/n),e}function H5(t){return B5(t,he.MeanOfTheDate)}function k5(t){return{longitude:G5(t),latitude:H5(t)}}function V5(t){return ut(k5(t),fe.getTrueObliquityOfEcliptic(t))}function Vh(t){const e=(t-2451545)/365250,n=e*e,i=n*e;return 3548.193+118.568*Math.sin(H*(87.5287+359993.7286*e))+2.476*Math.sin(H*(85.0561+719987.4571*e))+1.376*Math.sin(H*(27.8502+44526711152e-4*e))+.119*Math.sin(H*(73.1375+450368.8564*e))+.114*Math.sin(H*(337.2264+329644.6718*e))+.086*Math.sin(H*(222.54+659289.3436*e))+.078*Math.sin(H*(162.8136+92246597915e-4*e))+.054*Math.sin(H*(82.5823+10799811857e-4*e))+.052*Math.sin(H*(171.5189+225184.4282*e))+.034*Math.sin(H*(30.3214+40926773866e-4*e))+.033*Math.sin(H*(119.8105+337181.4711*e))+.023*Math.sin(H*(247.5418+299295.6151*e))+.023*Math.sin(H*(325.1526+315559.556*e))+.021*Math.sin(H*(155.1241+675553.2846*e))+7.311*e*Math.sin(H*(333.4515+359993.7286*e))+.305*e*Math.sin(H*(330.9814+719987.4571*e))+.01*e*Math.sin(H*(328.517+10799811857e-4*e))+.309*n*Math.sin(H*(241.4518+359993.7286*e))+.021*n*Math.sin(H*(205.0482+719987.4571*e))+.004*n*Math.sin(H*(297.861+44526711152e-4*e))+.01*i*Math.sin(H*(154.7066+359993.7286*e))}function Jh(t,e){const n=wa(t),i=V5(n);return N5(t,i,e,xh)}const cn={getMeanAnomaly:$1,getTrueAnomaly:Bh,getEquationOfTheCenter:Y1,getMeanLongitudeReferredToMeanEquinoxOfDate:zh,getGeometricEclipticLongitude:Hh,getGeocentricEclipticLongitude:Ra,getGeocentricEclipticLatitude:La,getGeometricFK5EclipticLongitude:F5,getGeometricFK5EclipticLatitude:B5,getGeocentricEclipticCoordinates:z5,getGeocentricEquatorialCoordinates:kh,getApparentGeocentricEclipticLongitude:G5,getApparentGeocentricEclipticLatitude:H5,getApparentGeocentricEclipticCoordinates:k5,getApparentGeocentricEquatorialCoordinates:V5,getVariationGeometricEclipticLongitude:Vh,getRiseTransitSet:Jh,constants:Uh},Wh=function(){return[[175347046,0,0],[3341656,4.6692568,6283.07585],[34894,4.6261,12566.1517],[3497,2.7441,5753.3849],[3418,2.8289,3.5231],[3136,3.6277,77713.7715],[2676,4.4181,7860.4194],[2343,6.1352,3930.2097],[1324,.7425,11506.7698],[1273,2.0371,529.691],[1199,1.1096,1577.3435],[990,5.233,5884.927],[902,2.045,26.298],[857,3.508,398.149],[780,1.179,5223.694],[753,2.533,5507.553],[505,4.583,18849.228],[492,4.205,775.523],[357,2.92,.067],[317,5.849,11790.629],[284,1.899,796.298],[271,.315,10977.079],[243,.345,5486.778],[206,4.806,2544.314],[205,1.869,5573.143],[202,2.458,6069.777],[156,.833,213.299],[132,3.411,2942.463],[126,1.083,20.775],[115,.645,.98],[103,.636,4694.003],[102,.976,15720.839],[102,4.267,7.114],[99,6.21,2146.17],[98,.68,155.42],[86,5.98,161000.69],[85,1.3,6275.96],[85,3.67,71430.7],[80,1.81,17260.15],[79,3.04,12036.46],[75,1.76,5088.63],[74,3.5,3154.69],[74,4.68,801.82],[70,.83,9437.76],[62,3.98,8827.39],[61,1.82,7084.9],[57,2.78,6286.6],[56,4.39,14143.5],[56,3.47,6279.55],[52,.19,12139.55],[52,1.33,1748.02],[51,.28,5856.48],[49,.49,1194.45],[41,5.37,8429.24],[41,2.4,19651.05],[39,6.17,10447.39],[37,6.04,10213.29],[37,2.57,1059.38],[36,1.71,2352.87],[36,1.78,6812.77],[33,.59,17789.85],[30,.44,83996.85],[30,2.74,1349.87],[25,3.16,4690.48]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Qh=function(){return[[628331966747,0,0],[206059,2.678235,6283.07585],[4303,2.6351,12566.1517],[425,1.59,3.523],[119,5.796,26.298],[109,2.966,1577.344],[93,2.59,18849.23],[72,1.14,529.69],[68,1.87,398.15],[67,4.41,5507.55],[59,2.89,5223.69],[56,2.17,155.42],[45,.4,796.3],[36,.47,775.52],[29,2.65,7.11],[21,5.34,.98],[19,1.85,5486.78],[19,4.97,213.3],[17,2.99,6275.96],[16,.03,2544.31],[16,1.43,2146.17],[15,1.21,10977.08],[12,2.83,1748.02],[12,3.26,5088.63],[12,5.27,1194.45],[12,2.08,4694],[11,.77,553.57],[10,1.3,6286.6],[10,4.24,1349.87],[9,2.7,242.73],[9,5.64,951.72],[8,5.3,2352.87],[6,2.65,9437.76],[6,4.67,4690.48]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Xh=function(){return[[52919,0,0],[8720,1.0721,6283.0758],[309,.867,12566.152],[27,.05,3.52],[16,5.19,26.3],[16,3.68,155.42],[10,.76,18849.23],[9,2.06,77713.77],[7,.83,775.52],[5,4.66,1577.34],[4,1.03,7.11],[4,3.44,5573.14],[3,5.14,796.3],[3,6.05,5507.55],[3,1.19,242.73],[3,6.12,529.69],[3,.31,398.15],[3,2.28,553.57],[2,4.38,5223.69],[2,3.75,.98]].map(t=>({A:t[0],B:t[1],C:t[2]}))},qh=function(){return[[289,5.844,6283.076],[35,0,0],[17,5.49,12566.15],[3,5.2,155.42],[1,4.72,3.52],[1,5.3,18849.23],[1,5.97,242.73]].map(t=>({A:t[0],B:t[1],C:t[2]}))},$h=function(){return[[114,3.142,0],[8,4.13,6283.08],[1,3.84,12566.15]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Yh=function(){return[[1,3.14,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},jh=function(){return[[280,3.199,84334.662],[102,5.422,5507.553],[80,3.88,5223.69],[44,3.7,2352.87],[32,4,1577.34]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Zh=function(){return[[9,3.9,5507.55],[6,1.73,5223.69]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Kh=function(){return[[100013989,0,0],[1670700,3.0984635,6283.07585],[13956,3.05525,12566.1517],[3084,5.1985,77713.7715],[1628,1.1739,5753.3849],[1576,2.8469,7860.4194],[925,5.453,11506.77],[542,4.564,3930.21],[472,3.661,5884.927],[346,.964,5507.553],[329,5.9,5223.694],[307,.299,5573.143],[243,4.273,11790.629],[212,5.847,1577.344],[186,5.022,10977.079],[175,3.012,18849.228],[110,5.055,5486.778],[98,.89,6069.78],[86,5.69,15720.84],[86,1.27,161000.69],[65,.27,17260.15],[63,.92,529.69],[57,2.01,83996.85],[56,5.24,71430.7],[49,3.25,2544.31],[47,2.58,775.52],[45,5.54,9437.76],[43,6.01,6275.96],[39,5.36,4694],[38,2.39,8827.39],[37,.83,19651.05],[37,4.9,12139.55],[36,1.67,12036.46],[35,1.84,2942.46],[33,.24,7084.9],[32,.18,5088.63],[32,1.78,398.15],[28,1.21,6286.6],[28,1.9,6279.55],[26,4.59,10447.39]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ed=function(){return[[103019,1.10749,6283.07585],[1721,1.0644,12566.1517],[702,3.142,0],[32,1.02,18849.23],[31,2.84,5507.55],[25,1.32,5223.69],[18,1.42,1577.34],[10,5.91,10977.08],[9,1.42,6275.96],[9,.27,5486.78]].map(t=>({A:t[0],B:t[1],C:t[2]}))},td=function(){return[[4359,5.7846,6283.0758],[124,5.579,12566.152],[12,3.14,0],[9,3.63,77713.77],[6,1.87,5573.14],[3,5.47,18849.23]].map(t=>({A:t[0],B:t[1],C:t[2]}))},nd=function(){return[[145,4.273,6283.076],[7,3.92,12566.15]].map(t=>({A:t[0],B:t[1],C:t[2]}))},id=function(){return[[4,2.56,6283.08]].map(t=>({A:t[0],B:t[1],C:t[2]}))},sd=function(){return[[628307584999,0,0],[206059,2.678235,6283.07585],[4303,2.6351,12566.1517],[425,1.59,3.523],[119,5.796,26.298],[109,2.966,1577.344],[93,2.59,18849.23],[72,1.14,529.69],[68,1.87,398.15],[67,4.41,5507.55],[59,2.89,5223.69],[56,2.17,155.42],[45,.4,796.3],[36,.47,775.52],[29,2.65,7.11],[21,5.43,.98],[19,1.85,5486.78],[19,4.97,213.3],[17,2.99,6275.96],[16,.03,2544.31],[16,1.43,2146.17],[15,1.21,10977.08],[12,2.83,1748.02],[12,3.26,5088.63],[12,5.27,1194.45],[12,2.08,4694],[11,.77,553.57],[10,1.3,6286.6],[10,4.24,1349.87],[9,2.7,242.73],[9,5.64,951.72],[8,5.3,2352.87],[6,2.65,9437.76],[6,4.67,4690.48]].map(t=>({A:t[0],B:t[1],C:t[2]}))},rd=function(){return[[8722,1.0725,6283.0758],[991,3.1416,0],[295,.437,12566.152],[27,.05,3.52],[16,5.19,26.3],[16,3.69,155.42],[9,.3,18849.23],[9,2.06,77713.77],[7,.83,775.52],[5,4.66,1577.34],[4,1.03,7.11],[4,3.44,5573.14],[3,5.14,796.3],[3,6.05,5507.55],[3,1.19,242.73],[3,6.12,529.69],[3,.3,398.15],[3,2.28,553.57],[2,4.38,5223.69],[2,3.75,.98]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ad=function(){return[[289,5.842,6283.076],[21,6.05,12566.15],[3,5.2,155.42],[3,3.14,0],[1,4.72,3.52],[1,5.97,242.73],[1,5.54,18849.23]].map(t=>({A:t[0],B:t[1],C:t[2]}))},od=function(){return[[8,4.14,6283.08],[1,3.28,12566.15]].map(t=>({A:t[0],B:t[1],C:t[2]}))},cd=function(){return[[227778,3.413766,6283.07585],[3806,3.3706,12566.1517],[3620,0,0],[72,3.33,18849.23],[8,3.89,5507.55],[8,1.79,5223.69],[6,5.2,2352.87]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ld=function(){return[[9721,5.1519,6283.07585],[233,3.1416,0],[134,.644,12566.152],[7,1.07,18849.23]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ud=function(){return[[276,.595,6283.076],[17,3.14,0],[4,.12,12566.15]].map(t=>({A:t[0],B:t[1],C:t[2]}))},hd=function(){return[[6,2.27,6283.08],[1,0,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))};function C1(t,e=he.MeanOfTheDate){const n=ft(t),i=(he.MeanOfTheDate,Wh()),s=e===he.MeanOfTheDate?Qh():sd(),r=e===he.MeanOfTheDate?Xh():rd(),a=e===he.MeanOfTheDate?qh():ad(),o=e===he.MeanOfTheDate?$h():od(),c=e===he.MeanOfTheDate?Yh():[],l=i.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*n),0),u=s.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*n),0),d=r.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*n),0),m=a.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*n),0),h=o.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*n),0),f=c.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*n),0);return(l+u*n+d*Math.pow(n,2)+m*Math.pow(n,3)+h*Math.pow(n,4)+f*Math.pow(n,5))/1e8*De}function J5(t,e=he.MeanOfTheDate){return Re(C1(t,e))}function dd(t,e,n=he.MeanOfTheDate){return C1(e,n)-C1(t,n)}function W5(t,e=he.MeanOfTheDate){const n=ft(t),i=(he.MeanOfTheDate,jh()),s=e===he.MeanOfTheDate?Zh():cd(),r=e===he.MeanOfTheDate?[]:ld(),a=e===he.MeanOfTheDate?[]:ud(),o=e===he.MeanOfTheDate?[]:hd(),c=i.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*n),0),l=s.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*n),0),u=r.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*n),0),d=a.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*n),0),m=o.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*n),0),h=c+l*n+u*Math.pow(n,2)+d*Math.pow(n,3)+m*Math.pow(n,4);return yn(h/1e8*De)}function fd(t,e=he.MeanOfTheDate){return{longitude:J5(t,e),latitude:W5(t,e)}}function Q5(t){const e=ft(t),n=Kh(),i=ed(),s=td(),r=nd(),a=id(),o=n.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),c=i.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),l=s.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),u=r.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),d=a.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0);return(o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4))/1e8}function pd(t){return cn.getMeanAnomaly(t)}function j1(t){const e=gt(t);return .016708634-e*42037e-9-e*e*1267e-10}function Z1(t){const e=gt(t);return 102.93735+e*1.71946+e*e*46e-5}function md(t,e){const n=_h*1e3,i=1-Mh,s=e*H,r=Math.atan(i*Math.tan(s)),a=t/n;return{rhosinphi:i*Math.sin(r)+a*Math.sin(s),rhocosphi:Math.cos(r)+a*Math.cos(s)}}const gd=function(){return[[0,0,0,0,1,-171996,-174.2,92025,8.9],[-2,0,0,2,2,-13187,-1.6,5736,-3.1],[0,0,0,2,2,-2274,-.2,977,-.5],[0,0,0,0,2,2062,.2,-895,.5],[0,1,0,0,0,1426,-3.4,54,-.1],[0,0,1,0,0,712,.1,-7,0],[-2,1,0,2,2,-517,1.2,224,-.6],[0,0,0,2,1,-386,-.4,200,0],[0,0,1,2,2,-301,0,129,-.1],[-2,-1,0,2,2,217,-.5,-95,.3],[-2,0,1,0,0,-158,0,0,0],[-2,0,0,2,1,129,.1,-70,0],[0,0,-1,2,2,123,0,-53,0],[2,0,0,0,0,63,0,0,0],[0,0,1,0,1,63,.1,-33,0],[2,0,-1,2,2,-59,0,26,0],[0,0,-1,0,1,-58,-.1,32,0],[0,0,1,2,1,-51,0,27,0],[-2,0,2,0,0,48,0,0,0],[0,0,-2,2,1,46,0,-24,0],[2,0,0,2,2,-38,0,16,0],[0,0,2,2,2,-31,0,13,0],[0,0,2,0,0,29,0,0,0],[-2,0,1,2,2,29,0,-12,0],[0,0,0,2,0,26,0,0,0],[-2,0,0,2,0,-22,0,0,0],[0,0,-1,2,1,21,0,-10,0],[0,2,0,0,0,17,-.1,0,0],[2,0,-1,0,1,16,0,-8,0],[-2,2,0,2,2,-16,.1,7,0],[0,1,0,0,1,-15,0,9,0],[-2,0,1,0,1,-13,0,7,0],[0,-1,0,0,1,-12,0,6,0],[0,0,2,-2,0,11,0,0,0],[2,0,-1,2,1,-10,0,5,0],[2,0,1,2,2,-8,0,3,0],[0,1,0,2,2,7,0,-3,0],[-2,1,1,0,0,-7,0,0,0],[0,-1,0,2,2,-7,0,3,0],[2,0,0,2,1,-7,0,3,0],[2,0,1,0,0,6,0,0,0],[-2,0,2,2,2,6,0,-3,0],[-2,0,1,2,1,6,0,-3,0],[2,0,-2,0,1,-6,0,3,0],[2,0,0,0,1,-6,0,3,0],[0,-1,1,0,0,5,0,0,0],[-2,-1,0,2,1,-5,0,3,0],[-2,0,0,0,1,-5,0,3,0],[0,0,2,2,1,-5,0,3,0],[-2,0,2,0,1,4,0,0,0],[-2,1,0,2,1,4,0,0,0],[0,0,1,-2,0,4,0,0,0],[-1,0,1,0,0,-4,0,0,0],[-2,1,0,0,0,-4,0,0,0],[1,0,0,0,0,-4,0,0,0],[0,0,1,2,0,3,0,0,0],[0,0,-2,2,2,-3,0,0,0],[-1,-1,1,0,0,-3,0,0,0],[0,1,1,0,0,-3,0,0,0],[0,-1,1,2,2,-3,0,0,0],[2,-1,-1,2,2,-3,0,0,0],[0,0,3,2,2,-3,0,0,0],[2,-1,0,2,2,-3,0,0,0]].map(t=>({D:t[0],M:t[1],Mprime:t[2],F:t[3],omega:t[4],sincoeff1:t[5],sincoeff2:t[6],coscoeff1:t[7],coscoeff2:t[8]}))};function X5(t,e,n,i,s,r,a){const o=gd(),c=a==="sin"?Math.sin:Math.cos;return o.reduce((l,u)=>{const d=u.D*e+u.M*n+u.Mprime*i+u.F*s+u.omega*r,m=a==="sin"?u.sincoeff1:u.coscoeff1,h=a==="sin"?u.sincoeff2:u.coscoeff2;return l+(m+h*t)*(c(d*H)*1e-4)},0)}function K1(t){const e=gt(t),n=In.getMeanElongation(t),i=cn.getMeanAnomaly(t),s=In.getMeanAnomaly(t),r=In.getArgumentOfLatitude(t),a=In.getMeanLongitudeAscendingNode(t);return X5(e,n,i,s,r,a,"sin")}function e2(t){const e=gt(t),n=In.getMeanElongation(t),i=cn.getMeanAnomaly(t),s=In.getMeanAnomaly(t),r=In.getArgumentOfLatitude(t),a=In.getMeanLongitudeAscendingNode(t);return X5(e,n,i,s,r,a,"cos")}function Pa(t){const e=(t-2451545)/3652500;return Yt(23,26,21.448)-Yt(0,0,4680.93)*e-Yt(0,0,1.55)*Math.pow(e,2)+Yt(0,0,1999.25)*Math.pow(e,3)-Yt(0,0,51.38)*Math.pow(e,4)-Yt(0,0,249.67)*Math.pow(e,5)-Yt(0,0,39.05)*Math.pow(e,6)+Yt(0,0,7.12)*Math.pow(e,7)+Yt(0,0,27.87)*Math.pow(e,8)+Yt(0,0,5.79)*Math.pow(e,9)+Yt(0,0,2.45)*Math.pow(e,10)}function Ua(t){return Pa(t)+e2(t)/3600}const q5=function(){return[[0,0,1,0],[2,0,-1,0],[2,0,0,0],[0,0,2,0],[0,1,0,0],[0,0,0,2],[2,0,-2,0],[2,-1,-1,0],[2,0,1,0],[2,-1,0,0],[0,1,-1,0],[1,0,0,0],[0,1,1,0],[2,0,0,-2],[0,0,1,2],[0,0,1,-2],[4,0,-1,0],[0,0,3,0],[4,0,-2,0],[2,1,-1,0],[2,1,0,0],[1,0,-1,0],[1,1,0,0],[2,-1,1,0],[2,0,2,0],[4,0,0,0],[2,0,-3,0],[0,1,-2,0],[2,0,-1,2],[2,-1,-2,0],[1,0,1,0],[2,-2,0,0],[0,1,2,0],[0,2,0,0],[2,-2,-1,0],[2,0,1,-2],[2,0,0,2],[4,-1,-1,0],[0,0,2,2],[3,0,-1,0],[2,1,1,0],[4,-1,-2,0],[0,2,-1,0],[2,2,-1,0],[2,1,-2,0],[2,-1,0,-2],[4,0,1,0],[0,0,4,0],[4,-1,0,0],[1,0,-2,0],[2,1,0,-2],[0,0,2,-2],[1,1,1,0],[3,0,-2,0],[4,0,-3,0],[2,-1,2,0],[0,2,1,0],[1,1,-1,0],[2,0,3,0],[2,0,-1,-2]].map(t=>({D:t[0],M:t[1],Mdash:t[2],F:t[3]}))},$5=function(){return[[6288774,-20905355],[1274027,-3699111],[658314,-2955968],[213618,-569925],[-185116,48888],[-114332,-3149],[58793,246158],[57066,-152138],[53322,-170733],[45758,-204586],[-40923,-129620],[-34720,108743],[-30383,104755],[15327,10321],[-12528,0],[10980,79661],[10675,-34782],[10034,-23210],[8548,-21636],[-7888,24208],[-6766,30824],[-5163,-8379],[4987,-16675],[4036,-12831],[3994,-10445],[3861,-11650],[3665,14403],[-2689,-7003],[-2602,0],[2390,10056],[-2348,6322],[2236,-9884],[-2120,5751],[-2069,0],[2048,-4950],[-1773,4130],[-1595,0],[1215,-3958],[-1110,0],[-892,3258],[-810,2616],[759,-1897],[-713,-2117],[-700,2354],[691,0],[596,0],[549,-1423],[537,-1117],[520,-1571],[-487,-1739],[-399,0],[-381,-4421],[351,0],[-340,0],[330,0],[327,0],[-323,1165],[299,0],[294,0],[0,8752]].map(t=>({A:t[0],B:t[1]}))},_d=function(){return[[0,0,0,1],[0,0,1,1],[0,0,1,-1],[2,0,0,-1],[2,0,-1,1],[2,0,-1,-1],[2,0,0,1],[0,0,2,1],[2,0,1,-1],[0,0,2,-1],[2,-1,0,-1],[2,0,-2,-1],[2,0,1,1],[2,1,0,-1],[2,-1,-1,1],[2,-1,0,1],[2,-1,-1,-1],[0,1,-1,-1],[4,0,-1,-1],[0,1,0,1],[0,0,0,3],[0,1,-1,1],[1,0,0,1],[0,1,1,1],[0,1,1,-1],[0,1,0,-1],[1,0,0,-1],[0,0,3,1],[4,0,0,-1],[4,0,-1,1],[0,0,1,-3],[4,0,-2,1],[2,0,0,-3],[2,0,2,-1],[2,-1,1,-1],[2,0,-2,1],[0,0,3,-1],[2,0,2,1],[2,0,-3,-1],[2,1,-1,1],[2,1,0,1],[4,0,0,1],[2,-1,1,1],[2,-2,0,-1],[0,0,1,3],[2,1,1,-1],[1,1,0,-1],[1,1,0,1],[0,1,-2,-1],[2,1,-1,-1],[1,0,1,1],[2,-1,-2,-1],[0,1,2,1],[4,0,-2,-1],[4,-1,-1,-1],[1,0,1,-1],[4,0,1,-1],[1,0,-1,-1],[4,-1,0,-1],[2,-2,0,1]].map(t=>({D:t[0],M:t[1],Mdash:t[2],F:t[3]}))},Md=function(){return[5128122,280602,277693,173237,55413,46271,32573,17198,9266,8822,8216,4324,4200,-3359,2463,2211,2065,-1870,1828,-1794,-1749,-1565,-1491,-1475,-1410,-1344,-1335,1107,1021,833,777,671,607,596,491,-451,439,422,421,-366,-351,331,315,302,-283,-229,223,223,-220,-220,-185,181,-177,176,166,-164,132,-119,115,107].map(t=>t)};function t2(t,e,n,i,s,r,a,o,c){const l=r(),u=a();return l.reduce((d,m,h)=>{const f=m.D*e+m.M*n+m.Mdash*i+m.F*s,g=Math.abs(m.M)===1?t:Math.abs(m.M)===2?Math.pow(t,2):1,p=o.length?u[h][o]:u[h];return d+p*g*Math[c](f)},0)}function n2(t){const e=gt(t),n=218.3164477+481267.88123421*e-.0015786*e*e+e*e*e/538841-e*e*e*e/65194e3;return Re(n)}function fr(t){const e=gt(t),n=297.8501921+445267.1114034*e-.0018819*e*e+e*e*e/545868-e*e*e*e/113065e3;return Re(n)}function pr(t){const e=gt(t),n=134.9633964+477198.8675055*e+.0087414*e*e+e*e*e/69699-e*e*e*e/14712e3;return Re(n)}function mr(t){const e=gt(t),n=93.272095+483202.0175233*e-.0036539*e*e-e*e*e/3526e3-e*e*e*e/86331e4;return Re(n)}function Y5(t){const e=n2(t)*H,n=fr(t)*H,i=cn.getMeanAnomaly(t)*H,s=pr(t)*H,r=mr(t)*H,a=gt(t),o=1-a*.002516-a*a*74e-7,c=Re(119.75+131.849*a)*H,l=Re(53.09+479264.29*a)*H;let u=t2(o,n,i,s,r,q5,$5,"A","sin");return u+=3958*Math.sin(c)+1962*Math.sin(e-r)+318*Math.sin(l),Re(e*De+u/1e6)}function j5(t){const e=n2(t)*H,n=fr(t)*H,i=cn.getMeanAnomaly(t)*H,s=pr(t)*H,r=mr(t)*H,a=gt(t),o=1-a*.002516-a*a*74e-7,c=Re(119.75+131.849*a)*H,l=Re(313.45+481266.484*a)*H;let u=t2(o,n,i,s,r,_d,Md,"","sin");return u=u-2235*Math.sin(e)+382*Math.sin(l)+175*Math.sin(c-r)+175*Math.sin(c+r)+127*Math.sin(e-s)-115*Math.sin(e+s),u/1e6}function i2(t){return{longitude:Y5(t),latitude:j5(t)}}function s2(t,e=Ze.Mean){return ut(i2(t),e===Ze.Mean?Pa(t):Ua(t))}function vd(t){const e=i2(t);return e.longitude=e.longitude+K1(t)/3600,ut(e,Ua(t))}function gr(t){const e=fr(t)*H,n=cn.getMeanAnomaly(t)*H,i=pr(t)*H,s=mr(t)*H,r=gt(t),a=1-r*.002516-r*r*74e-7;return 385000.56+t2(a,e,n,i,s,q5,$5,"B","cos")/1e3}function xd(t){return Z5(gr(t))}function Z5(t){return Math.asin(6378.14/t)*De}function Sd(t){const e=t*H;return 6378.14/Math.sin(e)}function K5(t){const e=gt(t),n=125.0445479-1934.1362891*e+.0020754*e*e+e*e*e/467441-e*e*e*e/60616e3;return Re(n)}function Td(t){const e=gt(t),n=83.3532465+4069.0137287*e-.01032*e*e-e*e*e/80053+e*e*e*e/18999e3;return Re(n)}function yd(t){let e=K5(t);const n=fr(t)*H,i=cn.getMeanAnomaly(t)*H,s=pr(t)*H,r=mr(t)*H,a=e-1.4979*Math.sin(2*(n-r))-.15*Math.sin(i)-.1226*Math.sin(2*n)+.1176*Math.sin(2*r)-.0801*Math.sin(2*(s-r));return Re(a)}function e0(t){const e=cn.getGeocentricEquatorialCoordinates(t,he.MeanOfTheDate),n=s2(t,Ze.Mean),i=e.declination*H,s=n.declination*H,r=e.rightAscension*H,a=n.rightAscension*H,o=Math.sin(i)*Math.sin(s),c=Math.cos(i)*Math.cos(s)*Math.cos(r-a);return Math.acos(o+c)*De}function t0(t){const e=e0(t)*H,n=gr(t),i=Q5(t)*vh;return Math.atan2(i*Math.sin(e),n-i*Math.cos(e))*De}function Ed(t){const e=cn.getGeocentricEquatorialCoordinates(t,he.MeanOfTheDate),n=s2(t,Ze.Mean),i=e.rightAscension*H,s=n.rightAscension*H,r=e.declination*H,a=n.declination*H,o=Math.cos(r)*Math.sin(i-s),c=Math.sin(r)*Math.cos(a)-Math.cos(r)*Math.sin(a)*Math.cos(i-s);return Math.atan2(o,c)*De}function Dd(t){const e=t0(t)*H;return(1+Math.cos(e))/2}function Ad(t){return Math.asin(6378.14/gr(t))*De}function bd(t){return 358473400/gr(t)}function wd(t){const e=12.3685*(ni(t)-2e3);return e>=0?Math.floor(e):Math.ceil(e)}function Cd(t,e){let n=wd(t);return e===tr.FirstQuarter?n=n+.25:e==tr.Full?n=n+.5:e==tr.LastQuarter&&(n=n+.75),n}function n0(t,e){const n=Cd(t,e),i=n/1236.85;return 245155009766e-5+29.530588861*n+15437e-8*Math.pow(i,2)-15e-8*Math.pow(i,3)+73e-11*Math.pow(i,4)}function i0(t){let e=n0(t-da,tr.New);return e>t&&(e=e-da),Ei(t-e,da)}function Rd(t){const e=i0(t)/da;return e<=$n[Lt.New]?Lt.New:e<=$n[Lt.WaxingCrescent]?Lt.WaxingCrescent:e<=$n[Lt.FirstQuarter]?Lt.FirstQuarter:e<=$n[Lt.WaxingGibbous]?Lt.WaxingGibbous:e<=$n[Lt.Full]?Lt.Full:e<=$n[Lt.WaningGibbous]?Lt.WaningGibbous:e<=$n[Lt.LastQuarter]?Lt.LastQuarter:e<=$n[Lt.WaningCrescent]?Lt.WaningCrescent:Lt.New}const In={getGeocentricElongation:e0,getMeanLongitude:n2,getMeanElongation:fr,getMeanAnomaly:pr,getArgumentOfLatitude:mr,getGeocentricEclipticLongitude:Y5,getGeocentricEclipticLatitude:j5,getGeocentricEclipticCoordinates:i2,getGeocentricEquatorialCoordinates:s2,getApparentGeocentricEquatorialCoordinates:vd,getRadiusVectorInKilometer:gr,radiusVectorToHorizontalParallax:Z5,horizontalParallaxToRadiusVector:Sd,getMeanLongitudeAscendingNode:K5,getMeanLongitudePerigee:Td,trueLongitudeOfAscendingNode:yd,horizontalParallax:xd,getPhaseAngle:t0,getIlluminatedFraction:Dd,getEquatorialHorizontalParallax:Ad,getGeocentricSemiDiameter:bd,getPositionAngleOfTheBrightLimb:Ed,getTimeOfMeanPhase:n0,getAge:i0,getAgeName:Rd},Ld=function(){return[[0,1,0,0,0,0,0,0,0,0,0,-1719914,-2,-25,0,25,-13,1578089,156,10,32,684185,-358],[0,2,0,0,0,0,0,0,0,0,0,6434,141,28007,-107,25697,-95,-5904,-130,11141,-48,-2559,-55],[0,0,0,1,0,0,0,0,0,0,0,715,0,0,0,6,0,-657,0,-15,0,-282,0],[0,0,0,0,0,0,0,1,0,0,0,715,0,0,0,0,0,-656,0,0,0,-285,0],[0,3,0,0,0,0,0,0,0,0,0,486,-5,-236,-4,-216,-4,-446,5,-94,0,-193,0],[0,0,0,0,1,0,0,0,0,0,0,159,0,0,0,2,0,-147,0,-6,0,-61,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,26,0,0,0,-59,0],[0,0,0,0,0,0,0,1,0,1,0,39,0,0,0,0,0,-36,0,0,0,-16,0],[0,0,0,2,0,0,0,0,0,0,0,33,0,-10,0,-9,0,-30,0,-5,0,-13,0],[0,2,0,-1,0,0,0,0,0,0,0,31,0,1,0,1,0,-28,0,0,0,-12,0],[0,3,-8,3,0,0,0,0,0,0,0,8,0,-28,0,25,0,8,0,11,0,3,0],[0,5,-8,3,0,0,0,0,0,0,0,8,0,-28,0,-25,0,-8,0,-11,0,-3,0],[2,-1,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,-19,0,0,0,-8,0],[1,0,0,0,0,0,0,0,0,0,0,-19,0,0,0,0,0,17,0,0,0,8,0],[0,0,0,0,0,1,0,0,0,0,0,17,0,0,0,0,0,-16,0,0,0,-7,0],[0,1,0,-2,0,0,0,0,0,0,0,16,0,0,0,0,0,15,0,1,0,7,0],[0,0,0,0,0,0,1,0,0,0,0,16,0,0,0,1,0,-15,0,-3,0,-6,0],[0,1,0,1,0,0,0,0,0,0,0,11,0,-1,0,-1,0,-10,0,-1,0,-5,0],[2,-2,0,0,0,0,0,0,0,0,0,0,0,-11,0,-10,0,0,0,-4,0,0,0],[0,1,0,-1,0,0,0,0,0,0,0,-11,0,-2,0,-2,0,9,0,-1,0,4,0],[0,4,0,0,0,0,0,0,0,0,0,-7,0,-8,0,-8,0,6,0,-3,0,3,0],[0,3,0,-2,0,0,0,0,0,0,0,-10,0,0,0,0,0,9,0,0,0,4,0],[1,-2,0,0,0,0,0,0,0,0,0,-9,0,0,0,0,0,-9,0,0,0,-4,0],[2,-3,0,0,0,0,0,0,0,0,0,-9,0,0,0,0,0,-8,0,0,0,-4,0],[0,0,0,0,2,0,0,0,0,0,0,0,0,-9,0,-8,0,0,0,-3,0,0,0],[2,-4,0,0,0,0,0,0,0,0,0,0,0,-9,0,8,0,0,0,3,0,0,0],[0,3,-2,0,0,0,0,0,0,0,0,8,0,0,0,0,0,-8,0,0,0,-3,0],[0,0,0,0,0,0,0,1,2,-1,0,8,0,0,0,0,0,-7,0,0,0,-3,0],[8,-12,0,0,0,0,0,0,0,0,0,-4,0,-7,0,-6,0,4,0,-3,0,2,0],[8,-14,0,0,0,0,0,0,0,0,0,-4,0,-7,0,6,0,-4,0,3,0,-2,0],[0,0,2,0,0,0,0,0,0,0,0,-6,0,-5,0,-4,0,5,0,-2,0,2,0],[3,-4,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-2,0,-7,0,1,0,-4,0],[0,2,0,-2,0,0,0,0,0,0,0,4,0,-6,0,-5,0,-4,0,-2,0,-2,0],[3,-3,0,0,0,0,0,0,0,0,0,0,0,-7,0,-6,0,0,0,-3,0,0,0],[0,2,-2,0,0,0,0,0,0,0,0,5,0,-5,0,-4,0,-5,0,-2,0,-2,0],[0,0,0,0,0,0,0,1,-2,0,0,5,0,0,0,0,0,-5,0,0,0,-2,0]].map(t=>({L2:t[0],L3:t[1],L4:t[2],L5:t[3],L6:t[4],L7:t[5],L8:t[6],Ldash:t[7],D:t[8],Mdash:t[9],F:t[10],xsin:t[11],xsint:t[12],xcos:t[13],xcost:t[14],ysin:t[15],ysint:t[16],ycos:t[17],ycost:t[18],zsin:t[19],zsint:t[20],zcos:t[21],zcost:t[22]}))};function s0(t){const e=gt(t),n=Ld(),i=3.1761467+1021.3285546*e,s=1.7534703+628.3075849*e,r=6.2034809+334.0612431*e,a=.5995465+52.9690965*e,o=.8740168+21.3299095*e,c=5.4812939+7.4781599*e,l=5.3118863+3.8133036*e,u=3.8103444+8399.6847337*e,d=5.1984667+7771.3771486*e,m=2.3555559+8328.6914289*e,h=1.6279052+8433.4661601*e;return n.reduce((f,g)=>{const p=g.L2*i+g.L3*s+g.L4*r+g.L5*a+g.L6*o+g.L7*c+g.L8*l+g.Ldash*u+g.D*d+g.Mdash*m+g.F*h;return{X:f.X+g.xsin+g.xsint*e*Math.sin(p)+g.xcos+g.xcost*e*Math.cos(p),Y:f.Y+g.ysin+g.ysint*e*Math.sin(p)+g.ycos+g.ycost*e*Math.cos(p),Z:f.Z+g.zsin+g.zsint*e*Math.sin(p)+g.zcos+g.zcost*e*Math.cos(p)}},{X:0,Y:0,Z:0})}function Pd(t,e){const n=e.rightAscension*H,i=e.declination*H,s=Math.cos(n),r=Math.sin(n),a=Math.cos(i),o=Math.sin(i),c=s0(t),l=17314463350,u=(c.Y*s-c.X*r)/(l*a),d=c.X*s+c.Y*r,m=c.Z*a,h=(d*o-m)/l;return{DeltaRightAscension:u*De*3600,DeltaDeclination:-1*h*De*3600}}function Ud(t,e){let n,i;const s=e.rightAscension*H,r=e.declination*H,a=j1(t),o=D5,c=Z1(t)*H,l=Ua(t)*H,u=cn.getGeometricEclipticLongitude(t)*H,d=Math.cos(c),m=Math.sin(c),h=Math.cos(l),f=Math.tan(l),g=Math.cos(u),p=Math.sin(u),_=Math.cos(s),D=Math.sin(s),T=Math.cos(r),S=Math.sin(r),L=_*g*h+D*p,A=_*d*h+D*m;n=-1*o*(L/T)+a*o*A/T;const w=f*T-D*S,F=g*h*w+_*S*p,y=d*h*w+_*S*m;return i=-1*o*F+a*o*y,{DeltaRightAscension:n,DeltaDeclination:i}}function Id(t,e){const n=j1(t),i=Z1(t),s=D5,r=cn.getGeometricEclipticLongitude(t)*H,a=e.longitude*H,o=e.latitude*H,c=-1*s*Math.cos(r-a),l=n*s*Math.cos(i-a),u=(c+l)/Math.cos(o)/3600,d=-1*s*Math.sin(o),m=Math.sin(r-a),h=n*Math.sin(i-a),f=d*(m-h)/3600;return{DeltaLongitude:u,DeltaLatitude:f}}function Od(t,e){const n=Pa(t)*H,i=e2(t),s=K1(t),r=e.rightAscension*H,a=e.declination*H,o=Math.cos(n),c=Math.sin(n),l=Math.cos(r),u=Math.sin(r),d=Math.tan(a),m=o+c*u*d,h=s*m-i*l*d,f=s*c*l+i*u;return{DeltaRightAscension:h,DeltaDeclination:f}}const fe={getEclipticLongitude:J5,getEclipticLongitudinalRotation:dd,getEclipticLatitude:W5,getEclipticCoordinates:fd,getRadiusVector:Q5,getFlatteningCorrections:md,getMeanAnomaly:pd,getEccentricity:j1,getLongitudeOfPerihelion:Z1,getNutationInLongitude:K1,getNutationInObliquity:e2,getMeanObliquityOfEcliptic:Pa,getTrueObliquityOfEcliptic:Ua,getEarthVelocity:s0,getAccurateAnnualEquatorialAberration:Pd,getAnnualEclipticAberration:Id,getAnnualEquatorialAberration:Ud,getNutationEquatorialAberration:Od,Moon:In},Nd=function(){return[[440250710,0,0],[40989415,1.48302034,26087.90314157],[5046294,4.4778549,52175.8062831],[855347,1.165203,78263.709425],[165590,4.119692,104351.612566],[34562,.77931,130439.51571],[7583,3.7135,156527.4188],[3560,1.512,1109.3786],[1803,4.1033,5661.332],[1726,.3583,182615.322],[1590,2.9951,25028.5212],[1365,4.5992,27197.2817],[1017,.8803,31749.2352],[714,1.541,24978.525],[644,5.303,21535.95],[451,6.05,51116.424],[404,3.282,208703.225],[352,5.242,20426.571],[345,2.792,15874.618],[343,5.765,955.6],[339,5.863,25558.212],[325,1.337,53285.185],[273,2.495,529.691],[264,3.917,57837.138],[260,.987,4551.953],[239,.113,1059.382],[235,.267,11322.664],[217,.66,13521.751],[209,2.092,47623.853],[183,2.629,27043.503],[182,2.434,25661.305],[176,4.536,51066.428],[173,2.452,24498.83],[142,3.36,37410.567],[138,.291,10213.286],[125,3.721,39609.655],[118,2.781,77204.327],[106,4.206,19804.827]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Fd=function(){return[[2608814706223,0,0],[1126008,6.2170397,26087.9031416],[303471,3.055655,52175.806283],[80538,6.10455,78263.70942],[21245,2.83532,104351.61257],[5592,5.8268,130439.5157],[1472,2.5185,156527.4188],[388,5.48,182615.322],[352,3.052,1109.379],[103,2.149,208703.225],[94,6.12,27197.28],[91,0,24978.52],[52,5.62,5661.33],[44,4.57,25028.52],[28,3.04,51066.43],[27,5.09,234791.13]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Bd=function(){return[[53050,0,0],[16904,4.69072,26087.90314],[7397,1.3474,52175.8063],[3018,4.4564,78263.7094],[1107,1.2623,104351.6126],[378,4.32,130439.516],[123,1.069,156527.419],[39,4.08,182615.32],[15,4.63,1109.38],[12,.79,208703.23]].map(t=>({A:t[0],B:t[1],C:t[2]}))},zd=function(){return[[188,.035,52175.806],[142,3.125,26087.903],[97,3,78263.71],[44,6.02,104351.61],[35,0,0],[18,2.78,130439.52],[7,5.82,156527.42],[3,2.57,182615.32]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Gd=function(){return[[114,3.1416,0],[3,2.03,26087.9],[2,1.42,78263.71],[2,4.5,52175.81],[1,4.5,104351.61],[1,1.27,130439.52]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Hd=function(){return[[1,3.14,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},kd=function(){return[[11737529,1.98357499,26087.90314157],[2388077,5.0373896,52175.8062831],[1222840,3.1415927,0],[543252,1.796444,78263.709425],[129779,4.832325,104351.612566],[31867,1.58088,130439.51571],[7963,4.6097,156527.4188],[2014,1.3532,182615.322],[514,4.378,208703.225],[209,2.02,24978.525],[208,4.918,27197.282],[132,1.119,234791.128],[121,1.813,53285.185],[100,5.657,20426.571]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Vd=function(){return[[429151,3.501698,26087.903142],[146234,3.141593,0],[22675,.01515,52175.80628],[10895,.4854,78263.70942],[6353,3.4294,104351.6126],[2496,.1605,130439.5157],[860,3.185,156527.419],[278,6.21,182615.322],[86,2.95,208703.23],[28,.29,27197.28],[26,5.98,234791.13]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Jd=function(){return[[11831,4.79066,26087.90314],[1914,0,0],[1045,1.2122,52175.8063],[266,4.434,78263.709],[170,1.623,104351.613],[96,4.8,130439.52],[45,1.61,156527.42],[18,4.67,182615.32],[7,1.43,208703.23]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Wd=function(){return[[235,.354,26087.903],[161,0,0],[19,4.36,52175.81],[6,2.51,78263.71],[5,6.14,104351.61],[3,3.12,130439.52],[2,6.27,156527.42]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Qd=function(){return[[4,1.75,26087.9],[1,3.14,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Xd=function(){return[[39528272,0,0],[7834132,6.1923372,26087.9031416],[795526,2.959897,52175.806283],[121282,6.010642,78263.709425],[21922,2.7782,104351.61257],[4354,5.8289,130439.5157],[918,2.597,156527.419],[290,1.424,25028.521],[260,3.028,27197.282],[202,5.647,182615.322],[201,5.592,31749.235],[142,6.253,24978.525],[100,3.734,21535.95]].map(t=>({A:t[0],B:t[1],C:t[2]}))},qd=function(){return[[217348,4.656172,26087.903142],[44142,1.42386,52175.80628],[10094,4.47466,78263.70942],[2433,1.2423,104351.6126],[1624,0,0],[604,4.293,130439.516],[153,1.061,156527.419],[39,4.11,182615.32]].map(t=>({A:t[0],B:t[1],C:t[2]}))},$d=function(){return[[3118,3.0823,26087.9031],[1245,6.1518,52175.8063],[425,2.926,78263.709],[136,5.98,104351.613],[42,2.75,130439.52],[22,3.14,0],[13,5.8,156527.42]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Yd=function(){return[[33,1.68,26087.9],[24,4.63,52175.81],[12,1.39,78263.71],[5,4.44,104351.61],[2,1.21,130439.52]].map(t=>({A:t[0],B:t[1],C:t[2]}))};function _r(t){const e=ft(t),n=Nd(),i=Fd(),s=Bd(),r=zd(),a=Gd(),o=Hd(),c=n.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),l=i.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),u=s.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),d=r.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),m=a.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),h=o.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),f=c+l*e+u*Math.pow(e,2)+d*Math.pow(e,3)+m*Math.pow(e,4)+h*Math.pow(e,5);return Re(f/1e8*De)}function Mr(t){const e=ft(t),n=kd(),i=Vd(),s=Jd(),r=Wd(),a=Qd(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return yn(m/1e8*De)}function Ui(t){const e=ft(t),n=Xd(),i=qd(),s=$d(),r=Yd(),a=n.reduce((u,d)=>u+d.A*Math.cos(d.B+d.C*e),0),o=i.reduce((u,d)=>u+d.A*Math.cos(d.B+d.C*e),0),c=s.reduce((u,d)=>u+d.A*Math.cos(d.B+d.C*e),0),l=r.reduce((u,d)=>u+d.A*Math.cos(d.B+d.C*e),0);return(a+o*e+c*Math.pow(e,2)+l*Math.pow(e,3))/1e8}function r0(t){return{longitude:_r(t),latitude:Mr(t)}}function jd(t,e=Ze.Mean){return ut(r0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}const Zd={equatorialRadius:2440.53,meanRadius:2439.4,mass:.330114,bulkDensity:5.4291,siderealRotationPeriod:58.6462,siderealOrbitPeriod:.2408467,visualMagnitude:-.6,geometricAlbedo:.106,equatorialGravity:3.7,escapeVelocity:4.25},Ii={semiMajorAxis:[.38709831,0,0,0],eccentricity:[.20563175,20407e-9,-283e-10,-18e-11],[he.MeanOfTheDate]:{meanLongitude:[252.250906,149474.0722491,3035e-7,18e-9],inclination:[7.004986,.0018215,-181e-7,56e-9],longitudeOfAscendingNode:[48.330893,1.1861883,17542e-8,215e-9],longitudeOfPerihelion:[77.456119,1.5564776,29544e-8,9e-9]},[he.StandardJ2000]:{meanLongitude:[252.250906,149472.6746358,-536e-8,2e-9],inclination:[7.004986,-.0059516,8e-7,43e-9],longitudeOfAscendingNode:[48.330893,-.1254227,-8833e-8,-2e-7],longitudeOfPerihelion:[77.456119,.1588643,-1342e-8,-7e-9]}};function a0(t){const e=4.15201*(ni(t)-2000.12);return e>=0?Math.floor(e):Math.ceil(e)}function Kd(t){return 2451590257e-3+87.96934963*(a0(t)+.5)}function ef(t){return 2451590257e-3+87.96934963*a0(t)}function Ma(t){return t*.0057755183}function va(t,e,n,i){const s={L:fe.getEclipticLongitude(t,he.MeanOfTheDate)*H,B:fe.getEclipticLatitude(t,he.MeanOfTheDate)*H,R:fe.getRadiusVector(t)};let r=!0,a=!1,o={L:0,B:0,R:0};const c={x:0,y:0,z:0,Delta:0,tau:0,l:0,b:0,r:0};let l=t;for(;r;){let u={L:e(l)*H,B:n(l)*H,R:i(l)};const d={L:s.L,B:s.B,R:s.R};a?(r=Math.abs(u.L-o.L)>1e-5||Math.abs(u.B-o.B)>1e-5||Math.abs(u.R-o.R)>1e-6,o={...u}):a=!0,r&&(c.x=u.R*Math.cos(u.B)*Math.cos(u.L)-d.R*Math.cos(d.B)*Math.cos(d.L),c.y=u.R*Math.cos(u.B)*Math.sin(u.L)-d.R*Math.cos(d.B)*Math.sin(d.L),c.z=u.R*Math.sin(u.B)-d.R*Math.sin(d.B),c.Delta=Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z),c.tau=Ma(c.Delta)),c.l=u.L,c.b=u.B,c.r=u.R,l=t-c.tau}return c}function Oi(t,e,n,i){return va(t,e,n,i).Delta}function ii(t,e,n,i){const s=va(t,e,n,i);return{longitude:Re(Math.atan2(s.y,s.x)*De),latitude:yn(Math.atan2(s.z,Math.sqrt(s.x*s.x+s.y*s.y))*De)}}function Ni(t,e,n,i){const s=ii(t,e,n,i),r=fe.getAnnualEclipticAberration(t,s);s.longitude=s.longitude+r.DeltaLongitude/3600,s.latitude=s.latitude+r.DeltaLatitude/3600;const a=U5(t,s.longitude,s.latitude);s.longitude=s.longitude+a;const o=I5(t,s.longitude);s.latitude=s.latitude+o;const c=fe.getNutationInLongitude(t);return s.longitude=s.longitude+c/3600,s}function Fi(t,e){return 42.1219*Math.sqrt(1/t-1/(2*e))}function Bi(t,e){return 29.7847/Math.sqrt(e)*Math.sqrt((1+t)/(1-t))}function zi(t,e){return 29.7847/Math.sqrt(e)*Math.sqrt((1-t)/(1+t))}function Gi(t,e){const n=e*Math.sqrt(1-t*t);return Math.PI*(3*(e+n)-Math.sqrt((e+3*n)*(3*e+n)))}function Hi(t,e,n){const i=wa(t),s=n(i);return N5(t,s,e,Fn)}function ki(t,e,n){const i=wa(t),s=n(i-1),r=n(i),a=n(i+1);return Fh(t,[s,r,a],e,Fn,1)}function Fs(t,e){const n=gt(t);return e[0]+e[1]*n+e[2]*n*n+e[3]*n*n*n}function Vi(t,e){return Fs(t,e)}function Ji(t,e){return Fs(t,e)}function Wi(t,e){return Fs(t,e)}function Qi(t,e){return Fs(t,e)}function Xi(t,e){return Fs(t,e)}function qi(t,e){return Fs(t,e)}function tf(t,e=he.MeanOfTheDate){return Vi(t,Ii[e].meanLongitude)}function Ia(t){return Ji(t,Ii.semiMajorAxis)}function Oa(t){return Wi(t,Ii.eccentricity)}function nf(t,e=he.MeanOfTheDate){return Qi(t,Ii[e].inclination)}function sf(t,e=he.MeanOfTheDate){return Xi(t,Ii[e].longitudeOfAscendingNode)}function rf(t,e=he.MeanOfTheDate){return qi(t,Ii[e].longitudeOfPerihelion)}function Na(t){return Oi(t,_r,Mr,Ui)}function o0(t){return ii(t,_r,Mr,Ui)}function c0(t){return Ni(t,_r,Mr,Ui)}function r2(t,e=Ze.Mean){return ut(o0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}function af(t){return ut(c0(t),fe.getTrueObliquityOfEcliptic(t))}function of(t){return Fi(Ui(t),Ia(t))}function cf(t){return Bi(Oa(t),Ia(t))}function lf(t){return zi(Oa(t),Ia(t))}function uf(t){return Gi(Oa(t),Ia(t))}function hf(t,e){return Hi(t,e,r2)}function df(t,e){return ki(t,e,r2)}function a2(t){const e=Ui(t),n=fe.getRadiusVector(t),i=Na(t);return Re(De*Math.acos((e*e+i*i-n*n)/(2*e*i)))}function ff(t){const e=a2(t)*H;return(1+Math.cos(e))/2}function pf(t){const e=Ui(t),n=Na(t),i=a2(t);return-.42+5*Math.log10(e*n)+.038*i-273e-6*Math.pow(i,2)+2e-6*Math.pow(i,3)}function l0(t){return 3.36/Na(t)}function mf(t){return l0(t)}const gf={getEclipticLongitude:_r,getEclipticLatitude:Mr,getEclipticCoordinates:r0,getEquatorialCoordinates:jd,getRadiusVector:Ui,getGeocentricDistance:Na,getGeocentricEclipticCoordinates:o0,getApparentGeocentricEclipticCoordinates:c0,getGeocentricEquatorialCoordinates:r2,getApparentGeocentricEquatorialCoordinates:af,getInstantaneousVelocity:of,getVelocityAtPerihelion:cf,getVelocityAtAphelion:lf,getLengthOfEllipse:uf,getRiseTransitSet:hf,getAccurateRiseTransitSet:df,getMeanLongitude:tf,getEccentricity:Oa,getInclination:nf,getLongitudeOfAscendingNode:sf,getLongitudeOfPerihelion:rf,getAphelion:Kd,getPerihelion:ef,getPhaseAngle:a2,getIlluminatedFraction:ff,getMagnitude:pf,getEquatorialSemiDiameter:l0,getPolarSemiDiameter:mf,constants:Zd,orbitalElements:Ii},_f=function(){return[[317614667,0,0],[1353968,5.5931332,10213.2855462],[89892,5.3065,20426.57109],[5477,4.4163,7860.4194],[3456,2.6996,11790.6291],[2372,2.9938,3930.2097],[1664,4.2502,1577.3435],[1438,4.1575,9683.5946],[1317,5.1867,26.2983],[1201,6.1536,30639.8566],[769,.816,9437.763],[761,1.95,529.691],[708,1.065,775.523],[585,3.998,191.448],[500,4.123,15720.839],[429,3.586,19367.189],[327,5.677,5507.553],[326,4.591,10404.734],[232,3.163,9153.904],[180,4.653,1109.379],[155,5.57,19651.048],[128,4.226,20.775],[128,.962,5661.332],[106,1.537,801.821]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Mf=function(){return[[0xedcd611dcd,0,0],[95708,2.46424,10213.28555],[14445,.51625,20426.57109],[213,1.795,30639.857],[174,2.655,26.298],[152,6.106,1577.344],[82,5.7,191.45],[70,2.68,9437.76],[52,3.6,775.52],[38,1.03,529.69],[30,1.25,5507.55],[25,6.11,10404.73]].map(t=>({A:t[0],B:t[1],C:t[2]}))},vf=function(){return[[54127,0,0],[3891,.3451,10213.2855],[1338,2.0201,20426.5711],[24,2.05,26.3],[19,3.54,30639.86],[10,3.97,775.52],[7,1.52,1577.34],[6,1,191.45]].map(t=>({A:t[0],B:t[1],C:t[2]}))},xf=function(){return[[136,4.804,10213.286],[78,3.67,20426.57],[26,0,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Sf=function(){return[[114,3.1416,0],[3,5.21,20426.57],[2,2.51,10213.29]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Tf=function(){return[[1,3.14,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},yf=function(){return[[5923638,.2670278,10213.2855462],[40108,1.14737,20426.57109],[32815,3.14159,0],[1011,1.0895,30639.8566],[149,6.254,18073.705],[138,.86,1577.344],[130,3.672,9437.763],[120,3.705,2352.866],[108,4.539,22003.915]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Ef=function(){return[[513348,1.803643,10213.285546],[4380,3.3862,20426.5711],[199,0,0],[197,2.53,30639.857]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Df=function(){return[[22378,3.38509,10213.28555],[282,0,0],[173,5.256,20426.571],[27,3.87,30639.86]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Af=function(){return[[647,4.992,10213.286],[20,3.14,0],[6,.77,20426.57],[3,5.44,30639.86]].map(t=>({A:t[0],B:t[1],C:t[2]}))},bf=function(){return[[14,.32,10213.29]].map(t=>({A:t[0],B:t[1],C:t[2]}))},wf=function(){return[[72334821,0,0],[489824,4.021518,10213.285546],[1658,4.9021,20426.5711],[1632,2.8455,7860.4194],[1378,1.1285,11790.6291],[498,2.587,9683.595],[374,1.423,3930.21],[264,5.529,9437.763],[237,2.551,15720.839],[222,2.013,19367.189],[126,2.728,1577.344],[119,3.02,10404.734]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Cf=function(){return[[34551,.89199,10213.28555],[234,1.772,20426.571],[234,3.142,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Rf=function(){return[[1407,5.0637,10213.2855],[16,5.47,20426.57],[13,0,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Lf=function(){return[[50,3.22,10213.29]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Pf=function(){return[[1,.92,10213.29]].map(t=>({A:t[0],B:t[1],C:t[2]}))};function vr(t){const e=ft(t),n=_f(),i=Mf(),s=vf(),r=xf(),a=Sf(),o=Tf(),c=n.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),l=i.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),u=s.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),d=r.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),m=a.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),h=o.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),f=c+l*e+u*Math.pow(e,2)+d*Math.pow(e,3)+m*Math.pow(e,4)+h*Math.pow(e,5);return Re(f/1e8*De)}function xr(t){const e=ft(t),n=yf(),i=Ef(),s=Df(),r=Af(),a=bf(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return yn(m/1e8*De)}function $i(t){const e=ft(t),n=wf(),i=Cf(),s=Rf(),r=Lf(),a=Pf(),o=n.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),c=i.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),l=s.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),u=r.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),d=a.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0);return(o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4))/1e8}function u0(t){return{longitude:vr(t),latitude:xr(t)}}function Uf(t,e=Ze.Mean){return ut(u0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}const If={equatorialRadius:6051.8,meanRadius:6051.8,mass:4.86747,bulkDensity:5.243,siderealRotationPeriod:-243.018,siderealOrbitPeriod:.61519726,visualMagnitude:-4.47,geometricAlbedo:.65,equatorialGravity:8.87,escapeVelocity:10.36},Yi={semiMajorAxis:[.72332982,0,0,0],eccentricity:[.00677192,-47765e-9,981e-10,46e-11],[he.MeanOfTheDate]:{meanLongitude:[181.979801,58519.2130302,31014e-8,15e-9],inclination:[3.394662,.0010037,-88e-8,-7e-9],longitudeOfAscendingNode:[76.67992,.9011206,40618e-8,-93e-9],longitudeOfPerihelion:[131.563703,1.4022288,-.00107618,-5678e-9]},[he.StandardJ2000]:{meanLongitude:[181.979801,58517.815676,165e-8,-2e-9],inclination:[3.394662,-8568e-7,-3244e-8,9e-8],longitudeOfAscendingNode:[76.67992,-.2780134,-14257e-8,-164e-9],longitudeOfPerihelion:[131.563703,.0048746,-.00138467,-5695e-9]}};function h0(t){const e=1.62549*(ni(t)-2000.53);return e>=0?Math.floor(e):Math.ceil(e)}function Of(t){const e=h0(t)+.5;return 2451738233e-3+224.7008188*e-327e-10*Math.pow(e,2)}function Nf(t){const e=h0(t);return 2451738233e-3+224.7008188*e-327e-10*Math.pow(e,2)}function Ff(t,e=he.MeanOfTheDate){return Vi(t,Yi[e].meanLongitude)}function Fa(t){return Ji(t,Yi.semiMajorAxis)}function Ba(t){return Wi(t,Yi.eccentricity)}function Bf(t,e=he.MeanOfTheDate){return Qi(t,Yi[e].inclination)}function zf(t,e=he.MeanOfTheDate){return Xi(t,Yi[e].longitudeOfAscendingNode)}function Gf(t,e=he.MeanOfTheDate){return qi(t,Yi[e].longitudeOfPerihelion)}function za(t){return Oi(t,vr,xr,$i)}function d0(t){return ii(t,vr,xr,$i)}function f0(t){return Ni(t,vr,xr,$i)}function o2(t,e=Ze.Mean){return ut(d0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}function Hf(t){return ut(f0(t),fe.getTrueObliquityOfEcliptic(t))}function kf(t){return Fi($i(t),Fa(t))}function Vf(t){return Bi(Ba(t),Fa(t))}function Jf(t){return zi(Ba(t),Fa(t))}function Wf(t){return Gi(Ba(t),Fa(t))}function Qf(t,e){return Hi(t,e,o2)}function Xf(t,e){return ki(t,e,o2)}function c2(t){const e=$i(t),n=fe.getRadiusVector(t),i=za(t);return Re(De*Math.acos((e*e+i*i-n*n)/(2*e*i)))}function qf(t){const e=c2(t)*H;return(1+Math.cos(e))/2}function $f(t){const e=$i(t),n=za(t),i=c2(t);return-4.4+5*Math.log10(e*n)+9e-4*i+239e-6*Math.pow(i,2)-65e-8*Math.pow(i,3)}function p0(t){return 8.34/za(t)}function Yf(t){return p0(t)}const jf={getEclipticLongitude:vr,getEclipticLatitude:xr,getEclipticCoordinates:u0,getEquatorialCoordinates:Uf,getRadiusVector:$i,getGeocentricDistance:za,getGeocentricEclipticCoordinates:d0,getApparentGeocentricEclipticCoordinates:f0,getGeocentricEquatorialCoordinates:o2,getApparentGeocentricEquatorialCoordinates:Hf,getInstantaneousVelocity:kf,getVelocityAtPerihelion:Vf,getVelocityAtAphelion:Jf,getLengthOfEllipse:Wf,getRiseTransitSet:Qf,getAccurateRiseTransitSet:Xf,getMeanLongitude:Ff,getEccentricity:Ba,getInclination:Bf,getLongitudeOfAscendingNode:zf,getLongitudeOfPerihelion:Gf,getAphelion:Of,getPerihelion:Nf,getPhaseAngle:c2,getIlluminatedFraction:qf,getMagnitude:$f,getEquatorialSemiDiameter:p0,getPolarSemiDiameter:Yf,constants:If,orbitalElements:Yi},Zf=function(){return[[620347712,0,0],[18656368,5.050371,3340.6124267],[1108217,5.4009984,6681.2248534],[91798,5.75479,10021.83728],[27745,5.9705,3.52312],[12316,.84956,2810.92146],[10610,2.93959,2281.2305],[8927,4.157,.0173],[8716,6.1101,13362.4497],[7775,3.3397,5621.8429],[6798,.3646,398.149],[4161,.2281,2942.4634],[3575,1.6619,2544.3144],[3075,.857,191.4483],[2938,6.0789,.0673],[2628,.6481,3337.0893],[2580,.03,3344.1355],[2389,5.039,796.298],[1799,.6563,529.691],[1546,2.9158,1751.5395],[1528,1.1498,6151.5339],[1286,3.068,2146.1654],[1264,3.6228,5092.152],[1025,3.6933,8962.4553],[892,.183,16703.062],[859,2.401,2914.014],[833,4.495,3340.63],[833,2.464,3340.595],[749,3.822,155.42],[724,.675,3738.761],[713,3.663,1059.382],[655,.489,3127.313],[636,2.922,8432.764],[553,4.475,1748.016],[550,3.81,.98],[472,3.625,1194.447],[426,.554,6283.076],[415,.497,213.299],[312,.999,6677.702],[307,.381,6684.748],[302,4.486,3532.061],[299,2.783,6254.627],[293,4.221,20.775],[284,5.769,3149.164],[281,5.882,1349.867],[274,.542,3340.545],[274,.134,3340.68],[239,5.372,4136.91],[236,5.755,3333.499],[231,1.282,3870.303],[221,3.505,382.897],[204,2.821,1221.849],[193,3.357,3.59],[189,1.491,9492.146],[179,1.006,951.718],[174,2.414,553.569],[172,.439,5486.778],[160,3.949,4562.461],[144,1.419,135.065],[140,3.326,2700.715],[138,4.301,7.114],[131,4.045,12303.068],[128,2.208,1592.596],[128,1.807,5088.629],[117,3.128,7903.073],[113,3.701,1589.073],[110,1.052,242.729],[105,.785,8827.39],[100,3.243,11773.377]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Kf=function(){return[[334085627474,0,0],[1458227,3.6042605,3340.6124267],[164901,3.926313,6681.224853],[19963,4.26594,10021.83728],[3452,4.7321,3.5231],[2485,4.6128,13362.4497],[842,4.459,2281.23],[538,5.016,398.149],[521,4.994,3344.136],[433,2.561,191.448],[430,5.316,155.42],[382,3.539,796.298],[314,4.963,16703.062],[283,3.16,2544.314],[206,4.569,2146.165],[169,1.329,3337.089],[158,4.185,1751.54],[134,2.233,.98],[134,5.974,1748.016],[118,6.024,6151.534],[117,2.213,1059.382],[114,2.129,1194.447],[114,5.428,3738.761],[91,1.1,1349.87],[85,3.91,553.57],[83,5.3,6684.75],[81,4.43,529.69],[80,2.25,8962.46],[73,2.5,951.72],[73,5.84,242.73],[71,3.86,2914.01],[68,5.02,382.9],[65,1.02,3340.6],[65,3.05,3340.63],[62,4.15,3149.16],[57,3.89,4136.91],[48,4.87,213.3],[48,1.18,3333.5],[47,1.31,3185.19],[41,.71,1592.6],[40,2.73,7.11],[40,5.32,20043.67],[33,5.41,6283.08],[28,.05,9492.15],[27,3.89,1221.85],[27,5.11,2700.72]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ep=function(){return[[58016,2.04979,3340.61243],[54188,0,0],[13908,2.45742,6681.22485],[2465,2.8,10021.8373],[398,3.141,13362.45],[222,3.194,3.523],[121,.543,155.42],[62,3.49,16703.06],[54,3.54,3344.14],[34,6,2281.23],[32,4.14,191.45],[30,2,796.3],[23,4.33,242.73],[22,3.45,398.15],[20,5.42,553.57],[16,.66,.98],[16,6.11,2146.17],[16,1.22,1748.02],[15,6.1,3185.19],[14,4.02,951.72],[14,2.62,1349.87],[13,.6,1194.45],[12,3.86,6684.75],[11,4.72,2544.31],[10,.25,382.9],[9,.68,1059.38],[9,3.83,20043.67],[9,3.88,3738.76],[8,5.46,1751.54],[7,2.58,3149.16],[7,2.38,4136.91],[6,5.48,1592.6],[6,2.34,3097.88]].map(t=>({A:t[0],B:t[1],C:t[2]}))},tp=function(){return[[1482,.4443,3340.6124],[662,.885,6681.225],[188,1.288,10021.837],[41,1.65,13362.45],[26,0,0],[23,2.05,155.42],[10,1.58,3.52],[8,2,16703.06],[5,2.82,242.73],[4,2.02,3344.14],[3,4.59,3185.19],[3,.65,553.57]].map(t=>({A:t[0],B:t[1],C:t[2]}))},np=function(){return[[114,3.1416,0],[29,5.64,6681.22],[24,5.14,3340.61],[11,6.03,10021.84],[3,.13,13362.45],[3,3.56,155.42],[1,.49,16703.06],[1,1.32,242.73]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ip=function(){return[[1,3.14,0],[1,4.04,6681.22]].map(t=>({A:t[0],B:t[1],C:t[2]}))},sp=function(){return[[3197135,3.7683204,3340.6124267],[298033,4.10617,6681.224853],[289105,0,0],[31366,4.44651,10021.83728],[3484,4.7881,13362.4497],[443,5.026,3344.136],[443,5.652,3337.089],[399,5.131,16703.062],[293,3.793,2281.23],[182,6.136,6151.534],[163,4.264,529.691],[160,2.232,1059.382],[149,2.165,5621.843],[143,1.182,3340.595],[143,3.213,3340.63],[139,2.418,8962.455]].map(t=>({A:t[0],B:t[1],C:t[2]}))},rp=function(){return[[350069,5.368478,3340.612427],[14116,3.14159,0],[9671,5.4788,6681.2249],[1472,3.2021,10021.8373],[426,3.408,13362.45],[102,.776,3337.089],[79,3.72,16703.06],[33,3.46,5621.84],[26,2.48,2281.23]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ap=function(){return[[16727,.60221,3340.61243],[4987,3.1416,0],[302,5.559,6681.225],[26,1.9,13362.45],[21,.92,10021.84],[12,2.24,3337.09],[8,2.25,16703.06]].map(t=>({A:t[0],B:t[1],C:t[2]}))},op=function(){return[[607,1.981,3340.612],[43,0,0],[14,1.8,6681.22],[3,3.45,10021.84]].map(t=>({A:t[0],B:t[1],C:t[2]}))},cp=function(){return[[13,0,0],[11,3.46,3340.61],[1,.5,6681.22]].map(t=>({A:t[0],B:t[1],C:t[2]}))},lp=function(){return[[153033488,0,0],[14184953,3.47971284,3340.6124267],[660776,3.817834,6681.224853],[46179,4.15595,10021.83728],[8110,5.5596,2810.9215],[7485,1.7724,5621.8429],[5523,1.3644,2281.2305],[3825,4.4941,13362.4497],[2484,4.9255,2942.4634],[2307,.0908,2544.3144],[1999,5.3606,3337.0893],[1960,4.7425,3344.1355],[1167,2.1126,5092.152],[1103,5.0091,398.149],[992,5.839,6151.534],[899,4.408,529.691],[807,2.102,1059.382],[798,3.448,796.298],[741,1.499,2146.165],[726,1.245,8432.764],[692,2.134,8962.455],[633,.894,3340.595],[633,2.924,3340.63],[630,1.287,1751.54],[574,.829,2914.014],[526,5.383,3738.761],[473,5.199,3127.313],[348,4.832,16703.062],[284,2.907,3532.061],[280,5.257,6283.076],[276,1.218,6254.627],[275,2.908,1748.016],[270,3.764,5884.927],[239,2.037,1194.447],[234,5.105,5486.778],[228,3.255,6872.673],[223,4.199,3149.164],[219,5.583,191.448],[208,5.255,3340.545],[208,4.846,3340.68],[186,5.699,6677.702],[183,5.081,6684.748],[179,4.184,3333.499],[176,5.953,3870.303],[164,3.799,4136.91]].map(t=>({A:t[0],B:t[1],C:t[2]}))},up=function(){return[[1107433,2.0325052,3340.6124267],[103176,2.370718,6681.224853],[12877,0,0],[10816,2.70888,10021.83728],[1195,3.047,13362.4497],[439,2.888,2281.23],[396,3.423,3344.136],[183,1.584,2544.314],[136,3.385,16703.062],[128,6.043,3337.089],[128,.63,1059.382],[127,1.954,796.298],[118,2.998,2146.165],[88,3.42,398.15],[83,3.86,3738.76],[76,4.45,6151.53],[72,2.76,529.69],[67,2.55,1751.54],[66,4.41,1748.02],[58,.54,1194.45],[54,.68,8962.46],[51,3.73,6684.75],[49,5.73,3340.6],[49,1.48,3340.63],[48,2.58,3149.16],[48,2.29,2914.01],[39,2.32,4136.91]].map(t=>({A:t[0],B:t[1],C:t[2]}))},hp=function(){return[[44242,.47931,3340.61243],[8138,.87,6681.2249],[1275,1.2259,10021.8373],[187,1.573,13362.45],[52,3.14,0],[41,1.97,3344.14],[27,1.92,16703.06],[18,4.43,2281.23],[12,4.53,3185.19],[10,5.39,1059.38],[10,.42,796.3]].map(t=>({A:t[0],B:t[1],C:t[2]}))},dp=function(){return[[1113,5.1499,3340.6124],[424,5.613,6681.225],[100,5.997,10021.837],[20,.08,13362.45],[5,3.14,0],[3,.43,16703.06]].map(t=>({A:t[0],B:t[1],C:t[2]}))},fp=function(){return[[20,3.58,3340.61],[16,4.05,6681.22],[6,4.46,10021.84],[2,4.84,13362.45]].map(t=>({A:t[0],B:t[1],C:t[2]}))};function Bs(t){const e=ft(t),n=Zf(),i=Kf(),s=ep(),r=tp(),a=np(),o=ip(),c=n.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),l=i.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),u=s.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),d=r.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),m=a.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),h=o.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),f=c+l*e+u*Math.pow(e,2)+d*Math.pow(e,3)+m*Math.pow(e,4)+h*Math.pow(e,5);return Re(f/1e8*De)}function zs(t){const e=ft(t),n=sp(),i=rp(),s=ap(),r=op(),a=cp(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return yn(m/1e8*De)}function si(t){const e=ft(t),n=lp(),i=up(),s=hp(),r=dp(),a=fp(),o=n.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),c=i.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),l=s.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),u=r.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),d=a.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0);return(o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4))/1e8}function m0(t){return{longitude:Bs(t),latitude:zs(t)}}function pp(t,e=Ze.Mean){return ut(m0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}const mp={equatorialRadius:3396.19,meanRadius:3389.5,mass:.641712,bulkDensity:3.9341,siderealRotationPeriod:1.02595676,siderealOrbitPeriod:1.8808476,visualMagnitude:-1.52,geometricAlbedo:.15,equatorialGravity:3.71,escapeVelocity:5.03},ji={semiMajorAxis:[1.523679342,0,0,0],eccentricity:[.09340065,90484e-9,-806e-10,-25e-11],[he.MeanOfTheDate]:{meanLongitude:[355.433,19141.6964471,31052e-8,16e-9],inclination:[1.849726,-6011e-7,1276e-8,-7e-9],longitudeOfAscendingNode:[49.558093,.7720959,1557e-8,2267e-9],longitudeOfPerihelion:[336.060234,1.8410449,13477e-8,536e-9]},[he.StandardJ2000]:{meanLongitude:[355.433,19140.2993039,262e-8,-3e-9],inclination:[1.849726,-.0081477,-2255e-8,-29e-8],longitudeOfAscendingNode:[49.558093,-.295025,-64048e-8,-1964e-9],longitudeOfPerihelion:[336.060234,.4439016,-17313e-8,518e-9]}};function g0(t){const e=.53166*(ni(t)-2001.78);return e>=0?Math.floor(e):Math.ceil(e)}function gp(t){const e=g0(t)+.5;return 2452195026e-3+686.9957857*e-1187e-10*Math.pow(e,2)}function _p(t){const e=g0(t);return 2452195026e-3+686.9957857*e-1187e-10*Math.pow(e,2)}function Mp(t,e=he.MeanOfTheDate){return Vi(t,ji[e].meanLongitude)}function Ga(t){return Ji(t,ji.semiMajorAxis)}function Ha(t){return Wi(t,ji.eccentricity)}function vp(t,e=he.MeanOfTheDate){return Qi(t,ji[e].inclination)}function xp(t,e=he.MeanOfTheDate){return Xi(t,ji[e].longitudeOfAscendingNode)}function Sp(t,e=he.MeanOfTheDate){return qi(t,ji[e].longitudeOfPerihelion)}function ka(t){return Oi(t,Bs,zs,si)}function _0(t){return ii(t,Bs,zs,si)}function M0(t){return Ni(t,Bs,zs,si)}function l2(t,e=Ze.Mean){return ut(_0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}function Tp(t){return ut(M0(t),fe.getTrueObliquityOfEcliptic(t))}function yp(t){return Fi(si(t),Ga(t))}function Ep(t){return Bi(Ha(t),Ga(t))}function Dp(t){return zi(Ha(t),Ga(t))}function Ap(t){return Gi(Ha(t),Ga(t))}function bp(t,e){return Hi(t,e,l2)}function wp(t,e){return ki(t,e,l2)}function u2(t){const e=si(t),n=fe.getRadiusVector(t),i=ka(t);return Re(De*Math.acos((e*e+i*i-n*n)/(2*e*i)))}function Cp(t){const e=u2(t)*H;return(1+Math.cos(e))/2}function Rp(t){const e=si(t),n=ka(t),i=u2(t);return-1.52+5*Math.log10(e*n)+.016*i}function v0(t){return 4.68/ka(t)}function Lp(t){return v0(t)}function x0(t){const e=gt(t),n=(352.9065+1.1733*e)*H,i=(63.2818-.00394*e)*H,s=fe.getEclipticLongitude(t)*H,r=fe.getEclipticLatitude(t)*H,a=fe.getRadiusVector(t);let o=0,c=0,l=0,u=0,d=0,m=!0,h=0,f=0,g=0,p=0;for(;m;){let T=t-c;f=Bs(T)*H,g=zs(T)*H,p=si(T),l=p*Math.cos(g)*Math.cos(f)-a*Math.cos(s),u=p*Math.cos(g)*Math.sin(f)-a*Math.sin(s),d=p*Math.sin(g)-a*Math.sin(r),h=Math.sqrt(l*l+u*u+d*d),c=Ma(h),m=Math.abs(c-o)>2e-6,m&&(o=c)}const _=Math.atan2(u,l),D=Math.atan2(d,Math.sqrt(l*l+u*u));return{T:e,Lambda0:n,Beta0:i,lambda:_,beta:D,l:f,b:g,r:p,Delta:h}}function Pp(t){const{Lambda0:e,Beta0:n,lambda:i,beta:s}=x0(t),r=-1*Math.sin(n)*Math.sin(s),a=Math.cos(n)*Math.cos(s)*Math.cos(e-i);return Math.asin(r-a)*De}function Up(t){const{T:e,Lambda0:n,Beta0:i,l:s,b:r,r:a}=x0(t),o=49.5581+.7721*e,[c,l]=[s*De,r*De],u=c-.00697/a,d=l-225e-6*Math.cos((c-o)*H)/a,m=-1*Math.sin(i)*Math.sin(d*H),h=Math.cos(i)*Math.cos(d*H)*Math.cos(n-u*H);return Math.asin(m-h)*De}const Ip={getEclipticLongitude:Bs,getEclipticLatitude:zs,getEclipticCoordinates:m0,getEquatorialCoordinates:pp,getRadiusVector:si,getGeocentricDistance:ka,getGeocentricEclipticCoordinates:_0,getApparentGeocentricEclipticCoordinates:M0,getGeocentricEquatorialCoordinates:l2,getApparentGeocentricEquatorialCoordinates:Tp,getInstantaneousVelocity:yp,getVelocityAtPerihelion:Ep,getVelocityAtAphelion:Dp,getLengthOfEllipse:Ap,getRiseTransitSet:bp,getAccurateRiseTransitSet:wp,getMeanLongitude:Mp,getEccentricity:Ha,getInclination:vp,getLongitudeOfAscendingNode:xp,getLongitudeOfPerihelion:Sp,getAphelion:gp,getPerihelion:_p,getPhaseAngle:u2,getIlluminatedFraction:Cp,getMagnitude:Rp,getEquatorialSemiDiameter:v0,getPolarSemiDiameter:Lp,getPlanetocentricDeclinationOfTheSun:Up,getPlanetocentricDeclinationOfTheEarth:Pp,constants:mp,orbitalElements:ji},Op=function(){return[[59954691,0,0],[9695899,5.0619179,529.6909651],[573610,1.444062,7.113547],[306389,5.417347,1059.38193],[97178,4.14265,632.78374],[72903,3.64043,522.57742],[64264,3.41145,103.09277],[39806,2.29377,419.48464],[38858,1.27232,316.39187],[27965,1.78455,536.80451],[13590,5.77481,1589.0729],[8769,3.63,949.1756],[8246,3.5823,206.1855],[7368,5.081,735.8765],[6263,.025,213.2991],[6114,4.5132,1162.4747],[5305,4.1863,1052.2684],[5305,1.3067,14.2271],[4905,1.3208,110.2063],[4647,4.6996,3.9322],[3045,4.3168,426.5982],[2610,1.5667,846.0828],[2028,1.0638,3.1814],[1921,.9717,639.8973],[1765,2.1415,1066.4955],[1723,3.8804,1265.5675],[1633,3.582,515.4639],[1432,4.2968,625.6702],[973,4.098,95.979],[884,2.437,412.371],[733,6.085,838.969],[731,3.806,1581.959],[709,1.293,742.99],[692,6.134,2118.764],[614,4.109,1478.867],[582,4.54,309.278],[495,3.756,323.505],[441,2.958,454.909],[417,1.036,2.448],[390,4.897,1692.166],[376,4.703,1368.66],[341,5.715,533.623],[330,4.74,.048],[262,1.877,.963],[261,.82,380.128],[257,3.724,199.072],[244,5.22,728.763],[235,1.227,909.819],[220,1.651,543.918],[207,1.855,525.759],[202,1.807,1375.774],[197,5.293,1155.361],[175,3.73,942.062],[175,3.226,1898.351],[175,5.91,956.289],[158,4.365,1795.258],[151,3.906,74.782],[149,4.377,1685.052],[141,3.136,491.558],[138,1.318,1169.588],[131,4.169,1045.155],[117,2.5,1596.186],[117,3.389,.521],[106,4.554,526.51]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Np=function(){return[[52993480757,0,0],[489741,4.220667,529.690965],[228919,6.026475,7.113547],[27655,4.57266,1059.38193],[20721,5.45939,522.57742],[12106,.16986,536.80451],[6068,4.4242,103.0928],[5434,3.9848,419.4846],[4238,5.8901,14.2271],[2212,5.2677,206.1855],[1746,4.9267,1589.0729],[1296,5.5513,3.1814],[1173,5.8565,1052.2684],[1163,.5145,3.9322],[1099,5.307,515.4639],[1007,.4648,735.8765],[1004,3.1504,426.5982],[848,5.758,110.206],[827,4.803,213.299],[816,.586,1066.495],[725,5.518,639.897],[568,5.989,625.67],[474,4.132,412.371],[413,5.737,95.979],[345,4.242,632.784],[336,3.732,1162.475],[234,4.035,949.176],[234,6.243,309.278],[199,1.505,838.969],[195,2.219,323.505],[187,6.086,742.99],[184,6.28,543.918],[171,5.417,199.072],[131,.626,728.763],[115,.68,846.083],[115,5.286,2118.764],[108,4.493,956.289],[80,5.82,1045.15],[72,5.34,942.06],[70,5.97,532.87],[67,5.73,21.34],[66,.13,526.51],[65,6.09,1581.96],[59,.59,1155.36],[58,.99,1596.19],[57,5.97,1169.59],[57,1.41,533.62],[55,5.43,10.29],[52,5.73,117.32],[52,.23,1368.66],[50,6.08,525.76],[47,3.63,1478.87],[47,.51,1265.57],[40,4.16,1692.17],[34,.1,302.16],[33,5.04,220.41],[32,5.37,508.35],[29,5.42,1272.68],[29,3.36,4.67],[29,.76,88.87],[25,1.61,831.86]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Fp=function(){return[[47234,4.32148,7.11355],[38966,0,0],[30629,2.93021,529.69097],[3189,1.055,522.5774],[2729,4.8455,536.8045],[2723,3.4141,1059.3819],[1721,4.1873,14.2271],[383,5.768,419.485],[378,.76,515.464],[367,6.055,103.093],[337,3.786,3.181],[308,.694,206.186],[218,3.814,1589.073],[199,5.34,1066.495],[197,2.484,3.932],[156,1.406,1052.268],[146,3.814,639.897],[142,1.634,426.598],[130,5.837,412.371],[117,1.414,625.67],[97,4.03,110.21],[91,1.11,95.98],[87,2.52,632.78],[79,4.64,543.92],[72,2.22,735.88],[58,.83,199.07],[57,3.12,213.3],[49,1.67,309.28],[40,4.02,21.34],[40,.62,323.51],[36,2.33,728.76],[29,3.61,10.29],[28,3.24,838.97],[26,4.5,742.99],[26,2.51,1162.47],[25,1.22,1045.15],[24,3.01,956.29],[19,4.29,532.87],[18,.81,508.35],[17,4.2,2118.76],[17,1.83,526.51],[15,5.81,1596.19],[15,.68,942.06],[15,4,117.32],[14,5.95,316.39],[14,1.8,302.16],[13,2.52,88.87],[13,4.37,1169.59],[11,4.44,525.76],[10,1.72,1581.96],[9,2.18,1155.36],[9,3.29,220.41],[9,3.32,831.86],[8,5.76,846.08],[8,2.71,533.62],[7,2.18,1265.57],[6,.5,949.18]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Bp=function(){return[[6502,2.5986,7.1135],[1357,1.3464,529.691],[471,2.475,14.227],[417,3.245,536.805],[353,2.974,522.577],[155,2.076,1059.382],[87,2.51,515.46],[44,0,0],[34,3.83,1066.5],[28,2.45,206.19],[24,1.28,412.37],[23,2.98,543.92],[20,2.1,639.9],[20,1.4,419.48],[19,1.59,103.09],[17,2.3,21.34],[17,2.6,1589.07],[16,3.15,625.67],[16,3.36,1052.27],[13,2.76,95.98],[13,2.54,199.07],[13,6.27,426.6],[9,1.76,10.29],[9,2.27,110.21],[7,3.43,309.28],[7,4.04,728.76],[6,2.52,508.35],[5,2.91,1045.15],[5,5.25,323.51],[4,4.3,88.87],[4,3.52,302.16],[4,4.09,735.88],[3,1.43,956.29],[3,4.36,1596.19],[3,1.25,213.3],[3,5.02,838.97],[3,2.24,117.32],[2,2.9,742.99],[2,2.36,942.06]].map(t=>({A:t[0],B:t[1],C:t[2]}))},zp=function(){return[[669,.853,7.114],[114,3.142,0],[100,.743,14.227],[50,1.65,536.8],[44,5.82,529.69],[32,4.86,522.58],[15,4.29,515.46],[9,.71,1059.38],[5,1.3,543.92],[4,2.32,1066.5],[4,.48,21.34],[3,3,412.37],[2,.4,639.9],[2,4.26,199.07],[2,4.91,625.67],[2,4.26,206.19],[1,5.26,1052.27],[1,4.72,95.98],[1,1.29,1589.07]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Gp=function(){return[[50,5.26,7.11],[16,5.25,14.23],[4,.01,536.8],[2,1.1,522.58],[1,3.14,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Hp=function(){return[[2268616,3.5585261,529.6909651],[110090,0,0],[109972,3.908093,1059.38193],[8101,3.6051,522.5774],[6438,.3063,536.8045],[6044,4.2588,1589.0729],[1107,2.9853,1162.4747],[944,1.675,426.598],[942,2.936,1052.268],[894,1.754,7.114],[836,5.179,103.093],[767,2.155,632.784],[684,3.678,213.299],[629,.643,1066.495],[559,.014,846.083],[532,2.703,110.206],[464,1.173,949.176],[431,2.608,419.485],[351,4.611,2118.764],[132,4.778,742.99],[123,3.35,1692.166],[116,1.387,323.505],[115,5.049,316.392],[104,3.701,515.464],[103,2.319,1478.867],[102,3.153,1581.959]].map(t=>({A:t[0],B:t[1],C:t[2]}))},kp=function(){return[[177352,5.701665,529.690965],[3230,5.7794,1059.3819],[3081,5.4746,522.5774],[2212,4.7348,536.8045],[1694,3.1416,0],[346,4.746,1052.268],[234,5.189,1066.495],[196,6.186,7.114],[150,3.927,1589.073],[114,3.439,632.784],[97,2.91,949.18],[82,5.08,1162.47],[77,2.51,103.09],[77,.61,419.48],[74,5.5,515.46],[61,5.45,213.3],[50,3.95,735.88],[46,.54,110.21],[45,1.9,846.08],[37,4.7,543.92],[36,6.11,316.39],[32,4.92,1581.96]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Vp=function(){return[[8094,1.4632,529.691],[813,3.1416,0],[742,.957,522.577],[399,2.899,536.805],[342,1.447,1059.382],[74,.41,1052.27],[46,3.48,1066.5],[30,1.93,1589.07],[29,.99,515.46],[23,4.27,7.11],[14,2.92,543.92],[12,5.22,632.78],[11,4.88,949.18],[6,6.21,1045.15]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Jp=function(){return[[252,3.381,529.691],[122,2.733,522.577],[49,1.04,536.8],[11,2.31,1052.27],[8,2.77,515.46],[7,4.25,1059.38],[6,1.78,1066.5],[4,1.13,543.92],[3,3.14,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Wp=function(){return[[15,4.53,522.58],[5,4.47,529.69],[4,5.44,536.8],[3,0,0],[2,4.52,515.46],[1,4.2,1052.27]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Qp=function(){return[[520887429,0,0],[25209327,3.4910864,529.69096509],[610600,3.841154,1059.38193],[282029,2.574199,632.783739],[187647,2.075904,522.577418],[86793,.71001,419.48464],[72063,.21466,536.80451],[65517,5.97996,316.39187],[30135,2.16132,949.17561],[29135,1.67759,103.09277],[23947,.27458,7.11355],[23453,3.54023,735.87651],[22284,4.19363,1589.0729],[13033,2.96043,1162.4747],[12749,2.7155,1052.26838],[9703,1.9067,206.1855],[9161,4.4135,213.2991],[7895,2.4791,426.5982],[7058,2.1818,1265.5675],[6138,6.2642,846.0828],[5477,5.6573,639.8973],[4170,2.0161,515.4639],[4137,2.7222,625.6702],[3503,.5653,1066.4955],[2617,2.0099,1581.9593],[2500,4.5518,838.9693],[2128,6.1275,742.9901],[1912,.8562,412.3711],[1611,3.0887,1368.6603],[1479,2.6803,1478.8666],[1231,1.8904,323.5054],[1217,1.8017,110.2063],[1015,1.3867,454.9094],[999,2.872,309.278],[961,4.549,2118.764],[886,4.148,533.623],[821,1.593,1898.351],[812,5.941,909.819],[777,3.677,728.763],[727,3.988,1155.361],[655,2.791,1685.052],[654,3.382,1692.166],[621,4.823,956.289],[615,2.276,942.062],[562,.081,543.918],[542,.284,525.759]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Xp=function(){return[[1271802,2.6493751,529.6909651],[61662,3.00076,1059.38193],[53444,3.89718,522.57742],[41390,0,0],[31185,4.88277,536.80451],[11847,2.4133,419.48464],[9166,4.7598,7.1135],[3404,3.3469,1589.0729],[3203,5.2108,735.8765],[3176,2.793,103.0928],[2806,3.7422,515.4639],[2677,4.3305,1052.2684],[2600,3.6344,206.1855],[2412,1.4695,426.5982],[2101,3.9276,639.8973],[1646,5.3095,1066.4955],[1641,4.4163,625.6702],[1050,3.1611,213.2991],[1025,2.5543,412.3711],[806,2.678,632.784],[741,2.171,1162.475],[677,6.25,838.969],[567,4.577,742.99],[485,2.469,949.176],[469,4.71,543.918],[445,.403,323.505],[416,5.368,728.763],[402,4.605,309.278],[347,4.681,14.227],[338,3.168,956.289],[261,5.343,846.083],[247,3.923,942.062],[220,4.842,1368.66],[203,5.6,1155.361],[200,4.439,1045.155],[197,3.706,2118.764],[196,3.759,199.072],[184,4.265,95.979],[180,4.402,532.872],[170,4.846,526.51],[146,6.13,533.623],[133,1.322,110.206],[132,4.512,525.759]].map(t=>({A:t[0],B:t[1],C:t[2]}))},qp=function(){return[[79645,1.35866,529.69097],[8252,5.7777,522.5774],[7030,3.2748,536.8045],[5314,1.8384,1059.3819],[1861,2.9768,7.1135],[964,5.48,515.464],[836,4.199,419.485],[498,3.142,0],[427,2.228,639.897],[406,3.783,1066.495],[377,2.242,1589.073],[363,5.368,206.186],[342,6.099,1052.268],[339,6.127,625.67],[333,.003,426.598],[280,4.262,412.371],[257,.963,632.784],[230,.705,735.877],[201,3.069,543.918],[200,4.429,103.093],[139,2.932,14.227],[114,.787,728.763],[95,1.7,838.97],[86,5.14,323.51],[83,.06,309.28],[80,2.98,742.99],[75,1.6,956.29],[70,1.51,213.3],[67,5.47,199.07],[62,6.1,1045.15],[56,.96,1162.47],[52,5.58,942.06],[50,2.72,532.87],[45,5.52,508.35],[44,.27,526.51],[40,5.95,95.98]].map(t=>({A:t[0],B:t[1],C:t[2]}))},$p=function(){return[[3519,6.058,529.691],[1073,1.6732,536.8045],[916,1.413,522.577],[342,.523,1059.382],[255,1.196,7.114],[222,.952,515.464],[90,3.14,0],[69,2.27,1066.5],[58,1.41,543.92],[58,.53,639.9],[51,5.98,412.37],[47,1.58,625.67],[43,6.12,419.48],[37,1.18,14.23],[34,1.67,1052.27],[34,.85,206.19],[31,1.04,1589.07],[30,4.63,426.6],[21,2.5,728.76],[15,.89,199.07],[14,.96,508.35],[13,1.5,1045.15],[12,2.61,735.88],[12,3.56,323.51],[11,1.79,309.28],[11,6.28,956.29],[10,6.26,103.09],[9,3.45,838.97]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Yp=function(){return[[129,.084,536.805],[113,4.249,529.691],[83,3.3,522.58],[38,2.73,515.46],[27,5.69,7.11],[18,5.4,1059.38],[13,6.02,543.92],[9,.77,1066.5],[8,5.68,14.23],[7,1.43,412.37],[6,5.12,639.9],[5,3.34,625.67],[3,3.4,1052.27],[3,4.16,728.76],[3,2.9,426.6]].map(t=>({A:t[0],B:t[1],C:t[2]}))},jp=function(){return[[11,4.75,536.8],[4,5.92,522.58],[2,5.57,515.46],[2,4.3,543.92],[2,3.69,7.11],[2,4.13,1059.38],[2,5.49,1066.5]].map(t=>({A:t[0],B:t[1],C:t[2]}))};function ri(t){const e=ft(t),n=Op(),i=Np(),s=Fp(),r=Bp(),a=zp(),o=Gp(),c=n.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),l=i.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),u=s.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),d=r.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),m=a.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),h=o.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),f=c+l*e+u*Math.pow(e,2)+d*Math.pow(e,3)+m*Math.pow(e,4)+h*Math.pow(e,5);return Re(f/1e8*De)}function Zi(t){const e=ft(t),n=Hp(),i=kp(),s=Vp(),r=Jp(),a=Wp(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return yn(m/1e8*De)}function ai(t){const e=ft(t),n=Qp(),i=Xp(),s=qp(),r=$p(),a=Yp(),o=jp(),c=n.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),l=i.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),u=s.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),d=r.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),m=a.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),h=o.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0);return(c+l*e+u*Math.pow(e,2)+d*Math.pow(e,3)+m*Math.pow(e,4)+h*Math.pow(e,5))/1e8}function S0(t){return{longitude:ri(t),latitude:Zi(t)}}function Zp(t,e=Ze.Mean){return ut(S0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}const Kp={equatorialRadius:71492,meanRadius:69911,mass:1898.187,bulkDensity:1.3262,siderealRotationPeriod:.41354,siderealOrbitPeriod:11.862615,visualMagnitude:-9.4,geometricAlbedo:.52,equatorialGravity:24.79,escapeVelocity:60.2},Ki={semiMajorAxis:[5.202603209,1913e-10,0,0],eccentricity:[.04849793,163225e-9,-4714e-10,-201e-11],[he.MeanOfTheDate]:{meanLongitude:[34.351519,3036.3027748,2233e-7,37e-9],inclination:[1.303267,-.0054965,466e-8,-2e-9],longitudeOfAscendingNode:[100.464407,1.0209774,40315e-8,404e-9],longitudeOfPerihelion:[14.331207,1.6126352,.00103042,-4464e-9]},[he.StandardJ2000]:{meanLongitude:[34.351519,3034.9056606,-8501e-8,16e-9],inclination:[1.303267,-.0019877,332e-7,97e-9],longitudeOfAscendingNode:[100.464407,.1767232,907e-6,-7272e-9],longitudeOfPerihelion:[14.331207,.2155209,72211e-8,-4485e-9]}};function T0(t){const e=.0843*(ni(t)-2011.2);return e>=0?Math.floor(e):Math.ceil(e)}function em(t){const e=T0(t)+.5;return 2455636936e-3+4332.897065*e+1367e-7*Math.pow(e,2)}function tm(t){const e=T0(t);return 2455636936e-3+4332.897065*e+1367e-7*Math.pow(e,2)}function nm(t,e=he.MeanOfTheDate){return Vi(t,Ki[e].meanLongitude)}function Va(t){return Ji(t,Ki.semiMajorAxis)}function Ja(t){return Wi(t,Ki.eccentricity)}function im(t,e=he.MeanOfTheDate){return Qi(t,Ki[e].inclination)}function sm(t,e=he.MeanOfTheDate){return Xi(t,Ki[e].longitudeOfAscendingNode)}function rm(t,e=he.MeanOfTheDate){return qi(t,Ki[e].longitudeOfPerihelion)}function Sr(t){return Oi(t,ri,Zi,ai)}function y0(t){return ii(t,ri,Zi,ai)}function E0(t){return Ni(t,ri,Zi,ai)}function h2(t,e=Ze.Mean){return ut(y0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}function am(t){return ut(E0(t),fe.getTrueObliquityOfEcliptic(t))}function om(t){return Fi(ai(t),Va(t))}function cm(t){return Bi(Ja(t),Va(t))}function lm(t){return zi(Ja(t),Va(t))}function um(t){return Gi(Ja(t),Va(t))}function hm(t,e){return Hi(t,e,h2)}function dm(t,e){return ki(t,e,h2)}function d2(t){const e=ai(t),n=fe.getRadiusVector(t),i=Sr(t);return Re(De*Math.acos((e*e+i*i-n*n)/(2*e*i)))}function fm(t){const e=d2(t)*H;return(1+Math.cos(e))/2}function pm(t){const e=ai(t),n=Sr(t),i=d2(t);return-9.4+5*Math.log10(e*n)+.005*i}function mm(t){return 98.47/Sr(t)}function gm(t){return 91.91/Sr(t)}function f2(t){const e=fe.getEclipticLongitude(t)*H,n=fe.getEclipticLatitude(t)*H,i=fe.getRadiusVector(t);let s=ri(t)*H;const r=Zi(t)*H,a=ai(t);let o=a*Math.cos(r)*Math.cos(s)-i*Math.cos(e),c=a*Math.cos(r)*Math.sin(s)-i*Math.sin(e),l=a*Math.sin(r)-i*Math.sin(n),u=Math.sqrt(o*o+c*c+l*l);s=s-.01299*u/(a*a),o=a*Math.cos(r)*Math.cos(s)-i*Math.cos(e),c=a*Math.cos(r)*Math.sin(s)-i*Math.sin(e),l=a*Math.sin(r)-i*Math.sin(n),u=Math.sqrt(o*o+c*c+l*l);const d=fe.getMeanObliquityOfEcliptic(t)*H,m=c*Math.cos(d)-l*Math.sin(d),h=c*Math.sin(d)+l*Math.cos(d),f=Math.atan2(m,o)*De,g=Math.atan2(h,Math.sqrt(o*o+m*m))*De;return{alpha:f,delta:g,r:a,Delta:u}}function _m(t){const e=(t-24332825e-1)/36525,n=(268+.1061*e)*H,i=(64.5-.0164*e)*H,{r:s,Delta:r}=f2(t),a=(ri(t)-.01299*r/(s*s))*H,o=Zi(t)*H,c=fe.getMeanObliquityOfEcliptic(t)*H,l=Math.atan2(Math.cos(c)*Math.sin(a)-Math.sin(c)*Math.tan(o),Math.cos(a)),u=Math.asin(Math.cos(c)*Math.sin(o)+Math.sin(c)*Math.cos(o)*Math.sin(a)),d=-1*Math.sin(i)*Math.sin(u),m=Math.cos(i)*Math.cos(u)*Math.cos(n-l);return Math.asin(d-m)*De}function Mm(t){const e=(t-24332825e-1)/36525,n=(268+.1061*e)*H,i=(64.5-.0164*e)*H,{alpha:s,delta:r}=f2(t),a=-1*Math.sin(i)*Math.sin(r),o=Math.cos(i)*Math.cos(r)*Math.cos(n-s);return Math.asin(a-o)*De}function vm(t){const e=t-24332825e-1,n=e/36525,i=(268+.1061*n)*H,s=(64.5-.0164*n)*H,r=fe.getEclipticLongitude(t)*H,a=fe.getRadiusVector(t),{alpha:o,delta:c,r:l,Delta:u}=f2(t),d=(ri(t)-.01299*u/Math.pow(l,2))*H,m=Re(17.71+877.90003539*e),h=Re(16.838+870.27003539*e),f=Math.sin(s)*Math.cos(c)*Math.cos(i-o),g=Math.sin(c)*Math.cos(s),p=Math.cos(c)*Math.sin(i-o),_=Math.atan2(f-g,p)*De,D=Re(m-_-5.07033*u),T=Re(h-_-5.02626*u),S=57.2958*(2*l*u+a*a-l*l-u*u)/(4*l*u);let L,A;return Math.sin(d-r)>0?(L=Re(D+S),A=Re(T+S)):(L=Re(D-S),A=Re(T-S)),{geometricSystemI:D,geometricSystemII:T,apparentSystemI:L,apparentSystemII:A}}const xm={getEclipticLongitude:ri,getEclipticLatitude:Zi,getEclipticCoordinates:S0,getEquatorialCoordinates:Zp,getRadiusVector:ai,getGeocentricDistance:Sr,getGeocentricEclipticCoordinates:y0,getApparentGeocentricEclipticCoordinates:E0,getGeocentricEquatorialCoordinates:h2,getApparentGeocentricEquatorialCoordinates:am,getInstantaneousVelocity:om,getVelocityAtPerihelion:cm,getVelocityAtAphelion:lm,getLengthOfEllipse:um,getRiseTransitSet:hm,getAccurateRiseTransitSet:dm,getMeanLongitude:nm,getEccentricity:Ja,getInclination:im,getLongitudeOfAscendingNode:sm,getLongitudeOfPerihelion:rm,getAphelion:em,getPerihelion:tm,getPhaseAngle:d2,getIlluminatedFraction:fm,getMagnitude:pm,getEquatorialSemiDiameter:mm,getPolarSemiDiameter:gm,getCentralMeridianLongitudes:vm,getPlanetocentricDeclinationOfTheEarth:Mm,getPlanetocentricDeclinationOfTheSun:_m,constants:Kp,orbitalElements:Ki},Sm=function(){return[[87401354,0,0],[11107660,3.9620509,213.29909544],[1414151,4.5858152,7.113547],[398379,.52112,206.185548],[350769,3.303299,426.598191],[206816,.246584,103.092774],[79271,3.84007,220.41264],[23990,4.66977,110.20632],[16574,.43719,419.48464],[15820,.93809,632.78374],[15054,2.7167,639.89729],[14907,5.76903,316.39187],[14610,1.56519,3.93215],[13160,4.44891,14.22709],[13005,5.98119,11.0457],[10725,3.1294,202.2534],[6126,1.7633,277.035],[5863,.2366,529.691],[5228,4.2078,3.1814],[5020,3.1779,433.7117],[4593,.6198,199.072],[4006,2.2448,63.7359],[3874,3.2228,138.5175],[3269,.7749,949.1756],[2954,.9828,95.9792],[2461,2.0316,735.8765],[1758,3.2658,522.5774],[1640,5.505,846.0828],[1581,4.3727,309.2783],[1391,4.0233,323.5054],[1124,2.8373,415.5525],[1087,4.1834,2.4477],[1017,3.717,227.5262],[957,.507,1265.567],[853,3.421,175.166],[849,3.191,209.367],[789,5.007,.963],[749,2.144,853.196],[744,5.253,224.345],[687,1.747,1052.268],[654,1.599,.048],[634,2.299,412.371],[625,.97,210.118],[580,3.093,74.782],[546,2.127,350.332],[543,1.518,9.561],[530,4.449,117.32],[478,2.965,137.033],[474,5.475,742.99],[452,1.044,490.334],[449,1.29,127.472],[372,2.278,217.231],[355,3.013,838.969],[347,1.539,340.771],[343,.246,.521],[330,.247,1581.959],[322,.961,203.738],[322,2.572,647.011],[309,3.495,216.48],[287,2.37,351.817],[278,.4,211.815],[249,1.47,1368.66],[227,4.91,12.53],[220,4.204,200.769],[209,1.345,625.67],[208,.483,1162.475],[208,1.283,39.357],[204,6.011,265.989],[185,3.503,149.563],[184,.973,4.193],[182,5.491,2.921],[174,1.863,.751],[165,.44,5.417],[149,5.736,52.69],[148,1.535,5.629],[146,6.231,195.14],[140,4.295,21.341],[131,4.068,10.295],[125,6.277,1898.351],[122,1.976,4.666],[118,5.341,554.07],[117,2.679,1155.361],[114,5.594,1059.382],[112,1.105,191.208],[110,.166,1.484],[109,3.438,536.805],[107,4.012,956.289],[104,2.192,88.866],[103,1.197,1685.052],[101,4.965,269.921]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Tm=function(){return[[21354295596,0,0],[1296855,1.8282054,213.2990954],[564348,2.885001,7.113547],[107679,2.277699,206.185548],[98323,1.0807,426.59819],[40255,2.04128,220.41264],[19942,1.27955,103.09277],[10512,2.7488,14.22709],[6939,.4049,639.8973],[4803,2.4419,419.4846],[4056,2.9217,110.2063],[3769,3.6497,3.9322],[3385,2.4169,3.1814],[3302,1.2626,433.7117],[3071,2.3274,199.072],[1953,3.5639,11.0457],[1249,2.628,95.9792],[922,1.961,227.526],[706,4.417,529.691],[650,6.174,202.253],[628,6.111,309.278],[487,6.04,853.196],[479,4.988,522.577],[468,4.617,63.736],[417,2.117,323.505],[408,1.299,209.367],[352,2.317,632.784],[344,3.959,412.371],[340,3.634,316.392],[336,3.772,735.877],[332,2.861,210.118],[289,2.733,117.32],[281,5.744,2.448],[266,.543,647.011],[230,1.644,216.48],[192,2.965,224.345],[173,4.077,846.083],[167,2.597,21.341],[136,2.286,10.295],[131,3.441,742.99],[128,4.095,217.231],[109,6.161,415.552],[98,4.73,838.97],[94,3.48,1052.27],[92,3.95,88.87],[87,1.22,440.83],[83,3.11,625.67],[78,6.24,302.16],[67,.29,4.67],[66,5.65,9.56],[62,4.29,127.47],[62,1.83,195.14],[58,2.48,191.96],[57,5.02,137.03],[55,.28,74.78],[54,5.13,490.33],[51,1.46,536.8],[47,1.18,149.56],[47,5.15,515.46],[46,2.23,956.29],[44,2.71,5.42],[40,.41,269.92],[40,3.89,728.76],[38,.65,422.67],[38,2.53,12.53],[37,3.78,2.92],[35,6.08,5.63],[34,3.21,1368.66],[33,4.64,277.03],[33,5.43,1066.5],[33,.3,351.82],[32,4.39,1155.36],[31,2.43,52.69],[30,2.84,203],[30,6.19,284.15],[30,3.39,1059.38],[29,2.03,330.62],[28,2.74,265.99],[26,4.51,340.77]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ym=function(){return[[116441,1.179879,7.113547],[91921,.07425,213.2991],[90592,0,0],[15277,4.06492,206.18555],[10631,.25778,220.41264],[10605,5.40964,426.59819],[4265,1.046,14.2271],[1216,2.9186,103.0928],[1165,4.6094,639.8973],[1082,5.6913,433.7117],[1045,4.0421,199.072],[1020,.6337,3.1814],[634,4.388,419.485],[549,5.573,3.932],[457,1.268,110.206],[425,.209,227.526],[274,4.288,95.979],[162,1.381,11.046],[129,1.566,309.278],[117,3.881,853.196],[105,4.9,647.011],[101,.893,21.341],[96,2.91,316.39],[95,5.63,412.37],[85,5.73,209.37],[83,6.05,216.48],[82,1.02,117.32],[75,4.76,210.12],[67,.46,522.58],[66,.48,10.29],[64,.35,323.51],[61,4.88,632.78],[53,2.75,529.69],[46,5.69,440.83],[45,1.67,202.25],[42,5.71,88.87],[32,.07,63.74],[32,1.67,302.16],[31,4.16,191.96],[27,.83,224.34],[25,5.66,735.88],[20,5.94,217.23],[18,4.9,625.67],[17,1.63,742.99],[16,.58,515.46],[14,.21,838.97],[14,3.76,195.14],[12,4.72,203],[12,.13,234.64],[12,3.12,846.08],[11,5.92,536.8],[11,5.6,728.76],[11,3.2,1066.5],[10,4.99,422.67],[10,.26,330.62],[10,4.15,860.31],[9,.46,956.29],[8,2.14,269.92],[8,5.25,429.78],[8,4.03,9.56],[7,5.4,1052.27],[6,4.46,284.15],[6,5.93,405.26]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Em=function(){return[[16039,5.73945,7.11355],[4250,4.5854,213.2991],[1907,4.7608,220.4126],[1466,5.9133,206.1855],[1162,5.6197,14.2271],[1067,3.6082,426.5982],[239,3.861,433.712],[237,5.768,199.072],[166,5.116,3.181],[151,2.736,639.897],[131,4.743,227.526],[63,.23,419.48],[62,4.74,103.09],[40,5.47,21.34],[40,5.96,95.98],[39,5.83,110.21],[28,3.01,647.01],[25,.99,3.93],[19,1.92,853.2],[18,4.97,10.29],[18,1.03,412.37],[18,4.2,216.48],[18,3.32,309.28],[16,3.9,440.83],[16,5.62,117.32],[13,1.18,88.87],[11,5.58,11.05],[11,5.93,191.96],[10,3.95,209.37],[9,3.39,302.16],[8,4.88,323.51],[7,.38,632.78],[6,2.25,522.58],[6,1.06,210.12],[5,4.64,234.64],[4,3.14,0],[4,2.31,515.46],[3,2.2,860.31],[3,.59,529.69],[3,4.93,224.34],[3,.42,625.67],[2,4.77,330.62],[2,3.35,429.78],[2,3.2,202.25],[2,1.19,1066.5],[2,1.35,405.26],[2,4.16,223.59],[2,3.07,654.12]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Dm=function(){return[[1662,3.9983,7.1135],[257,2.984,220.413],[236,3.902,14.227],[149,2.741,213.299],[114,3.142,0],[110,1.515,206.186],[68,1.72,426.6],[40,2.05,433.71],[38,1.24,199.07],[31,3.01,227.53],[15,.83,639.9],[9,3.71,21.34],[6,2.42,419.48],[6,1.16,647.01],[4,1.45,95.98],[4,2.12,440.83],[3,4.09,110.21],[3,2.77,412.37],[3,3.01,88.87],[3,0,853.2],[3,.39,103.09],[2,3.78,117.32],[2,2.83,234.64],[2,5.08,309.28],[2,2.24,216.48],[2,5.19,302.16],[1,1.55,191.96]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Am=function(){return[[124,2.259,7.114],[34,2.16,14.23],[28,1.2,220.41],[6,1.22,227.53],[5,.24,433.71],[4,6.23,426.6],[3,2.97,199.07],[3,4.29,206.19],[2,6.25,213.3],[1,5.28,639.9],[1,.24,440.83],[1,3.14,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},bm=function(){return[[4330678,3.6028443,213.2990954],[240348,2.852385,426.598191],[84746,0,0],[34116,.57297,206.18555],[30863,3.48442,220.41264],[14734,2.11847,639.89729],[9917,5.79,419.4846],[6994,4.736,7.1135],[4808,5.4331,316.3919],[4788,4.9651,110.2063],[3432,2.7326,433.7117],[1506,6.013,103.0928],[1060,5.631,529.691],[969,5.204,632.784],[942,1.396,853.196],[708,3.803,323.505],[552,5.131,202.253],[400,3.359,227.526],[319,3.626,209.367],[316,1.997,647.011],[314,.465,217.231],[284,4.886,224.345],[236,2.139,11.046],[215,5.95,846.083],[209,2.12,415.552],[207,.73,199.072],[179,2.954,63.736],[141,.644,490.334],[139,4.595,14.227],[139,1.998,735.877],[135,5.245,742.99],[122,3.115,522.577],[116,3.109,216.48],[114,.963,210.118]].map(t=>({A:t[0],B:t[1],C:t[2]}))},wm=function(){return[[397555,5.3329,213.299095],[49479,3.14159,0],[18572,6.09919,426.59819],[14801,2.30586,206.18555],[9644,1.6967,220.4126],[3757,1.2543,419.4846],[2717,5.9117,639.8973],[1455,.8516,433.7117],[1291,2.9177,7.1135],[853,.436,316.392],[298,.919,632.784],[292,5.316,853.196],[284,1.619,227.526],[275,3.889,103.093],[172,.052,647.011],[166,2.444,199.072],[158,5.209,110.206],[128,1.207,529.691],[110,2.457,217.231],[82,2.76,210.12],[81,2.86,14.23],[69,1.66,202.25],[65,1.26,216.48],[61,1.25,209.37],[59,1.82,323.51],[46,.82,440.83],[36,1.82,224.34],[34,2.84,117.32],[33,1.31,412.37],[32,1.19,846.08],[27,4.65,1066.5],[27,4.44,11.05]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Cm=function(){return[[20630,.50482,213.2991],[3720,3.9983,206.1855],[1627,6.1819,220.4126],[1346,0,0],[706,3.039,419.485],[365,5.099,426.598],[330,5.279,433.712],[219,3.828,639.897],[139,1.043,7.114],[104,6.157,227.526],[93,1.98,316.39],[71,4.15,199.07],[52,2.88,632.78],[49,4.43,647.01],[41,3.16,853.2],[29,4.53,210.12],[24,1.12,14.23],[21,4.35,217.23],[20,5.31,440.83],[18,.85,110.21],[17,5.68,216.48],[16,4.26,103.09],[14,3,412.37],[12,2.53,529.69],[8,3.32,202.25],[7,5.56,209.37],[7,.29,323.51],[6,1.16,117.32],[6,3.61,860.31]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Rm=function(){return[[666,1.99,213.299],[632,5.698,206.186],[398,0,0],[188,4.338,220.413],[92,4.84,419.48],[52,3.42,433.71],[42,2.38,426.6],[26,4.4,227.53],[21,5.85,199.07],[18,1.99,639.9],[11,5.37,7.11],[10,2.55,647.01],[7,3.46,316.39],[6,4.8,632.78],[6,.02,210.12],[6,3.52,440.83],[5,5.64,14.23],[5,1.22,853.2],[4,4.71,412.37],[3,.63,103.09],[2,3.72,216.48]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Lm=function(){return[[80,1.12,206.19],[32,3.12,213.3],[17,2.48,220.41],[12,3.14,0],[9,.38,419.48],[6,1.56,433.71],[5,2.63,227.53],[5,1.28,199.07],[1,1.43,426.6],[1,.67,647.01],[1,1.72,440.83],[1,6.18,639.9]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Pm=function(){return[[955758136,0,0],[52921382,2.3922622,213.29909544],[1873680,5.2354961,206.1855484],[1464664,1.6476305,426.5981909],[821891,5.9352,316.39187],[547507,5.015326,103.092774],[371684,2.271148,220.412642],[361778,3.139043,7.113547],[140618,5.704067,632.783739],[108975,3.293136,110.206321],[69007,5.941,419.48464],[61053,.94038,639.89729],[48913,1.55733,202.2534],[34144,.19519,277.03499],[32402,5.47085,949.17561],[20937,.46349,735.87651],[20839,1.52103,433.71174],[20747,5.33256,199.072],[15298,3.05944,529.69097],[14296,2.60434,323.50542],[12884,1.64892,138.5175],[11993,5.98051,846.08283],[11380,1.73106,522.57742],[9796,5.2048,1265.5675],[7753,5.8519,95.9792],[6771,3.0043,14.2271],[6466,.1773,1052.2684],[5850,1.4552,415.5525],[5307,.5974,63.7359],[4696,2.1492,227.5262],[4044,1.6401,209.3669],[3688,.7802,412.3711],[3461,1.8509,175.1661],[3420,4.9455,1581.9593],[3401,.5539,350.3321],[3376,3.6953,224.3448],[2976,5.6847,210.1177],[2885,1.3876,838.9693],[2881,.1796,853.1964],[2508,3.5385,742.9901],[2448,6.1841,1368.6603],[2406,2.9656,117.3199],[2174,.0151,340.7709],[2024,5.0541,11.0457]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Um=function(){return[[6182981,.2584352,213.2990954],[506578,.711147,206.185548],[341394,5.796358,426.598191],[188491,.472157,220.412642],[186262,3.141593,0],[143891,1.407449,7.113547],[49621,6.01744,103.09277],[20928,5.09246,639.89729],[19953,1.1756,419.48464],[18840,1.6082,110.20632],[13877,.75886,199.072],[12893,5.9433,433.71174],[5397,1.2885,14.2271],[4869,.8679,323.5054],[4247,.393,227.5262],[3252,1.2585,95.9792],[3081,3.4366,522.5774],[2909,4.6068,202.2534],[2856,2.1673,735.8765],[1988,2.4505,412.3711],[1941,6.0239,209.3669],[1581,1.2919,210.1177],[1340,4.308,853.1964],[1316,1.253,117.3199],[1203,1.8665,316.3919],[1091,.0753,216.4805],[966,.48,632.784],[954,5.152,647.011],[898,.983,529.691],[882,1.885,1052.268],[874,1.402,224.345],[785,3.064,838.969],[740,1.382,625.67],[658,4.144,309.278],[650,1.725,742.99],[613,3.033,63.736],[599,2.549,217.231],[503,2.13,3.932]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Im=function(){return[[436902,4.786717,213.299095],[71923,2.5007,206.18555],[49767,4.97168,220.41264],[43221,3.8694,426.59819],[29646,5.9631,7.11355],[4721,2.4753,199.072],[4142,4.1067,433.7117],[3789,3.0977,639.8973],[2964,1.3721,103.0928],[2556,2.8507,419.4846],[2327,0,0],[2208,6.2759,110.2063],[2188,5.8555,14.2271],[1957,4.9245,227.5262],[924,5.464,323.505],[706,2.971,95.979],[546,4.129,412.371],[431,5.178,522.577],[405,4.173,209.367],[391,4.481,216.48],[374,5.834,117.32],[361,3.277,647.011],[356,3.192,210.118],[326,2.269,853.196],[207,4.022,735.877],[204,.088,202.253],[180,3.597,632.784],[178,4.097,440.825],[154,3.135,625.67],[148,.136,302.165],[133,2.594,191.958],[132,5.933,309.278]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Om=function(){return[[20315,3.02187,213.2991],[8924,3.1914,220.4126],[6909,4.3517,206.1855],[4087,4.2241,7.1135],[3879,2.0106,426.5982],[1071,4.2036,199.072],[907,2.283,433.712],[606,3.175,227.526],[597,4.135,14.227],[483,1.173,639.897],[393,0,0],[229,4.698,419.485],[188,4.59,110.206],[150,3.202,103.093],[121,3.768,323.505],[102,4.71,95.979],[101,5.819,412.371],[93,1.44,647.01],[84,2.63,216.48],[73,4.15,117.32],[62,2.31,440.83],[55,.31,853.2],[50,2.39,209.37],[45,4.37,191.96],[41,.69,522.58],[40,1.84,302.16],[38,5.94,88.87],[32,4.01,21.34]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Nm=function(){return[[1202,1.415,220.4126],[708,1.162,213.299],[516,6.24,206.186],[427,2.469,7.114],[268,.187,426.598],[170,5.959,199.072],[150,.48,433.712],[145,1.442,227.526],[121,2.405,14.227],[47,5.57,639.9],[19,5.86,647.01],[17,.53,440.83],[16,2.9,110.21],[15,.3,419.48],[14,1.3,412.37],[13,2.09,323.51],[11,.22,95.98],[11,2.46,117.32],[10,3.14,0],[9,1.56,88.87],[9,2.28,21.34],[9,.68,216.48],[8,1.27,234.64]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Fm=function(){return[[129,5.913,220.413],[32,.69,7.11],[27,5.91,227.53],[20,4.95,433.71],[20,.67,14.23],[14,2.67,206.19],[14,1.46,199.07],[13,4.59,426.6],[7,4.63,213.3],[5,3.61,639.9],[4,4.9,440.83],[3,4.07,647.01],[3,4.66,191.96],[3,.49,323.51],[3,3.18,419.48],[2,3.7,88.87],[2,3.32,95.98],[2,.56,117.32]].map(t=>({A:t[0],B:t[1],C:t[2]}))};function Ci(t){const e=ft(t),n=Sm(),i=Tm(),s=ym(),r=Em(),a=Dm(),o=Am(),c=n.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),l=i.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),u=s.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),d=r.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),m=a.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),h=o.reduce((g,p)=>g+p.A*Math.cos(p.B+p.C*e),0),f=c+l*e+u*Math.pow(e,2)+d*Math.pow(e,3)+m*Math.pow(e,4)+h*Math.pow(e,5);return Re(f/1e8*De)}function Ri(t){const e=ft(t),n=bm(),i=wm(),s=Cm(),r=Rm(),a=Lm(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return yn(m/1e8*De)}function Hn(t){const e=ft(t),n=Pm(),i=Um(),s=Im(),r=Om(),a=Nm(),o=Fm(),c=n.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),l=i.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),u=s.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),d=r.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),m=a.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0),h=o.reduce((f,g)=>f+g.A*Math.cos(g.B+g.C*e),0);return(c+l*e+u*Math.pow(e,2)+d*Math.pow(e,3)+m*Math.pow(e,4)+h*Math.pow(e,5))/1e8}function D0(t){return{longitude:Ci(t),latitude:Ri(t)}}function Bm(t,e=Ze.Mean){return ut(D0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}const zm={equatorialRadius:60268,meanRadius:58232,mass:568.3174,bulkDensity:.6871,siderealRotationPeriod:.44401,siderealOrbitPeriod:29.447498,visualMagnitude:-8.88,geometricAlbedo:.47,equatorialGravity:10.44,escapeVelocity:36.09},es={semiMajorAxis:[9.554909192,-2139e-9,4e-9,0],eccentricity:[.05554814,-346641e-9,-6436e-10,34e-10],[he.MeanOfTheDate]:{meanLongitude:[50.077444,1223.5110686,51908e-8,-3e-8],inclination:[2.488879,-.0037362,-1519e-8,87e-9],longitudeOfAscendingNode:[113.665503,.877088,-12176e-8,-2249e-9],longitudeOfPerihelion:[93.057237,1.9637613,83753e-8,4928e-9]},[he.StandardJ2000]:{meanLongitude:[50.077444,1222.1138488,21004e-8,-46e-9],inclination:[2.488879,.0025514,-4906e-8,17e-9],longitudeOfAscendingNode:[113.665503,-.2566722,-18399e-8,48e-8],longitudeOfPerihelion:[93.057237,.5665415,5285e-7,4912e-9]}};function A0(t){const e=.03393*(ni(t)-2003.52);return e>=0?Math.floor(e):Math.ceil(e)}function Gm(t){const e=A0(t)+.5;return 245283012e-2+10764.21676*e+827e-6*Math.pow(e,2)}function Hm(t){const e=A0(t);return 245283012e-2+10764.21676*e+827e-6*Math.pow(e,2)}function km(t,e=he.MeanOfTheDate){return Vi(t,es[e].meanLongitude)}function Wa(t){return Ji(t,es.semiMajorAxis)}function Qa(t){return Wi(t,es.eccentricity)}function Vm(t,e=he.MeanOfTheDate){return Qi(t,es[e].inclination)}function Jm(t,e=he.MeanOfTheDate){return Xi(t,es[e].longitudeOfAscendingNode)}function Wm(t,e=he.MeanOfTheDate){return qi(t,es[e].longitudeOfPerihelion)}function Xa(t){return Oi(t,Ci,Ri,Hn)}function b0(t){return ii(t,Ci,Ri,Hn)}function w0(t){return Ni(t,Ci,Ri,Hn)}function p2(t,e=Ze.Mean){return ut(b0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}function Qm(t){return ut(w0(t),fe.getTrueObliquityOfEcliptic(t))}function Xm(t){return Fi(Hn(t),Wa(t))}function qm(t){return Bi(Qa(t),Wa(t))}function $m(t){return zi(Qa(t),Wa(t))}function Ym(t){return Gi(Qa(t),Wa(t))}function jm(t,e){return Hi(t,e,p2)}function Zm(t,e){return ki(t,e,p2)}function C0(t){const e=gt(t),n=(28.075216-.012998*e+4e-6*Math.pow(e,2))*H,i=(169.50847+1.394681*e+412e-6+Math.pow(e,2))*H,s=fe.getEclipticLongitude(t)*H;let r=Ma(9);const a=t-r;let o=va(a,Ci,Ri,Hn);r=Ma(o.Delta);const c=t-r;o=va(c,Ci,Ri,Hn);const[l,u,d]=[o.l,o.b,o.r],m=o.Delta,h=Ei(Math.atan2(o.y,o.x),gh),f=Math.atan2(o.z,Math.sqrt(Math.pow(o.x,2)+Math.pow(o.y,2))),g=Math.asin(Math.sin(n)*Math.cos(f)*Math.sin(h-i)-Math.cos(n)*Math.sin(f))*De,p=375.35/m,_=p*Math.sin(Math.abs(g)*H),D=(113.6655+.8771*e)*H,T=(l*De-.01759/d)*H,S=(u*De-764e-6*Math.cos(l-D)/d)*H,L=Math.asin(Math.sin(n)*Math.cos(S)*Math.sin(T-i)-Math.cos(n)*Math.sin(S))*De,A=Math.atan2(Math.sin(n)*Math.sin(S)+Math.cos(n)*Math.cos(S)*Math.sin(T-i),Math.cos(S)*Math.cos(T-i))*De,w=Math.atan2(Math.sin(n)*Math.sin(f)+Math.cos(n)*Math.cos(f)*Math.sin(h-i),Math.cos(f)*Math.cos(h-i))*De,F=Re(Math.abs(A-w)),y=fe.getTrueObliquityOfEcliptic(t),v=fe.getNutationInLongitude(t)/3600,b=(i-N3)*De,q=(N3-n)*De,W=.005693*Math.cos(s-h)/Math.cos(f),z=.005693*Math.sin(s-h)*Math.sin(f);let B=Re(h*De+W);const P=f*De+z,J=b+v;B=B+v;const R=ut({longitude:B,latitude:P},y),$=R.rightAscension*H,Z=R.declination*H,se=ut({longitude:J,latitude:q},y),ve=se.rightAscension*H,we=se.declination*H,Q=Math.atan2(Math.cos(we)*Math.sin(ve-$),Math.sin(we)*Math.cos(Z)-Math.cos(we)*Math.sin(Z)*Math.cos(ve-$))*De;return{majorAxis:p,minorAxis:_,northPolePositionAngle:Q,saturnicentricSunEarthLongitudesDifference:F,earthCoordinates:{longitude:w,latitude:g},sunCoordinates:{longitude:A,latitude:L}}}function R0(t){const e=Hn(t),n=fe.getRadiusVector(t),i=Xa(t);return Re(De*Math.acos((e*e+i*i-n*n)/(2*e*i)))}function Km(t){const e=R0(t)*H;return(1+Math.cos(e))/2}function eg(t){const e=Hn(t),n=Xa(t),i=C0(t),s=i.earthCoordinates.latitude*H,r=Math.sin(s),a=i.saturnicentricSunEarthLongitudesDifference;return-8.88+5*Math.log10(e*n)+.044*Math.abs(a)-2.6*Math.sin(Math.abs(s))+1.25*Math.pow(r,2)}function L0(t){return 8.34/Xa(t)}function tg(t){return L0(t)}const ng={getEclipticLongitude:Ci,getEclipticLatitude:Ri,getEclipticCoordinates:D0,getEquatorialCoordinates:Bm,getRadiusVector:Hn,getGeocentricDistance:Xa,getGeocentricEclipticCoordinates:b0,getApparentGeocentricEclipticCoordinates:w0,getGeocentricEquatorialCoordinates:p2,getApparentGeocentricEquatorialCoordinates:Qm,getInstantaneousVelocity:Xm,getVelocityAtPerihelion:qm,getVelocityAtAphelion:$m,getLengthOfEllipse:Ym,getRiseTransitSet:jm,getAccurateRiseTransitSet:Zm,getMeanLongitude:km,getEccentricity:Qa,getInclination:Vm,getLongitudeOfAscendingNode:Jm,getLongitudeOfPerihelion:Wm,getAphelion:Gm,getPerihelion:Hm,getPhaseAngle:R0,getIlluminatedFraction:Km,getMagnitude:eg,getEquatorialSemiDiameter:L0,getPolarSemiDiameter:tg,getRingSystemDetails:C0,constants:zm,orbitalElements:es},ig=function(){return[[548129294,0,0],[9260408,.8910642,74.7815986],[1504248,3.6271926,1.4844727],[365982,1.899622,73.297126],[272328,3.358237,149.563197],[70328,5.39254,63.7359],[68893,6.09292,76.26607],[61999,2.26952,2.96895],[61951,2.85099,11.0457],[26469,3.14152,71.81265],[25711,6.1138,454.90937],[21079,4.36059,148.07872],[17819,1.74437,36.64856],[14613,4.73732,3.93215],[11163,5.82682,224.3448],[10998,.48865,138.5175],[9527,2.9552,35.1641],[7546,5.2363,109.9457],[4220,3.2333,70.8494],[4052,2.2775,151.0477],[3490,5.4831,146.5943],[3355,1.0655,4.4534],[3144,4.752,77.7505],[2927,4.629,9.5612],[2922,5.3524,85.8273],[2273,4.366,70.3282],[2149,.6075,38.133],[2051,1.5177,.1119],[1992,4.9244,277.035],[1667,3.6274,380.1278],[1533,2.5859,52.6902],[1376,2.0428,65.2204],[1372,4.1964,111.4302],[1284,3.1135,202.2534],[1282,.5427,222.8603],[1244,.9161,2.4477],[1221,.199,108.4612],[1151,4.179,33.6796],[1150,.9334,3.1814],[1090,1.775,12.5302],[1072,.2356,62.2514],[946,1.192,127.472],[708,5.183,213.299],[653,.966,78.714],[628,.182,984.6],[607,5.432,529.691],[559,3.358,.521],[524,2.013,299.126],[483,2.106,.963],[471,1.407,184.727],[467,.415,145.11],[434,5.521,183.243],[405,5.987,8.077],[399,.338,415.552],[396,5.87,351.817],[379,2.35,56.622],[310,5.833,145.631],[300,5.644,22.091],[294,5.839,39.618],[252,1.637,221.376],[249,4.746,225.829],[239,2.35,137.033],[224,.516,84.343],[223,2.843,.261],[220,1.922,67.668],[217,6.142,5.938],[216,4.778,340.771],[208,5.58,68.844],[202,1.297,.048],[199,.956,152.532],[194,1.888,456.394],[193,.916,453.425],[187,1.319,.16],[182,3.536,79.235],[173,1.539,160.609],[172,5.68,219.891],[170,3.677,5.417],[169,5.879,18.159],[165,1.424,106.977],[163,3.05,112.915],[158,.738,54.175],[147,1.263,59.804],[143,1.3,35.425],[139,5.386,32.195],[139,4.26,909.819],[124,1.374,7.114],[110,2.027,554.07],[109,5.706,77.963],[104,5.028,.751],[104,1.458,24.379],[103,.681,14.978]].map(t=>({A:t[0],B:t[1],C:t[2]}))},sg=function(){return[[7502543122,0,0],[154458,5.242017,74.781599],[24456,1.71256,1.48447],[9258,.4284,11.0457],[8266,1.5022,63.7359],[7842,1.3198,149.5632],[3899,.4648,3.9322],[2284,4.1737,76.2661],[1927,.5301,2.9689],[1233,1.5863,70.8494],[791,5.436,3.181],[767,1.996,73.297],[482,2.984,85.827],[450,4.138,138.517],[446,3.723,224.345],[427,4.731,71.813],[354,2.583,148.079],[348,2.454,9.561],[317,5.579,52.69],[206,2.363,2.448],[189,4.202,56.622],[184,.284,151.048],[180,5.684,12.53],[171,3.001,78.714],[158,2.909,.963],[155,5.591,4.453],[154,4.652,35.164],[152,2.942,77.751],[143,2.59,62.251],[121,4.148,127.472],[116,3.732,65.22],[102,4.188,145.631],[102,6.034,.112],[88,3.99,18.16],[88,6.16,202.25],[81,2.64,22.09],[72,6.05,70.33],[69,4.05,77.96],[59,3.7,67.67],[47,3.54,351.82],[44,5.91,7.11],[43,5.72,5.42],[39,4.92,222.86],[36,5.9,33.68],[36,3.29,8.08],[36,3.33,71.6],[35,5.08,38.13],[31,5.62,984.6],[31,5.5,59.8],[31,5.46,160.61],[30,1.66,447.8],[29,1.15,462.02],[29,4.52,84.34],[27,5.54,131.4],[27,6.15,299.13],[26,4.99,137.03],[25,5.74,380.13]].map(t=>({A:t[0],B:t[1],C:t[2]}))},rg=function(){return[[53033,0,0],[2358,2.2601,74.7816],[769,4.526,11.046],[552,3.258,63.736],[542,2.276,3.932],[529,4.923,1.484],[258,3.691,3.181],[239,5.858,149.563],[182,6.218,70.849],[54,1.44,76.27],[49,6.03,56.62],[45,3.91,2.45],[45,.81,85.83],[38,1.78,52.69],[37,4.46,2.97],[33,.86,9.56],[29,5.1,73.3],[24,2.11,18.16],[22,5.99,138.52],[22,4.82,78.71],[21,2.4,77.96],[21,2.17,224.34],[17,2.54,145.63],[17,3.47,12.53],[12,.02,22.09],[11,.08,127.47],[10,5.16,71.6],[10,4.46,62.25],[9,4.26,7.11],[8,5.5,67.67],[7,1.25,5.42],[6,3.36,447.8],[6,5.45,65.22],[6,4.52,151.05],[6,5.73,462.02]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ag=function(){return[[121,.024,74.782],[68,4.12,3.93],[53,2.39,11.05],[46,0,0],[45,2.04,3.18],[44,2.96,1.48],[25,4.89,63.74],[21,4.55,70.85],[20,2.31,149.56],[9,1.58,56.62],[4,.23,18.16],[4,5.39,76.27],[4,.95,77.96],[3,4.98,85.83],[3,4.13,52.69],[3,.37,78.71],[2,.86,145.63],[2,5.66,9.56]].map(t=>({A:t[0],B:t[1],C:t[2]}))},og=function(){return[[114,3.142,0],[6,4.58,74.78],[3,.35,11.05],[1,3.42,56.62]].map(t=>({A:t[0],B:t[1],C:t[2]}))},cg=function(){return[[1346278,2.6187781,74.7815986],[62341,5.08111,149.5632],[61601,3.14159,0],[9964,1.616,76.2661],[9926,.5763,73.2971],[3259,1.2612,224.3448],[2972,2.2437,1.4845],[2010,6.0555,148.0787],[1522,.2796,63.7359],[924,4.038,151.048],[761,6.14,71.813],[522,3.321,138.517],[463,.743,85.827],[437,3.381,529.691],[435,.341,77.751],[431,3.554,213.299],[420,5.213,11.046],[245,.788,2.969],[233,2.257,222.86],[216,1.591,38.133],[180,3.725,299.126],[175,1.236,146.594],[174,1.937,380.128],[160,5.336,111.43],[144,5.962,35.164],[116,5.739,70.849],[106,.941,70.328],[102,2.619,78.714]].map(t=>({A:t[0],B:t[1],C:t[2]}))},lg=function(){return[[206366,4.123943,74.781599],[8563,.3382,149.5632],[1726,2.1219,73.2971],[1374,0,0],[1369,3.0686,76.2661],[451,3.777,1.484],[400,2.848,224.345],[307,1.255,148.079],[154,3.786,63.736],[112,5.573,151.048],[111,5.329,138.517],[83,3.59,71.81],[56,3.4,85.83],[54,1.7,77.75],[42,1.21,11.05],[41,4.45,78.71],[32,3.77,222.86],[30,2.56,2.97],[27,5.34,213.3],[26,.42,380.13]].map(t=>({A:t[0],B:t[1],C:t[2]}))},ug=function(){return[[9212,5.8004,74.7816],[557,0,0],[286,2.177,149.563],[95,3.84,73.3],[45,4.88,76.27],[20,5.46,1.48],[15,.88,138.52],[14,2.85,148.08],[14,5.07,63.74],[10,5,224.34],[8,6.27,78.71]].map(t=>({A:t[0],B:t[1],C:t[2]}))},hg=function(){return[[268,1.251,74.782],[11,3.14,0],[6,4.01,149.56],[3,5.78,73.3]].map(t=>({A:t[0],B:t[1],C:t[2]}))},dg=function(){return[[6,2.85,74.78]].map(t=>({A:t[0],B:t[1],C:t[2]}))},fg=function(){return[[1921264848,0,0],[88784984,5.60377527,74.78159857],[3440836,.328361,73.2971259],[2055653,1.7829517,149.5631971],[649322,4.522473,76.266071],[602248,3.860038,63.735898],[496404,1.401399,454.909367],[338526,1.580027,138.517497],[243508,1.570866,71.812653],[190522,1.998094,1.484473],[161858,2.791379,148.078724],[143706,1.383686,11.0457],[93192,.17437,36.64856],[89806,3.66105,109.94569],[71424,4.24509,224.3448],[46677,1.39977,35.16409],[39026,3.36235,277.03499],[39010,1.66971,70.84945],[36755,3.88649,146.59425],[30349,.701,151.04767],[29156,3.18056,77.75054],[25786,3.78538,85.8273],[25620,5.25656,380.12777],[22637,.72519,529.69097],[20473,2.7964,70.32818],[20472,1.55589,202.2534],[17901,.55455,2.96895],[15503,5.35405,38.13304],[14702,4.90434,108.46122],[12897,2.62154,111.43016],[12328,5.96039,127.4718],[11959,1.75044,984.60033],[11853,.99343,52.6902],[11696,3.29826,3.93215],[11495,.43774,65.22037],[10793,1.42105,213.2991],[9111,4.9964,62.2514],[8421,5.2535,222.8603],[8402,5.0388,415.5525],[7449,.7949,351.8166],[7329,3.9728,183.2428],[6046,5.6796,78.7138],[5524,3.115,9.5612],[5445,5.1058,145.1098],[5238,2.6296,33.6796],[4079,3.2206,340.7709],[3919,4.2502,39.6175],[3802,6.1099,184.7273],[3781,3.4584,456.3938],[3687,2.4872,453.4249],[3102,4.1403,219.8914],[2963,.8298,56.6224],[2942,.4239,299.1264],[2940,2.1464,137.033],[2938,3.6766,140.002],[2865,.31,12.5302],[2538,4.8546,131.4039],[2364,.4425,554.07],[2183,2.9404,305.3462]].map(t=>({A:t[0],B:t[1],C:t[2]}))},pg=function(){return[[1479896,3.6720571,74.7815986],[71212,6.22601,63.7359],[68627,6.13411,149.5632],[24060,3.14159,0],[21468,2.60177,76.26607],[20857,5.24625,11.0457],[11405,.01848,70.84945],[7497,.4236,73.2971],[4244,1.4169,85.8273],[3927,3.1551,71.8127],[3578,2.3116,224.3448],[3506,2.5835,138.5175],[3229,5.255,3.9322],[3060,.1532,1.4845],[2564,.9808,148.0787],[2429,3.9944,52.6902],[1645,2.6535,127.4718],[1584,1.4305,78.7138],[1508,5.06,151.0477],[1490,2.6756,56.6224],[1413,4.5746,202.2534],[1403,1.3699,77.7505],[1228,1.047,62.2514],[1033,.2646,131.4039],[992,2.172,65.22],[862,5.055,351.817],[744,3.076,35.164],[687,2.499,77.963],[647,4.473,70.328],[624,.863,9.561],[604,.907,984.6],[575,3.231,447.796],[562,2.718,462.023],[530,5.917,213.299],[528,5.151,2.969]].map(t=>({A:t[0],B:t[1],C:t[2]}))},mg=function(){return[[22440,.69953,74.7816],[4727,1.699,63.7359],[1682,4.6483,70.8494],[1650,3.0966,11.0457],[1434,3.5212,149.5632],[770,0,0],[500,6.172,76.266],[461,.767,3.932],[390,4.496,56.622],[390,5.527,85.827],[292,.204,52.69],[287,3.534,73.297],[273,3.847,138.517],[220,1.964,131.404],[216,.848,77.963],[205,3.248,78.714],[149,4.898,127.472],[129,2.081,3.181]].map(t=>({A:t[0],B:t[1],C:t[2]}))},gg=function(){return[[1164,4.7345,74.7816],[212,3.343,63.736],[196,2.98,70.849],[105,.958,11.046],[73,1,149.56],[72,.03,56.62],[55,2.59,3.93],[36,5.65,77.96],[34,3.82,76.27],[32,3.6,131.4]].map(t=>({A:t[0],B:t[1],C:t[2]}))},_g=function(){return[[53,3.01,74.78],[10,1.91,56.62]].map(t=>({A:t[0],B:t[1],C:t[2]}))};function Tr(t){const e=ft(t),n=ig(),i=sg(),s=rg(),r=ag(),a=og(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return Re(m/1e8*De)}function yr(t){const e=ft(t),n=cg(),i=lg(),s=ug(),r=hg(),a=dg(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return yn(m/1e8*De)}function ts(t){const e=ft(t),n=fg(),i=pg(),s=mg(),r=gg(),a=_g(),o=n.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),c=i.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),l=s.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),u=r.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0),d=a.reduce((m,h)=>m+h.A*Math.cos(h.B+h.C*e),0);return(o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4))/1e8}function P0(t){return{longitude:Tr(t),latitude:yr(t)}}function Mg(t,e=Ze.Mean){return ut(P0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}const vg={equatorialRadius:25559,meanRadius:25362,mass:86.8127,bulkDensity:1.27,siderealRotationPeriod:-.71833,siderealOrbitPeriod:84.016846,visualMagnitude:-7.19,geometricAlbedo:.51,equatorialGravity:8.87,escapeVelocity:21.38},ns={semiMajorAxis:[19.218446062,-372e-10,98e-11,0],eccentricity:[.04638122,-27293e-9,789e-10,24e-11],[he.MeanOfTheDate]:{meanLongitude:[314.055005,429.8240561,3039e-7,26e-9],inclination:[.773197,7744e-7,3749e-8,-92e-9],longitudeOfAscendingNode:[74.005957,.5211278,.00133947,18484e-9],longitudeOfPerihelion:[173.005291,1.486379,21406e-8,434e-9]},[he.StandardJ2000]:{meanLongitude:[314.055005,428.4669983,-486e-8,6e-9],inclination:[.773197,-.0016869,349e-8,16e-9],longitudeOfAscendingNode:[74.005957,.0741431,40539e-8,119e-9],longitudeOfPerihelion:[173.005291,.0893212,-947e-7,414e-9]}};function U0(t){const e=.0119*(ni(t)-2051.1);return e>=0?Math.floor(e):Math.ceil(e)}function xg(t){const e=U0(t)+.5;return 24702135e-1+30694.8767*e-.00541*Math.pow(e,2)}function Sg(t){const e=U0(t);return 24702135e-1+30694.8767*e-.00541*Math.pow(e,2)}function Tg(t,e=he.MeanOfTheDate){return Vi(t,ns[e].meanLongitude)}function qa(t){return Ji(t,ns.semiMajorAxis)}function $a(t){return Wi(t,ns.eccentricity)}function yg(t,e=he.MeanOfTheDate){return Qi(t,ns[e].inclination)}function Eg(t,e=he.MeanOfTheDate){return Xi(t,ns[e].longitudeOfAscendingNode)}function Dg(t,e=he.MeanOfTheDate){return qi(t,ns[e].longitudeOfPerihelion)}function Ya(t){return Oi(t,Tr,yr,ts)}function I0(t){return ii(t,Tr,yr,ts)}function O0(t){return Ni(t,Tr,yr,ts)}function m2(t,e=Ze.Mean){return ut(I0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}function Ag(t){return ut(O0(t),fe.getTrueObliquityOfEcliptic(t))}function bg(t){return Fi(ts(t),qa(t))}function wg(t){return Bi($a(t),qa(t))}function Cg(t){return zi($a(t),qa(t))}function Rg(t){return Gi($a(t),qa(t))}function Lg(t,e){return Hi(t,e,m2)}function Pg(t,e){return ki(t,e,m2)}function N0(t){const e=ts(t),n=fe.getRadiusVector(t),i=Ya(t);return Re(De*Math.acos((e*e+i*i-n*n)/(2*e*i)))}function Ug(t){const e=N0(t)*H;return(1+Math.cos(e))/2}function Ig(t){const e=ts(t),n=Ya(t);return-7.19+5*Math.log10(e*n)}function F0(t){return 35.02/Ya(t)}function Og(t){return F0(t)}const Ng={getEclipticLongitude:Tr,getEclipticLatitude:yr,getEclipticCoordinates:P0,getEquatorialCoordinates:Mg,getRadiusVector:ts,getGeocentricDistance:Ya,getGeocentricEclipticCoordinates:I0,getApparentGeocentricEclipticCoordinates:O0,getGeocentricEquatorialCoordinates:m2,getApparentGeocentricEquatorialCoordinates:Ag,getInstantaneousVelocity:bg,getVelocityAtPerihelion:wg,getVelocityAtAphelion:Cg,getLengthOfEllipse:Rg,getRiseTransitSet:Lg,getAccurateRiseTransitSet:Pg,getMeanLongitude:Tg,getEccentricity:$a,getInclination:yg,getLongitudeOfAscendingNode:Eg,getLongitudeOfPerihelion:Dg,getAphelion:xg,getPerihelion:Sg,getPhaseAngle:N0,getIlluminatedFraction:Ug,getMagnitude:Ig,getEquatorialSemiDiameter:F0,getPolarSemiDiameter:Og,constants:vg,orbitalElements:ns},Fg=function(){return[[531188633,0,0],[1798476,2.9010127,38.1330356],[1019728,.4858092,1.4844727],[124532,4.830081,36.648563],[42064,5.41055,2.96895],[37715,6.09222,35.16409],[33785,1.24489,76.26607],[16483,8e-5,491.55793],[9199,4.9375,39.6175],[8994,.2746,175.1661],[4216,1.9871,73.2971],[3365,1.0359,33.6796],[2285,4.2061,4.4534],[1434,2.7834,74.7816],[900,2.076,109.946],[745,3.19,71.813],[506,5.748,114.399],[400,.35,1021.249],[345,3.462,41.102],[340,3.304,77.751],[323,2.248,32.195],[306,.497,.521],[287,4.505,.048],[282,2.246,146.594],[267,4.889,.963],[252,5.782,388.465],[245,1.247,9.561],[233,2.505,137.033],[227,1.797,453.425],[170,3.324,108.461],[151,2.192,33.94],[150,2.997,5.938],[148,.859,111.43],[119,3.677,2.448],[109,2.416,183.243],[103,.041,.261],[103,4.404,70.328],[102,5.705,.112]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Bg=function(){return[[3837687717,0,0],[16604,4.86319,1.48447],[15807,2.27923,38.13304],[3335,3.682,76.2661],[1306,3.6732,2.9689],[605,1.505,35.164],[179,3.453,39.618],[107,2.451,4.453],[106,2.755,33.68],[73,5.49,36.65],[57,1.86,114.4],[57,5.22,.52],[35,4.52,74.78],[32,5.9,77.75],[30,3.67,388.47],[29,5.17,9.56],[29,5.17,2.45],[26,5.25,168.05]].map(t=>({A:t[0],B:t[1],C:t[2]}))},zg=function(){return[[53893,0,0],[296,1.855,1.484],[281,1.191,38.133],[270,5.721,76.266],[23,1.21,2.97],[9,4.43,35.16],[7,.54,2.45]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Gg=function(){return[[31,0,0],[15,1.35,76.27],[12,6.04,1.48],[12,6.11,38.13]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Hg=function(){return[[114,3.142,0]].map(t=>({A:t[0],B:t[1],C:t[2]}))},kg=function(){return[[3088623,1.4410437,38.1330356],[27780,5.91272,76.26607],[27624,0,0],[15448,3.50877,39.61751],[15355,2.52124,36.64856],[2e3,1.51,74.7816],[1968,4.3778,1.4845],[1015,3.2156,35.1641],[606,2.802,73.297],[595,2.129,41.102],[589,3.187,2.969],[402,4.169,114.399],[280,1.682,77.751],[262,3.767,213.299],[254,3.271,453.425],[206,4.257,529.691],[140,3.53,137.033]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Vg=function(){return[[227279,3.807931,38.133036],[1803,1.9758,76.2661],[1433,3.1416,0],[1386,4.8256,36.6486],[1073,6.0805,39.6175],[148,3.858,74.782],[136,.478,1.484],[70,6.19,35.16],[52,5.05,73.3],[43,.31,114.4],[37,4.89,41.1],[37,5.76,2.97],[26,5.22,213.3]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Jg=function(){return[[9691,5.5712,38.133],[79,3.63,76.27],[72,.45,36.65],[59,3.14,0],[30,1.61,39.62],[6,5.61,74.78]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Wg=function(){return[[273,1.017,38.133],[2,0,0],[2,2.37,36.65],[2,5.33,76.27]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Qg=function(){return[[6,2.67,38.13]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Xg=function(){return[[3007013206,0,0],[27062259,1.32999459,38.13303564],[1691764,3.2518614,36.6485629],[807831,5.185928,1.484473],[537761,4.521139,35.16409],[495726,1.571057,491.557929],[274572,1.845523,175.16606],[135134,3.372206,39.617508],[121802,5.797544,76.266071],[100895,.377027,73.297126],[69792,3.79617,2.96895],[46688,5.74938,33.67962],[24594,.50802,109.94569],[16939,1.59422,71.81265],[14230,1.07786,74.7816],[12012,1.92062,1021.24889],[8395,.6782,146.5943],[7572,1.0715,388.4652],[5721,2.5906,4.4534],[4840,1.9069,41.102],[4483,2.9057,529.691],[4421,1.7499,108.4612],[4354,.6799,32.1951],[4270,3.4134,453.4249],[3381,.8481,183.2428],[2881,1.986,137.033],[2879,3.6742,350.3321],[2636,3.0976,213.2991],[2530,5.7984,490.0735],[2523,.4863,493.0424],[2306,2.8096,70.3282],[2087,.6186,33.9402]].map(t=>({A:t[0],B:t[1],C:t[2]}))},qg=function(){return[[236339,.70498,38.133036],[13220,3.32015,1.48447],[8622,6.2163,35.1641],[2702,1.8814,39.6175],[2155,2.0943,2.9689],[2153,5.1687,76.2661],[1603,0,0],[1464,1.1842,33.6796],[1136,3.9189,36.6486],[898,5.241,388.465],[790,.533,168.053],[760,.021,182.28],[607,1.077,1021.249],[572,3.401,484.444],[561,2.887,498.671]].map(t=>({A:t[0],B:t[1],C:t[2]}))},$g=function(){return[[4247,5.8991,38.133],[218,.346,1.484],[163,2.239,168.053],[156,4.594,182.28],[127,2.848,35.164]].map(t=>({A:t[0],B:t[1],C:t[2]}))},Yg=function(){return[[166,4.552,38.133]].map(t=>({A:t[0],B:t[1],C:t[2]}))};function Er(t){const e=ft(t),n=Fg(),i=Bg(),s=zg(),r=Gg(),a=Hg(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return Re(m/1e8*De)}function Dr(t){const e=ft(t),n=kg(),i=Vg(),s=Jg(),r=Wg(),a=Qg(),o=n.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),c=i.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),l=s.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),u=r.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),d=a.reduce((h,f)=>h+f.A*Math.cos(f.B+f.C*e),0),m=o+c*e+l*Math.pow(e,2)+u*Math.pow(e,3)+d*Math.pow(e,4);return yn(m/1e8*De)}function is(t){const e=ft(t),n=Xg(),i=qg(),s=$g(),r=Yg(),a=n.reduce((u,d)=>u+d.A*Math.cos(d.B+d.C*e),0),o=i.reduce((u,d)=>u+d.A*Math.cos(d.B+d.C*e),0),c=s.reduce((u,d)=>u+d.A*Math.cos(d.B+d.C*e),0),l=r.reduce((u,d)=>u+d.A*Math.cos(d.B+d.C*e),0);return(a+o*e+c*Math.pow(e,2)+l*Math.pow(e,3))/1e8}function B0(t){return{longitude:Er(t),latitude:Dr(t)}}function jg(t,e=Ze.Mean){return ut(B0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}const Zg={equatorialRadius:24764,meanRadius:24622,mass:102.4126,bulkDensity:1.638,siderealRotationPeriod:.67125,siderealOrbitPeriod:164.79132,visualMagnitude:-6.87,geometricAlbedo:.41,equatorialGravity:11.15,escapeVelocity:23.56},ss={semiMajorAxis:[30.110386869,-1663e-10,0,0],eccentricity:[.00945575,6033e-9,0,-5e-11],[he.MeanOfTheDate]:{meanLongitude:[304.348665,219.8833092,30882e-8,18e-9],inclination:[1.769953,-.0093082,-708e-8,27e-8],longitudeOfAscendingNode:[131.784057,1.1022039,25952e-8,-637e-9],longitudeOfPerihelion:[48.120276,1.4262957,38434e-8,2e-8]},[he.StandardJ2000]:{meanLongitude:[304.348665,218.4862002,59e-8,-2e-9],inclination:[1.769953,2256e-7,23e-8,0],longitudeOfAscendingNode:[131.784057,-.0061651,-219e-8,-78e-9],longitudeOfPerihelion:[48.120276,.0291866,761e-7,0]}};function z0(t){const e=.00607*(ni(t)-2047.5);return e>=0?Math.floor(e):Math.ceil(e)}function Kg(t){const e=z0(t)+.5;return 24688951e-1+60190.33*e+.03429*Math.pow(e,2)}function e_(t){const e=z0(t);return 24688951e-1+60190.33*e+.03429*Math.pow(e,2)}function t_(t,e=he.MeanOfTheDate){return Vi(t,ss[e].meanLongitude)}function ja(t){return Ji(t,ss.semiMajorAxis)}function Za(t){return Wi(t,ss.eccentricity)}function n_(t,e=he.MeanOfTheDate){return Qi(t,ss[e].inclination)}function i_(t,e=he.MeanOfTheDate){return Xi(t,ss[e].longitudeOfAscendingNode)}function s_(t,e=he.MeanOfTheDate){return qi(t,ss[e].longitudeOfPerihelion)}function Ka(t){return Oi(t,Er,Dr,is)}function G0(t){return ii(t,Er,Dr,is)}function H0(t){return Ni(t,Er,Dr,is)}function g2(t,e=Ze.Mean){return ut(G0(t),e===Ze.Mean?fe.getMeanObliquityOfEcliptic(t):fe.getTrueObliquityOfEcliptic(t))}function r_(t){return ut(H0(t),fe.getTrueObliquityOfEcliptic(t))}function a_(t){return Fi(is(t),ja(t))}function o_(t){return Bi(Za(t),ja(t))}function c_(t){return zi(Za(t),ja(t))}function l_(t){return Gi(Za(t),ja(t))}function u_(t,e){return Hi(t,e,g2)}function h_(t,e){return ki(t,e,g2)}function k0(t){const e=is(t),n=fe.getRadiusVector(t),i=Ka(t);return Re(De*Math.acos((e*e+i*i-n*n)/(2*e*i)))}function d_(t){const e=k0(t)*H;return(1+Math.cos(e))/2}function f_(t){const e=is(t),n=Ka(t);return-6.87+5*Math.log10(e*n)}function V0(t){return 33.5/Ka(t)}function p_(t){return V0(t)}const m_={getEclipticLongitude:Er,getEclipticLatitude:Dr,getEclipticCoordinates:B0,getEquatorialCoordinates:jg,getRadiusVector:is,getGeocentricDistance:Ka,getGeocentricEclipticCoordinates:G0,getApparentGeocentricEclipticCoordinates:H0,getGeocentricEquatorialCoordinates:g2,getApparentGeocentricEquatorialCoordinates:r_,getInstantaneousVelocity:a_,getVelocityAtPerihelion:o_,getVelocityAtAphelion:c_,getLengthOfEllipse:l_,getRiseTransitSet:u_,getAccurateRiseTransitSet:h_,getMeanLongitude:t_,getEccentricity:Za,getInclination:n_,getLongitudeOfAscendingNode:i_,getLongitudeOfPerihelion:s_,getAphelion:Kg,getPerihelion:e_,getPhaseAngle:k0,getIlluminatedFraction:d_,getMagnitude:f_,getEquatorialSemiDiameter:V0,getPolarSemiDiameter:p_,constants:Zg,orbitalElements:ss},eo={Mercury:gf,Venus:jf,Mars:Ip,Jupiter:xm,Saturn:ng,Uranus:Ng,Neptune:m_},_2={sun:{name:"Sun",radius:2,segments:32,interval:1},moon:{name:"Moon",radius:1,segments:16,interval:0},Mercury:{name:"Mercury",radius:.3,segments:20,interval:2.5},Venus:{name:"Venus",radius:.6,segments:24,interval:8},Earth:{name:"Earth",radius:.5,segments:24,interval:1},Mars:{name:"Mars",radius:.4,segments:24,interval:20},Jupiter:{name:"Jupiter",radius:.9,segments:36,interval:110},Saturn:{name:"Saturn",radius:.6,segments:32,interval:300},Uranus:{name:"Uranus",radius:.6,segments:24,interval:900},Neptune:{name:"Neptune",radius:.4,segments:24,interval:1800}};function rs(t,e,n=13,i=10){const s=window.devicePixelRatio||1,r=n*s*2,o=document.createElement("canvas").getContext("2d");o.font=`bold ${r}px SF-CRS,Arial, sans-serif`;const c=o.measureText(t).width,l=r*.5,u=Math.max(c+l*2,r+l*2),d=document.createElement("canvas");d.width=u,d.height=u;const m=d.getContext("2d");m.clearRect(0,0,u,u),m.fillStyle=e,m.font=`bold ${r}px SF-CRS,Arial, sans-serif`,m.textAlign="center",m.textBaseline="middle",m.fillText(t,u/2,u/2);const h=new zc(d);h.needsUpdate=!0;const f=new f5({map:h,transparent:!0,depthTest:!1}),g=new Uc(f);return g.scale.set(i,i,1),g}function g_(t,e,n,i,s,r,a,o,c){const l=new St;if(l.name="planets_lines",!a)return;bt.t.bind(bt);const u=Ca.getJulianDay(e),d=eo[t],m=d.getApparentGeocentricEquatorialCoordinates(u);d.getMagnitude(u);const h=Qt(m.rightAscension,m.declination,e,n,i,s);if(c&&h.y<=0)return null;const f=_2[t],g=new Nt(new ti(f.radius,f.segments,f.segments),new kn({color:Dt.planets[t]}));if(g.position.copy(h),l.add(g),o){const p=rs(bt.t(`planets.${t}`),Dt.planets[t]);p.position.copy(h.clone().add(new O(0,2,0))),l.add(p)}return r.add(l),bt.register("planets",{ra:m.rightAscension*lt,dec:m.declination*lt,label:t,xyz:h}),l}function __(t,e,n,i,s,r,a){if(!a)return;const o=new St;if(o.name="orbitLines_lines",!eo[t])return null;const l=M_(t,e,n,s,r);if(l.length===0)return null;const u=new vt().setFromPoints(l),d=new _n({color:new $e(Dt.planets[t]),opacity:.7}),m=new Tn(u,d);return i.add(m),m}function M_(t,e,n,i,s){const r=[],a=Ca.getJulianDay(e),o=v_(t,a);if(!o)return r;x_(o.semiMajorAxis);const c=t==="Neptune"?365*10:t==="Uranus"?365*5:t==="Jupiter"?365*3:t==="Mars"?687:365,u={mercury:720,venus:540,earth:360,mars:360,jupiter:360,saturn:360,uranus:400,neptune:400,pluto:500}[t.toLowerCase()];for(let d=0;d<=u;d++){const m=d/u*c,h=a+m,f=eo[t].getApparentGeocentricEquatorialCoordinates(h),g=Qt(f.rightAscension,f.declination,e,i,s,n);isNaN(g.x)||r.push(g)}return r}function v_(t,e){const n=eo[t];return n?{semiMajorAxis:n.orbitalElements.semiMajorAxis[0],eccentricity:n.getEccentricity(e),inclination:n.getInclination(e),longitudeOfAscendingNode:n.getLongitudeOfAscendingNode(e),longitudeOfPerihelion:n.getLongitudeOfPerihelion(e),meanLongitude:n.getMeanLongitude(e)}:null}function x_(t){return Math.sqrt(Math.pow(t,3))*365.256}function S_(t,e,n,i,s,r,a,o){const c=new St;if(c.name="planets_lines",!r)return;const l=Ca.getJulianDay(t),u=cn.getApparentGeocentricEquatorialCoordinates(l),d=Qt(u.rightAscension,u.declination,t,e,n,i);if(o&&d.y<=0)return null;const m=_2.sun,h=new Nt(new ti(m.radius,m.segments,m.segments),new kn({color:Dt.planets.sun}));if(h.position.copy(d),c.add(h),a){const f=rs(bt.t(m.name),Dt.planets.sun);f.position.copy(d.clone().add(new O(0,6,0))),c.add(f)}return s.add(c),bt.register("sun",{ra:u.rightAscension*lt,dec:u.declination*lt,label:"Sun",xyz:d}),c}function T_(t,e,n,i,s,r,a,o){const c=new St;if(c.name="planets_lines",!r)return;const l=Ca.getJulianDay(t),u=fe.Moon.getApparentGeocentricEquatorialCoordinates(l),d=Qt(u.rightAscension,u.declination,t,e,n,i);if(o&&d.y<=0)return null;const m=_2.moon,h=new Nt(new ti(m.radius,m.segments,m.segments),new kn({color:Dt.planets.moon}));if(h.position.copy(d),c.add(h),a){const f=rs(bt.t(m.name),Dt.planets.moon);f.position.copy(d.clone().add(new O(0,4,0))),c.add(f)}return s.add(c),bt.register("moon",{ra:u.rightAscension*lt,dec:u.declination*lt,label:"Moon",xyz:d}),c}function y_(t){var n;if(!t)return"";const e=document.createElement("div");return e.innerHTML=t,((n=e.childNodes[0])==null?void 0:n.nodeValue)||""}const E_={QUA:{name:"Quadrantids",date:[[12,30],[1,10]],pos:[[228,50],[234,48]]},DLM:{name:"December Leonis Minorids",date:[[12,5],[2,5]],pos:[[149,37],[234,48]]},ACE:{name:"&alpha;-Centaurids",date:[[1,28],[2,21]],pos:[[200,-57],[225,-63]]},GNO:{name:"&gamma;-Normids",date:[[2,25],[3,22]],pos:[[225,-51],[245,-49]]},LYR:{name:"Lyrids",date:[[4,16],[4,25]],pos:[[263,34],[269,34]]},PPU:{name:"&pi;-Puppids",date:[[4,15],[4,28]],pos:[[106,-44],[111,-45]]},ETA:{name:"&eta;-Aquariids",date:[[4,19],[5,28]],pos:[[323,-7],[353,7]]},ELY:{name:"&eta;-Lyrids",date:[[5,3],[5,14]],pos:[[283,44],[293,45]]},JBO:{name:"June Bootids",date:[[6,22],[7,2]],pos:[[223,48],[225,47]]},CAP:{name:"&alpha;-Capricornids",date:[[7,3],[8,15]],pos:[[285,-16],[318,-6]]},SDA:{name:"South &delta;-Aquariids",date:[[7,12],[8,23]],pos:[[325,-19],[356,-11]]},PER:{name:"Perseids",date:[[7,17],[8,24]],pos:[[6,50],[63,58]]},PAU:{name:"Piscis Austrinids",date:[[7,15],[8,10]],pos:[[330,-34],[352,-26]]},KCG:{name:"&kappa;-Cygnids",date:[[8,3],[8,25]],pos:[[283,58],[289,60]]},AUR:{name:"&alpha;-Aurigids",date:[[8,28],[9,5]],pos:[[85,40],[102,38]]},SPE:{name:"September ε-Perseids",date:[[9,5],[9,21]],pos:[[43,40],[59,41]]},STA:{name:"Southern Taurids",date:[[9,10],[11,20]],pos:[[12,3],[64,16]]},ORI:{name:"Orionids",date:[[10,2],[11,7]],pos:[[85,14],[105,17]]},DAU:{name:"&delta;-Aurigids",date:[[10,10],[10,18]],pos:[[82,45],[92,41]]},DRA:{name:"Draconids",date:[[10,6],[10,10]],pos:[[262,54],[262,54]]},EGE:{name:"&epsilon;-Geminids",date:[[10,14],[10,27]],pos:[[99,27],[109,27]]},LMI:{name:"Leo Minorids",date:[[10,19],[10,27]],pos:[[158,39],[168,35]]},NTA:{name:"Northern Taurids",date:[[10,20],[12,10]],pos:[[38,18],[74,24]]},LEO:{name:"Leonids",date:[[11,6],[11,30]],pos:[[147,24],[159,19]]},AMO:{name:"&alpha;-Monocerotids",date:[[11,15],[11,25]],pos:[[117,1],[117,1]]},PHO:{name:"Phoenicids",date:[[11,28],[12,9]],pos:[[14,-52],[22,-53]]},PUP:{name:"Puppid/Velids",date:[[12,1],[12,15]],pos:[[120,-45],[128,-45]]},MON:{name:"Monocerotids",date:[[11,27],[12,17]],pos:[[100,8],[100,8]]},GEM:{name:"Geminids",date:[[12,7],[12,17]],pos:[[103,33],[118,32]]},HYD:{name:"&sigma;-Hydrids",date:[[12,3],[12,15]],pos:[[122,3],[130,1]]},COM:{name:"Comae Berenicids",date:[[12,12],[12,23]],pos:[[174,19],[180,16]]},URS:{name:"Ursids",date:[[12,17],[12,26]],pos:[[217,76],[217,74]]}},D_={showers:E_},B3=Dt.normal.showers,mi=D_.showers;function A_(t,e,n,i,s,r){const a=new St;if(a.name="MeteorShowers",!r||!mi||typeof mi=="string")return;let o,c,l,u,d,m,h,f,g;const p=t.getFullYear();for(const _ in mi)if(mi[_]&&(m=mi[_].date,h=mi[_].pos,f=new Date(p,m[0][0]-1,m[0][1]),g=new Date(p,m[1][0]-1,m[1][1]),f>g&&t<f&&(f=new Date(p-1,m[0][0]-1,m[0][1])),t>f&&t<g)){l=h[1][0]-h[0][0],u=h[1][1]-h[0][1],d=(t.getTime()-f.getTime())/(g.getTime()-f.getTime());const D=h[0][0]+l*d,T=h[0][1]+u*d;o=Qt(D,T,t,e,n,i),c=y_(mi[_].name);const S=new ti(.3,8,8),L=new kn({color:B3,transparent:!0,opacity:.8}),A=new Nt(S,L);A.position.copy(o),a.add(A);const w=rs(c,B3);w.position.copy(o.clone().add(new O(0,2,0))),a.add(w),bt.register("meteorshower",{ra:D*lt,dec:T*lt,label:c,xyz:o})}return s.add(a),a}class b_{constructor(e){Le(this,"scene");Le(this,"azOff");Le(this,"labels",[]);this.scene=e.scene,this.azOff=e.az,this.create(e.radius)}create(e){const n=bt.t.bind(bt),i=[0,90,180,270],s=[n("N"),n("E"),n("S"),n("W")];for(let r=0;r<i.length;r++){const a=cr(i[r],this.azOff),o=wi(a,0,e*1.02),c=rs(s[r],Dt.normal.cardinal,25);c.position.copy(o),c.position.y+=1,c.position.x+=1,this.scene.add(c),this.labels.push(c)}}remove(){for(const e of this.labels)this.scene.remove(e),e.material.map&&e.material.map.dispose(),e.material.dispose();this.labels=[]}}const w_=[["And",12.113,37.432,677,3092,3092,5447,9640,5447,5447,4436,4436,3881],["Ant",155,-34,51172,48926],["Aps",242.16,-75.3,72370,81065,81065,81852],["Aqr",340,-10,106278,109074,109074,110395,110395,110960,110960,111497,111497,112961,112961,114855,114855,115438,109074,110003,110003,109139,110003,111123,111123,112716,112716,113136,113136,114341,102618,106278],["Aql",295,3.4106,98036,97649,97649,97278,97649,95501,95501,97804,99473,97804,95501,93747,93747,93244,95501,93805],["Ara",260.62,-52,88714,85792,85792,83081,83081,82363,82363,85727,85727,85267,85267,85258,85258,88714],["Ari",39.538,20.792,13209,9884,9884,8903,8903,8832],["Aur",91.104,42.028,28380,28360,28360,24608,24608,23453,23453,23015,25428,23015,25428,28380],["Boo",220.66,31,71795,69673,69673,72105,72105,74666,74666,73555,73555,71075,71075,71053,71053,69673,69673,67927,67927,67459],["Cae",73,-38,21060,21770,21770,21861],["Cam",90,70,16228,18505,18505,22783,22783,17959,17959,16228,17959,25110],["Cnc",129.74,19.806,43103,42806,42806,40843,42806,42911,42911,40526,42911,44066],["CVn",196.74,40.102,61317,63125],["CMa",102.43,-22.14,33160,34045,34045,33347,33347,32349,32349,33977,33977,34444,34444,35037,35037,35904,33579,33856,33856,34444,33856,33165,33165,31592,31592,31416,31592,30324,31592,32349,33579,32759,30122,33579,33347,33160],["CMi",114.79,6.4269,37279,36188],["Cap",315,-21,100064,100345,100345,104139,104139,105515,105515,106985,106985,107556,105515,105881,105881,104139,100345,102485,104139,102978],["Car",130,-60,45238,50099,50099,52419,52419,52468,52468,54463,54463,53253,53253,51232,51232,50371,50371,45556,42568,41037,41037,30438,45080,45556,45080,42568,30438,31685,41037,39429],["Cas",19.788,62.184,8886,6686,6686,4427,4427,3179,3179,746],["Cen",196.07,-47.345,71683,68702,68702,66657,66657,68002,68002,68282,68282,67472,67472,67464,67464,65936,65936,65109,67464,68933,67472,71352,71352,73334,68002,61932,61932,60823,60823,59196,59196,56480,56480,56561],["Cep",340,71.008,109492,112724,112724,106032,106032,105199,105199,109492,112724,116727,116727,106032],["Cet",25.025,-7.1792,10324,11484,8102,3419,3419,1562,3419,5364,5364,6537,6537,8645,8645,11345,11345,12390,12390,12770,12770,11783,11783,8102,10826,12390,10826,12387,12387,12706,12706,14135,14135,13954,13954,12828,12828,11484,11484,12093,12093,12706],["Cha",160.38,-80,40702,51839,51839,6e4],["Cir",225,-63,71908,75323,71908,74824],["Col",87.938,-35.094,30277,29807,29807,28199,28199,27628,27628,28328,27628,26634,26634,25859],["Com",191.82,23.306,64241,64394,64394,60742],["CrA",280,-41,91875,92989,92989,93174,93174,93825,93825,94114,94114,94160,94160,94005,94005,93542,93542,92953,91875,90887],["CrB",235,28.2,76127,75695,75695,76267,76267,76952,76952,77512,77512,78159,78159,78493],["Crv",186.63,-18.436,61174,60965,60965,59803,59803,59316,59316,59199,59316,61359,61359,60965],["Crt",170.94,-15.929,53740,54682,54682,55705,55705,55282,55282,53740,55282,55687,55687,56633,56633,58188,58188,57283,57283,55705],["Cru",186.75,-60.186,61084,60718,62434,59747],["Cyg",300.82,35.545,94779,95853,95853,97165,97165,100453,100453,102098,100453,102488,102488,104732,104732,107310,100453,98110,98110,95947],["Del",310.4,11.671,101421,101769,101769,101958,101958,102532,102532,102281,102281,101769],["Dor",80,-65,27100,27890,27890,26069,26069,27100,26069,21281,21281,19893],["Dra",250,60,87585,87833,87833,85670,85670,85829,85829,87585,87585,94376,94376,97433,97433,89937,89937,83895,83895,80331,80331,78527,78527,75458,75458,68756,68756,61281,61281,56211],["Equ",317.81,7.7581,104521,104858,104858,105570,105570,104987,104987,104521],["Eri",63,-28.756,7588,9007,9007,10602,10602,11407,11407,12413,12413,12486,12486,13847,13847,15510,15510,17797,17797,17874,17874,20042,20042,20535,20535,21393,21393,17651,17651,16611,16611,15474,15474,14146,14146,12843,12843,13701,13701,15197,15197,16537,16537,17378,17378,21444,21444,22109,22109,22701,22701,23875,23875,23972,23972,21594],["For",41.967,-31.634,13147,14879],["Gem",106.06,22.6,31681,34088,34088,35550,35550,35350,35350,32362,35550,36962,36962,37740,36962,37826,36962,36046,36046,34693,34693,36850,34693,33018,34693,32246,32246,30883,32246,30343,30343,29655,29655,28734],["Gru",336.85,-46.352,114131,110997,110997,109268,109268,112122,112122,114421,114421,114131,112122,113638,112122,112623,109268,109111,109111,108085],["Her",260.79,27.499,86414,87808,87808,85112,85112,84606,84606,84380,84380,81833,81833,81126,81126,79992,79992,77760,81833,81693,81693,80816,80816,80170,81693,83207,83207,85693,85693,84379,86974,87933,87933,88794,87933,86974,83207,84380],["Hor",49.138,-53.336,19747,12484,12484,14240],["Hya",154,-20,42799,42402,42402,42313,42313,43109,43109,43234,43234,42799,43234,43813,43813,45336,45336,46776,46776,46509,46509,46390,46390,48356,48356,49841,49841,51069,51069,52943,52943,56343,56343,57936,57936,64166,64166,64962],["Hyi",35.158,-69.956,2021,17678,17678,12394,12394,11001,11001,9236],["Ind",320,-55,105319,101772,101772,103227,103227,105319],["Lac",336.92,46.042,109937,111104,111104,111022,111022,110609,110609,110538,110538,111169,111169,111022],["Leo",160,13.139,57632,54879,54879,49669,49669,49583,49583,50583,50583,54872,54872,57632,50583,50335,50335,48455,48455,47908,54872,54879],["LMi",153.68,32.134,53229,51233,51233,49593,49593,46952,49593,53229],["Lep",83.487,-19.046,28910,28103,28103,27288,27288,25985,25985,24305,25985,27654,27654,27072,27072,25606,25606,23685,25985,25606,24305,24845,24305,24327,23685,24305,24327,24244,24845,24873],["Lib",227.99,-15.234,77853,76333,76333,74785,74785,72622,72622,73714,73714,76333],["Lup",232,-42,77634,78970,78970,78384,78384,77634,78384,76297,76297,75141,75141,75177,75141,73273,76297,76552,76552,74395,74395,71860,74395,71536,71860,70576,71860,73273],["Lyn",119.88,47.467,45860,45688,45688,44700,44700,44248,44248,41075,41075,36145,36145,33449,33449,30060],["Lyr",282.79,36.689,91262,91971,91971,92420,92420,93194,93194,92791,92791,91971],["Men",81.221,-77.504,25918,21949],["Mic",314.47,-36.275,105140,103738,103738,102831],["Mon",105.9,.28194,29651,30867,30867,34769,34769,30419,30419,29151,34769,39863,39863,37447],["Mus",188.82,-70.161,62322,57363,57363,61199,61199,61585,61585,62322],["Nor",240,-51.351,79509,8e4,8e4,80582,80582,78639,78639,8e4,78639,79509],["Oct",320,-85,107089,112405,112405,70638,70638,107089],["Oph",258,-4,86032,86742,84012,86742,86032,83e3,83e3,79882,79882,81377,81377,84012,84012,85755],["Ori",83.646,6,26727,26311,26311,25930,28691,29426,29426,29038,29038,27913,29426,28614,28614,27989,27989,26727,26727,27366,27366,24436,24436,25930,25930,25336,25336,26207,26207,27989,25336,22449,22449,22549,22549,22730,22730,23123,22449,22509,22509,22845,29038,28614],["Pav",294.18,-65.781,100751,105858,105858,102395,102395,99240,99240,100751,99240,98495,98495,91792,91792,93015,93015,99240,93015,92609,92609,90098,90098,88866,88866,92609,88866,86929],["Peg",340.46,19.466,1067,113963,113881,112158,112158,109352,113881,112748,112748,112440,112440,109176,109176,107354,113963,112447,112447,112029,112029,109427,109427,107315,677,113881,677,1067,113881,113963],["Per",55,45,17448,18246,18246,18614,18614,18532,18532,17358,17358,15863,15863,14328,14328,13268,15863,14576,14576,14354,14354,13254],["Phe",13.975,-48.581,5348,5165,5165,2072,2072,5348,5165,7083,7083,8837,8837,5165,5165,6867,6867,2072,2072,2081,2081,765,765,2072],["Pic",85.612,-53.474,32607,27530,27530,27321],["Psc",15,12,4889,5742,4889,6193,6193,5742,5742,7097,7097,8198,8198,9487,9487,8833,8833,7884,7884,7007,7007,4906,4906,3760,3760,1645,1645,118268,118268,116771,116771,116928,116928,115738,115738,114971,114971,115830,115830,116771],["PsA",334.27,-30.642,113368,111954,111954,108661,108661,107608,107608,109422,109422,111188,111188,113246],["Pup",118,-30,39757,38146,38146,35264,35264,31685,31685,32768,32768,36377,36377,39429,39429,39757],["Pyx",134.29,-27.352,42515,42828,42828,43409],["Ret",58.817,-59.998,19780,19921,19921,18597,18597,17440,17440,19780],["Sge",294.76,18.861,96837,97365,97365,96757,97365,98337,98337,98920],["Sgr",286.48,-28.477,89931,90496,89642,90185,90185,88635,88635,87072,88635,89931,89931,90185,90185,93506,93506,92041,92041,89931,92041,90496,90496,89341,93506,93864,93864,92855,92855,92041,92855,93085,93085,93683,93683,94820,94820,95168,93864,96406,96406,98688,98688,98412,98412,98032,98032,95347,98032,95294],["Sco",250,-35,85927,86670,86670,87073,87073,86228,86228,84143,84143,82671,82671,82514,82514,82396,82396,81266,81266,80763,80763,78401,80763,78265,80763,78820],["Scl",6.5667,-32.088,116231,4577,4577,115102,115102,116231],["Sct",280.1,-9.8886,92175,92202,92202,92814,92814,90595,90595,91117,91117,92175],["Ser",242,6.4,77516,77622,77622,77070,77070,76276,76276,77233,77233,78072,78072,77450,77450,77233,92946,89962,89962,86565,86565,86263,86263,84880],["Sex",154.07,-2.6144,51437,49641],["Tau",65,14.877,25428,21881,21881,20889,21421,26451,20205,20455,20205,18724,18724,15900,21421,20889,21421,20894,20894,20205,20889,20648,20648,20455,20455,17847],["Tel",289.88,-51.037,90568,90422],["Tri",30,32,10559,10064,10064,8796,8796,10559],["TrA",241.24,-65.388,82273,74946,74946,77952,77952,82273],["Tuc",0,-65,110130,114996,114996,1599,114996,2484],["UMa",160,50,67301,65378,65378,62956,62956,59774,59774,54061,54061,53910,53910,58001,58001,59774,58001,57399,57399,54539,54539,50372,54539,50801,53910,48402,48402,46853,46853,44471,46853,44127,48402,48319,48319,41704,41704,46733,46733,54061],["UMi",225,74,11767,85822,85822,82080,82080,77055,77055,79822,79822,75097,75097,72607,72607,77055],["Vel",143.66,-47.167,39953,42536,42536,42913,42913,45941,45941,48774,48774,52727,52727,51986,51986,50191,50191,46651,46651,44816,44816,39953],["Vir",201.1,-4.1583,57380,60030,60030,61941,61941,65474,65474,69427,69427,69701,69701,71957,65474,66249,66249,68520,68520,72220,66249,63090,63090,63608,63090,61941],["Vol",116.93,-69.801,37504,34481,34481,39794,39794,37504,39794,35228,39794,41312,41312,44382,44382,39794],["Vul",305,25,95771,98543]],C_={lines:w_};async function R_(t,e,n,i,s,r,a,o){const c=new St;c.name="constellation_lines";const l=50,u=Dt.normal.constellation,d=await ju(),m=new Map;d.forEach(p=>{m.set(p.label,p)});const h=C_.lines,{constellations:f}=L_(h),g=new _n({color:u,transparent:!0,opacity:.8});for(const p of f){const _=[];if(a){for(const[D,T]of p.lines){const S=m.get(Number(D)),L=m.get(Number(T));if(!S||!L)continue;const A=Qt(S.ra,S.dec,t,e,n,i),w=Qt(L.ra,L.dec,t,e,n,i);A.angleTo(w)*B1.RAD2DEG>l||r&&A.y<0||r&&w.y<0||_.push(A,w)}if(_.length>0){const D=new vt().setFromPoints(_),T=new Nc(D,g);c.add(T)}}if(o){const D=Qt(p.centerRA,p.centerDec,t,e,n,i);if(r&&D.y<0)continue;const T=rs(p.name,u);T.position.copy(D.clone().add(new O(0,4,0))),c.add(T)}}return s.add(c),c}function L_(t){return{constellations:t.map(n=>{const i=String(n[0]),s=Number(n[1]),r=Number(n[2]),a=[];for(let o=3;o<n.length;o+=2)a.push([n[o].toString(),n[o+1].toString()]);return{name:i,centerRA:s,centerDec:r,lines:a}})}}const P_=JSON.parse('[["and",344.47,35.17,344.34,53.17,351.45,53.19,351.47,50.69,355.27,50.69,355.28,48.69,4.15,48.69,4.14,46.69,14.78,46.68,14.79,48.68,18.59,48.66,18.61,50.66,22.41,50.65,26.97,50.63,26.93,47.63,32.62,47.59,32.67,51.09,39.89,51.04,39.68,37.29,31.87,37.35,31.85,35.6,22.91,35.65,22.9,33.65,12.44,33.68,12.41,24.43,14.42,24.43,14.41,21.68,3.74,21.7,3.74,22.7,2.61,22.7,2.61,28.7,1.61,28.7,1.61,32.03,357.83,32.03,357.83,32.78,354.05,32.77,354.04,35.19,344.47,35.17],["ant",141.9,-24.54,141.77,-37.29,141.73,-40.29,166.46,-40.42,166.48,-35.67,163.96,-35.67,163.98,-31.83,160.2,-31.82,160.21,-29.82,155.18,-29.79,155.2,-27.13,147.66,-27.08,147.68,-24.58,141.9,-24.54],["aps",209.11,-83.12,276.87,-82.46,274.2,-74.97,273.28,-67.48,265.78,-67.57,258.24,-67.66,258.47,-70.16,224.17,-70.51,207.46,-70.62,207.78,-75.62,209.11,-83.12],["aql",280.35,0.12,280.33,2.12,284.58,2.17,284.53,6.42,281.46,6.38,281.39,12.13,284.46,12.17,284.37,18.66,286.38,18.69,286.41,16.36,298.92,16.5,298.93,16.08,303.56,16.13,303.64,8.88,306.01,8.9,306.08,2.4,309.58,2.44,309.6,0.44,309.68,-8.56,301.69,-8.64,301.73,-11.68,284.74,-11.87,284.65,-3.83,280.4,-3.88,280.35,0.12],["aqr",309.6,0.44,309.58,2.44,314.08,2.48,321.58,2.54,323.58,2.55,323.58,3.3,326.58,3.33,326.59,2.33,331.59,2.36,331.59,2.61,342.84,2.66,342.85,0.66,342.86,-3.34,359.1,-3.3,359.1,-6.3,359.11,-24.8,346.68,-24.83,329.77,-24.9,329.66,-8.4,321.67,-8.46,321.72,-14.46,309.74,-14.56,309.68,-8.56,309.6,0.44],["ara",249.03,-60.26,248.57,-45.77,269.81,-45.52,272.31,-45.49,272.67,-56.98,265.17,-57.07,265.78,-67.57,258.24,-67.66,255.72,-67.69,255.54,-65.19,254.28,-65.21,254.2,-63.79,251.68,-63.82,251.54,-61.24,249.08,-61.26,249.03,-60.26],["ari",31.67,10.51,26.66,10.54,26.74,25.63,30.51,25.61,30.53,27.86,38.07,27.8,38.1,31.22,42.63,31.19,52.43,31.1,52.29,19.43,51.04,19.45,50.95,10.36,31.67,10.51],["aur",69.49,30.92,69.57,36.25,72.46,36.22,72.84,52.72,77.48,52.67,77.61,56.16,94.13,55.97,94.06,53.97,100.05,53.89,99.92,49.89,104.41,49.84,104.27,44.34,112.73,44.24,112.56,35.24,100.09,35.39,99.97,27.89,90.22,28.01,90.23,28.51,73.21,28.71,73.24,30.21,69.48,30.26,69.49,30.92],["boo",227.78,7.53,204.06,7.36,204.03,14.36,203.95,27.86,210.79,27.9,210.77,30.15,211.89,30.15,211.7,47.9,211.58,54.9,217.25,54.94,229.59,55.04,229.66,52.55,237.08,52.62,237.12,51.12,237.37,39.62,232.64,39.57,232.75,32.57,229.02,32.54,229.1,25.54,227.61,25.52,227.78,7.53],["cae",65.08,-39.7,64.88,-48.7,68.36,-48.74,68.42,-46.24,73.4,-46.3,73.48,-42.8,75.97,-42.83,76.25,-27.08,73.76,-27.05,71.76,-27.02,71.72,-29.77,69.98,-29.75,69.86,-36.75,65.13,-36.7,65.08,-39.7],["cam",94.13,55.97,77.61,56.16,77.48,52.67,72.84,52.72,52.31,52.94,52.38,55.44,49.85,55.46,49.91,57.46,48.9,57.47,49.4,68.47,54.24,68.42,55.31,77.42,56.73,77.4,57.53,80.4,80.49,80.15,84.54,85.12,127.95,84.61,130.4,86.1,213.02,85.93,216.78,79.44,203.81,79.36,204.16,76.36,195.82,76.33,174.43,76.31,174.53,79.31,162.82,79.34,163.11,81.34,142.19,81.47,140.62,72.97,123.09,73.14,122.13,59.64,107.75,59.8,107.85,61.8,94.41,61.96,94.13,55.97],["cap",309.68,-8.56,301.69,-8.64,301.73,-11.68,301.92,-27.64,306.9,-27.59,321.83,-27.46,321.81,-24.96,329.77,-24.9,329.66,-8.4,321.67,-8.46,321.72,-14.46,309.74,-14.56,309.68,-8.56],["car",170.16,-57.18,166.34,-57.17,133.32,-56.97,133.38,-54.97,127.57,-54.92,127.61,-53.42,123.32,-53.38,123.38,-51.13,120.86,-51.1,90.75,-50.75,90.69,-52.5,93.19,-52.53,93.11,-55.03,98.11,-55.09,98,-58.09,103.01,-58.15,102.7,-64.15,136.09,-64.5,135.24,-75.5,169.86,-75.68,170.08,-64.68,170.16,-57.18],["cas",344.34,53.17,344.3,56.92,344.27,59.75,348.86,59.76,348.82,63.68,355.22,63.69,355.2,66.69,6.76,66.69,6.92,77.69,55.31,77.42,54.24,68.42,49.4,68.47,48.9,57.47,38.76,57.55,38.8,59.05,30.8,59.1,30.77,58.1,27.6,58.12,27.53,54.62,22.46,54.65,22.41,50.65,18.61,50.66,18.59,48.66,14.79,48.68,14.78,46.68,4.14,46.69,4.15,48.69,355.28,48.69,355.27,50.69,351.47,50.69,351.45,53.19,344.34,53.17],["cen",166.48,-35.67,166.46,-40.42,166.34,-57.17,170.16,-57.18,170.08,-64.68,179.06,-64.7,179.07,-55.7,194.33,-55.68,194.44,-64.68,204.68,-64.64,220.51,-64.54,220.23,-55.54,214.66,-55.58,214.45,-42.58,225.8,-42.49,225.63,-29.99,190.42,-30.19,190.43,-33.69,185.39,-33.69,185.39,-35.69,166.48,-35.67],["cep",300.57,59.85,300.49,61.85,306.81,61.91,306.52,67.41,310.33,67.45,309.57,75.45,301.87,75.37,300.67,80.36,313.71,80.49,308.72,86.47,308.33,86.63,343.51,86.84,339.26,88.66,135.83,87.57,130.4,86.1,127.95,84.61,84.54,85.12,80.49,80.15,57.53,80.4,56.73,77.4,55.31,77.42,6.92,77.69,6.76,66.69,355.2,66.69,355.22,63.69,348.82,63.68,348.86,59.76,344.27,59.75,344.3,56.92,335.91,56.88,335.93,55.63,333.14,55.62,333.17,53.37,330.64,53.35,330.6,55.44,309.83,55.28,309.62,61.36,308.66,61.35,308.72,59.93,300.57,59.85],["cet",6.6,0.69,6.6,2.69,31.62,2.6,31.67,10.51,50.95,10.36,50.85,0.45,50.84,-1.3,41.34,-1.22,41.15,-23.85,26.47,-23.76,26.46,-24.87,359.11,-24.8,359.1,-6.3,6.59,-6.31,6.6,0.69],["cha",111.65,-82.78,209.11,-83.12,207.78,-75.62,169.86,-75.68,135.24,-75.5,114.21,-75.29,111.65,-82.78],["cir",204.68,-64.64,204.71,-65.64,207.27,-65.62,207.46,-70.62,224.17,-70.51,224,-68.01,226.56,-67.99,226.35,-64.08,230.17,-64.04,230.05,-61.46,232.59,-61.44,232.55,-60.44,232.38,-55.44,228.08,-55.48,220.23,-55.54,220.51,-64.54,204.68,-64.64],["cma",93.22,-11.03,111.97,-11.25,111.68,-33.25,99.9,-33.11,92.9,-33.03,92.99,-27.28,93.22,-11.03],["cmi",122.85,-0.37,109.6,-0.22,109.62,1.28,106.87,1.31,106.91,5.31,106.66,5.31,106.72,9.81,106.75,12.31,114.24,12.22,114.25,13.22,118.87,13.17,118.83,9.67,120.58,9.65,120.55,6.65,122.92,6.63,122.85,-0.37],["cnc",140.4,6.47,122.92,6.63,120.55,6.65,120.58,9.65,118.83,9.67,118.87,13.17,118.95,19.67,120.07,19.66,120.17,27.66,121.92,27.64,121.99,33.14,140.65,32.97,140.4,6.47],["col",75.97,-42.83,76.25,-27.08,92.99,-27.28,92.9,-33.03,99.9,-33.11,99.71,-43.11,90.95,-43.01,75.97,-42.83],["com",179.6,13.3,179.61,28.3,181.6,28.3,181.59,33.3,186.55,33.31,186.56,31.31,200.21,31.34,200.23,27.84,203.95,27.86,204.03,14.36,194.06,14.32,194.06,13.32,179.6,13.3],["cra",269.63,-37.02,289.6,-36.78,289.77,-45.28,272.31,-45.49,269.81,-45.52,269.63,-37.02],["crb",229.1,25.54,229.02,32.54,232.75,32.57,232.64,39.57,237.37,39.62,246.07,39.71,246.28,26.71,243.79,26.69,243.8,25.69,241.81,25.66,229.1,25.54],["crt",162.83,-6.66,162.81,-11.66,162.78,-19.66,164.03,-19.67,164.01,-25.17,179.09,-25.2,179.1,-11.7,179.1,-6.7,174.34,-6.69,162.83,-6.66],["cru",179.07,-55.7,179.06,-64.7,194.44,-64.68,194.33,-55.68,179.07,-55.7],["crv",194.13,-11.68,179.1,-11.7,179.09,-25.2,190.4,-25.19,190.4,-22.69,194.17,-22.68,194.13,-11.68],["cvn",181.59,33.3,181.59,44.3,182.83,44.3,182.82,52.3,203.74,52.36,203.8,47.86,211.7,47.9,211.89,30.15,210.77,30.15,210.79,27.9,203.95,27.86,200.23,27.84,200.21,31.34,186.56,31.31,186.55,33.31,181.59,33.3],["cyg",290.13,27.73,290.1,30.23,291.6,30.25,291.49,36.75,292.12,36.76,291.98,43.76,288.47,43.71,288.38,47.71,287.12,47.7,286.88,55.7,291.9,55.76,291.81,58.26,297.1,58.31,297.04,59.81,300.57,59.85,308.72,59.93,308.66,61.35,309.62,61.36,309.83,55.28,330.6,55.44,330.64,53.35,330.76,44.6,329.88,44.6,329.88,44.35,329.38,44.35,329.46,36.6,327.32,36.58,327.4,28.58,322.62,28.55,315.08,28.49,315.07,29.49,296.25,29.3,296.27,27.8,290.13,27.73],["del",309.58,2.44,306.08,2.4,306.01,8.9,303.64,8.88,303.56,16.13,305.19,16.14,305.13,20.89,309.9,20.94,309.91,19.94,317.18,20,317.25,12.34,314.62,12.32,314.67,6.48,314.05,6.48,314.08,2.48,309.58,2.44],["dor",58.32,-52.8,60.8,-52.82,60.69,-56.16,65.65,-56.21,65.55,-58.71,69.27,-58.75,68.79,-67.25,68.58,-69.75,98.45,-70.1,98.94,-64.11,90.17,-64,90.35,-61,82.86,-60.91,83.02,-57.41,75.55,-57.32,75.68,-53.82,68.22,-53.74,68.36,-48.74,64.88,-48.7,62.15,-48.67,62.1,-50.67,58.38,-50.63,58.32,-52.8],["dra",140.62,72.97,142.19,81.47,163.11,81.34,162.82,79.34,174.53,79.31,174.43,76.31,195.82,76.33,196.1,69.33,210.65,69.4,210.82,65.4,235.33,65.6,235.05,69.6,247.84,69.74,247.22,74.73,261.54,74.9,260.22,79.9,267.66,79.99,261.72,85.95,308.72,86.47,313.71,80.49,300.67,80.36,301.87,75.37,309.57,75.45,310.33,67.45,306.52,67.41,306.81,61.91,300.49,61.85,300.57,59.85,297.04,59.81,297.1,58.31,291.81,58.26,291.9,55.76,286.88,55.7,287.12,47.7,274.34,47.55,274.26,50.55,255.79,50.32,255.76,51.32,237.12,51.12,237.08,52.62,229.66,52.55,229.59,55.04,217.25,54.94,217.05,62.44,203.57,62.36,203.55,63.36,181.58,63.3,181.58,65.8,171.85,65.81,171.96,72.81,140.62,72.97],["equ",314.08,2.48,314.05,6.48,314.67,6.48,314.62,12.32,317.25,12.34,318.25,12.35,318.24,13.01,321.5,13.04,321.58,2.54,314.08,2.48],["eri",55.35,0.4,70.85,0.24,71.6,0.23,71.56,-3.77,77.8,-3.84,77.72,-10.84,75.22,-10.81,75.18,-14.31,73.93,-14.3,73.76,-27.05,71.76,-27.02,71.72,-29.77,69.98,-29.75,69.86,-36.75,65.13,-36.7,65.08,-39.7,59.11,-39.64,59.03,-43.64,52.33,-43.57,52.29,-45.57,46.09,-45.51,46.03,-48.51,41.09,-48.47,41.05,-50.47,37.34,-50.44,37.28,-53.44,33.58,-53.42,33.49,-57.92,21.21,-57.85,21.27,-52.85,24.97,-52.87,24.99,-50.87,28.69,-50.89,28.74,-47.55,36.15,-47.6,36.26,-39.43,46.19,-39.51,46.19,-39.1,53.64,-39.17,53.7,-35.58,57.43,-35.62,57.59,-24,41.15,-23.85,41.34,-1.22,50.84,-1.3,55.34,-1.35,55.35,0.4],["for",26.47,-23.76,41.15,-23.85,57.59,-24,57.43,-35.62,53.7,-35.58,53.64,-39.17,46.19,-39.1,46.19,-39.51,36.26,-39.43,26.35,-39.37,26.46,-24.87,26.47,-23.76],["gem",96.37,11.93,96.44,17.43,95.07,17.45,95.12,21.45,90.13,21.51,90.14,22.84,90.22,28.01,99.97,27.89,100.09,35.39,112.56,35.24,118.29,35.18,118.26,33.18,121.99,33.14,121.92,27.64,120.17,27.66,120.07,19.66,118.95,19.67,118.87,13.17,114.25,13.22,114.24,12.22,106.75,12.31,106.72,9.81,105.72,9.82,105.74,11.82,96.37,11.93],["gru",321.93,-36.46,322.04,-44.96,322.12,-49.46,332,-49.39,332.11,-56.39,351.77,-56.31,351.69,-39.31,351.68,-36.31,346.73,-36.32,321.93,-36.46],["her",245.56,3.7,242.81,3.67,242.68,15.67,240.18,15.65,240.11,21.65,241.86,21.66,241.81,25.66,243.8,25.69,243.79,26.69,246.28,26.71,246.07,39.71,237.37,39.62,237.12,51.12,255.76,51.32,255.79,50.32,274.26,50.55,274.34,47.55,273.47,47.54,273.82,30.04,276.7,30.07,276.76,26.07,284.27,26.16,284.28,25.66,284.34,21.25,284.37,18.66,284.46,12.17,281.39,12.13,275.2,12.05,275.17,14.39,260.18,14.21,260.2,12.71,252.7,12.62,252.81,3.79,245.56,3.7],["hor",65.08,-39.7,64.88,-48.7,62.15,-48.67,62.1,-50.67,58.38,-50.63,58.32,-52.8,53.37,-52.75,53.24,-57.08,48.79,-57.04,48.36,-67.04,33.2,-66.92,33.49,-57.92,33.58,-53.42,37.28,-53.44,37.34,-50.44,41.05,-50.47,41.09,-48.47,46.03,-48.51,46.09,-45.51,52.29,-45.57,52.33,-43.57,59.03,-43.64,59.11,-39.64,65.08,-39.7],["hya",122.85,-0.37,122.92,6.63,140.4,6.47,145.4,6.43,145.35,-0.57,145.27,-11.57,162.81,-11.66,162.78,-19.66,164.03,-19.67,164.01,-25.17,179.09,-25.2,190.4,-25.19,190.4,-22.69,194.17,-22.68,215.51,-22.57,215.53,-25.07,225.58,-25,225.63,-29.99,190.42,-30.19,190.43,-33.69,185.39,-33.69,185.39,-35.69,166.48,-35.67,163.96,-35.67,163.98,-31.83,160.2,-31.82,160.21,-29.82,155.18,-29.79,155.2,-27.13,147.66,-27.08,147.68,-24.58,141.9,-24.54,137.64,-24.51,137.68,-19.51,130.16,-19.44,130.18,-17.44,126.93,-17.41,126.99,-11.41,122.73,-11.37,122.85,-0.37],["hyi",68.79,-67.25,68.58,-69.75,67.96,-74.74,52.08,-74.57,50.09,-82.06,1.53,-81.8,1.57,-74.3,12.33,-74.32,12.3,-75.32,20.65,-75.35,21.21,-57.85,33.49,-57.92,33.2,-66.92,48.36,-67.04,68.79,-67.25],["ind",323.18,-74.45,352,-74.31,351.86,-66.81,332.4,-66.89,332.11,-56.39,332,-49.39,322.12,-49.46,322.04,-44.96,307.17,-45.09,307.46,-56.59,307.56,-59.59,322.35,-59.46,323.18,-74.45],["lac",329.46,36.6,329.38,44.35,329.88,44.35,329.88,44.6,330.76,44.6,330.64,53.35,333.17,53.37,333.14,55.62,335.93,55.63,335.91,56.88,344.3,56.92,344.34,53.17,344.47,35.17,343.71,35.17,343.71,35.67,331.36,35.61,331.35,36.61,329.46,36.6],["leo",162.85,-0.66,162.88,6.34,145.4,6.43,140.4,6.47,140.65,32.97,150.08,32.9,150.04,27.9,159.24,27.85,159.21,22.85,162.94,22.84,162.95,24.84,166.68,24.83,166.69,28.33,179.61,28.3,179.6,13.3,179.6,10.3,174.37,10.31,174.35,-0.69,174.34,-6.69,162.83,-6.66,162.85,-0.66],["lep",73.76,-27.05,76.25,-27.08,92.99,-27.28,93.22,-11.03,88.97,-10.98,77.72,-10.84,75.22,-10.81,75.18,-14.31,73.93,-14.3,73.76,-27.05],["lib",227.85,-0.47,221.6,-0.53,221.67,-8.53,215.41,-8.57,215.51,-22.57,215.53,-25.07,225.58,-25,225.63,-29.99,236.93,-29.89,236.81,-20.39,240.57,-20.35,240.44,-8.35,240.39,-3.6,227.88,-3.72,227.85,-0.47],["lmi",140.65,32.97,140.72,39.22,145.68,39.18,145.71,41.43,154.38,41.38,154.36,39.38,163.52,39.34,163.49,33.34,166.71,33.32,166.69,28.33,166.68,24.83,162.95,24.84,162.94,22.84,159.21,22.85,159.24,27.85,150.04,27.9,150.08,32.9,140.65,32.97],["lup",214.66,-55.58,220.23,-55.54,228.08,-55.48,228.06,-54.48,232.35,-54.44,232.21,-48.44,237.25,-48.39,237.12,-42.39,242.15,-42.34,241.95,-29.84,236.93,-29.89,225.63,-29.99,225.8,-42.49,214.45,-42.58,214.66,-55.58],["lyn",112.56,35.24,112.73,44.24,104.27,44.34,104.41,49.84,99.92,49.89,100.05,53.89,94.06,53.97,94.13,55.97,94.41,61.96,107.85,61.8,107.75,59.8,122.13,59.64,128.8,59.58,128.44,46.58,139.59,46.48,139.51,41.48,145.71,41.43,145.68,39.18,140.72,39.22,140.65,32.97,121.99,33.14,118.26,33.18,118.29,35.18,112.56,35.24],["lyr",284.28,25.66,284.27,26.16,276.76,26.07,276.7,30.07,273.82,30.04,273.47,47.54,274.34,47.55,287.12,47.7,288.38,47.71,288.47,43.71,291.98,43.76,292.12,36.76,291.49,36.75,291.6,30.25,290.1,30.23,290.13,27.73,290.16,25.73,284.28,25.66],["men",109.02,-85.26,48.23,-84.56,50.09,-82.06,52.08,-74.57,67.96,-74.74,68.58,-69.75,98.45,-70.1,97.77,-75.1,114.21,-75.29,111.65,-82.78,109.02,-85.26],["mic",306.9,-27.59,321.83,-27.46,321.93,-36.46,322.04,-44.96,307.17,-45.09,306.9,-27.59],["mon",95.23,-0.05,95.35,9.95,96.35,9.93,96.37,11.93,105.74,11.82,105.72,9.82,106.72,9.81,106.66,5.31,106.91,5.31,106.87,1.31,109.62,1.28,109.6,-0.22,122.85,-0.37,122.73,-11.37,111.97,-11.25,93.22,-11.03,88.97,-10.98,89.05,-3.98,95.18,-4.05,95.23,-0.05],["mus",170.08,-64.68,169.86,-75.68,207.78,-75.62,207.46,-70.62,207.27,-65.62,204.71,-65.64,204.68,-64.64,194.44,-64.68,179.06,-64.7,170.08,-64.68],["nor",232.55,-60.44,249.03,-60.26,248.57,-45.77,248.49,-42.27,242.15,-42.34,237.12,-42.39,237.25,-48.39,232.21,-48.44,232.35,-54.44,228.06,-54.48,228.08,-55.48,232.38,-55.44,232.55,-60.44],["oct",0.8,-89.3,1.53,-81.8,50.09,-82.06,48.23,-84.56,109.02,-85.26,111.65,-82.78,209.11,-83.12,276.87,-82.46,274.2,-74.97,323.18,-74.45,352,-74.31,1.57,-74.3,0.8,-89.3,0.8,-89.3,0.8,-89.3],["oph",245.6,-0.3,245.56,3.7,252.81,3.79,252.7,12.62,260.2,12.71,260.18,14.21,275.17,14.39,275.2,12.05,281.39,12.13,281.46,6.38,275.27,6.3,275.3,4.55,277.87,4.59,277.89,3.09,275.31,3.06,275.35,0.06,269.1,-0.02,269.15,-4.02,271.15,-4,271.22,-10,266.72,-10.05,266.74,-11.72,265.49,-11.73,265.47,-10.07,259.22,-10.14,259.3,-16.14,265.8,-16.06,266,-30.06,253.24,-30.21,253.16,-24.8,245.89,-24.88,245.82,-19.55,247.45,-19.53,247.44,-18.53,245.81,-18.55,245.69,-8.3,240.44,-8.35,240.39,-3.6,245.64,-3.55,245.6,-0.3],["ori",70.85,0.24,71.03,15.74,76.29,15.68,76.3,16.18,81.8,16.11,81.79,15.61,85.79,15.56,85.76,12.56,88.26,12.53,88.33,18.03,87.33,18.04,87.39,22.88,90.14,22.84,90.13,21.51,95.12,21.45,95.07,17.45,96.44,17.43,96.37,11.93,96.35,9.93,95.35,9.95,95.23,-0.05,95.18,-4.05,89.05,-3.98,88.97,-10.98,77.72,-10.84,77.8,-3.84,71.56,-3.77,71.6,0.23,70.85,0.24],["pav",274.2,-74.97,323.18,-74.45,322.35,-59.46,307.56,-59.59,307.46,-56.59,272.67,-56.98,265.17,-57.07,265.78,-67.57,273.28,-67.48,274.2,-74.97],["peg",321.58,2.54,321.5,13.04,318.24,13.01,318.25,12.35,317.25,12.34,317.18,20,320.19,20.03,320.15,24.03,322.66,24.05,322.62,28.55,327.4,28.58,327.32,36.58,329.46,36.6,331.35,36.61,331.36,35.61,343.71,35.67,343.71,35.17,344.47,35.17,354.04,35.19,354.05,32.77,357.83,32.78,357.83,32.03,1.61,32.03,1.61,28.7,2.61,28.7,2.61,22.7,3.74,22.7,3.74,21.7,3.73,13.2,1.6,13.2,1.6,10.7,359.1,10.7,359.1,8.2,342.82,8.16,342.84,2.66,331.59,2.61,331.59,2.36,326.59,2.33,326.58,3.33,323.58,3.3,323.58,2.55,321.58,2.54],["per",42.63,31.19,42.67,34.52,40.4,34.54,40.43,37.29,39.68,37.29,39.89,51.04,32.67,51.09,32.62,47.59,26.93,47.63,26.97,50.63,22.41,50.65,22.46,54.65,27.53,54.62,27.6,58.12,30.77,58.1,30.8,59.1,38.8,59.05,38.76,57.55,48.9,57.47,49.91,57.46,49.85,55.46,52.38,55.44,52.31,52.94,72.84,52.72,72.46,36.22,69.57,36.25,69.49,30.92,52.43,31.1,42.63,31.19],["phe",351.69,-39.31,351.77,-56.31,351.78,-57.81,21.21,-57.85,21.27,-52.85,24.97,-52.87,24.99,-50.87,28.69,-50.89,28.74,-47.55,36.15,-47.6,36.26,-39.43,26.35,-39.37,351.69,-39.31],["pic",90.95,-43.01,75.97,-42.83,73.48,-42.8,73.4,-46.3,68.42,-46.24,68.36,-48.74,68.22,-53.74,75.68,-53.82,75.55,-57.32,83.02,-57.41,82.86,-60.91,90.35,-61,90.17,-64,98.94,-64.11,102.7,-64.15,103.01,-58.15,98,-58.09,98.11,-55.09,93.11,-55.03,93.19,-52.53,90.69,-52.5,90.75,-50.75,90.95,-43.01],["psa",346.68,-24.83,329.77,-24.9,321.81,-24.96,321.83,-27.46,321.93,-36.46,346.73,-36.32,346.68,-24.83],["psc",342.85,0.66,342.84,2.66,342.82,8.16,359.1,8.2,359.1,10.7,1.6,10.7,1.6,13.2,3.73,13.2,3.74,21.7,14.41,21.68,14.42,24.43,12.41,24.43,12.44,33.68,22.9,33.65,22.87,28.65,26.76,28.63,26.74,25.63,26.66,10.54,31.67,10.51,31.62,2.6,6.6,2.69,6.6,0.69,6.59,-6.31,359.1,-6.3,359.1,-3.3,342.86,-3.34,342.85,0.66],["pup",111.97,-11.25,111.68,-33.25,99.9,-33.11,99.71,-43.11,90.95,-43.01,90.75,-50.75,120.86,-51.1,121.04,-43.35,126.57,-43.41,126.68,-37.16,126.93,-17.41,126.99,-11.41,122.73,-11.37,111.97,-11.25],["pyx",126.93,-17.41,130.18,-17.44,130.16,-19.44,137.68,-19.51,137.64,-24.51,141.9,-24.54,141.77,-37.29,126.68,-37.16,126.93,-17.41],["ret",48.36,-67.04,68.79,-67.25,69.27,-58.75,65.55,-58.71,65.65,-56.21,60.69,-56.16,60.8,-52.82,58.32,-52.8,53.37,-52.75,53.24,-57.08,48.79,-57.04,48.36,-67.04],["scl",346.68,-24.83,359.11,-24.8,26.46,-24.87,26.35,-39.37,351.69,-39.31,351.68,-36.31,346.73,-36.32,346.68,-24.83],["sco",240.44,-8.35,245.69,-8.3,245.81,-18.55,247.44,-18.53,247.45,-19.53,245.82,-19.55,245.89,-24.88,253.16,-24.8,253.24,-30.21,266,-30.06,269.5,-30.02,269.63,-37.02,269.81,-45.52,248.57,-45.77,248.49,-42.27,242.15,-42.34,241.95,-29.84,236.93,-29.89,236.81,-20.39,240.57,-20.35,240.44,-8.35],["sct",275.55,-15.94,284.79,-15.83,284.74,-11.87,284.65,-3.83,280.4,-3.88,275.4,-3.94,275.55,-15.94],["ser1",227.85,-0.47,227.78,7.53,227.61,25.52,229.1,25.54,241.81,25.66,241.86,21.66,240.11,21.65,240.18,15.65,242.68,15.67,242.81,3.67,245.56,3.7,245.6,-0.3,245.64,-3.55,240.39,-3.6,227.88,-3.72,227.85,-0.47],["ser2",275.35,0.06,275.31,3.06,277.94,3.09,277.92,4.59,275.3,4.55,275.27,6.3,281.46,6.38,284.53,6.42,284.58,2.17,280.33,2.12,280.35,0.12,280.4,-3.88,275.4,-3.94,275.55,-15.94,265.8,-16.06,259.3,-16.14,259.22,-10.14,265.47,-10.07,265.49,-11.73,266.74,-11.72,266.72,-10.05,271.22,-10,271.15,-4,269.15,-4.02,269.1,-0.02,275.35,0.06],["sex",145.35,-0.57,145.4,6.43,162.88,6.34,162.85,-0.66,162.83,-6.66,162.81,-11.66,145.27,-11.57,145.35,-0.57],["sge",284.37,18.66,284.34,21.25,290.1,21.31,290.12,19.4,298.89,19.5,298.86,21.58,305.13,21.64,305.13,20.89,305.19,16.14,303.56,16.13,298.93,16.08,298.92,16.5,286.41,16.36,286.38,18.69,284.37,18.66],["sgr",284.74,-11.87,284.79,-15.83,275.55,-15.94,265.8,-16.06,266,-30.06,269.5,-30.02,269.63,-37.02,289.6,-36.78,289.77,-45.28,307.17,-45.09,306.9,-27.59,301.92,-27.64,301.73,-11.68,284.74,-11.87],["tau",50.84,-1.3,50.85,0.45,50.95,10.36,51.04,19.45,52.29,19.43,52.43,31.1,69.49,30.92,69.48,30.26,73.24,30.21,73.21,28.71,90.23,28.51,90.22,28.01,90.14,22.84,87.39,22.88,87.33,18.04,88.33,18.03,88.26,12.53,85.76,12.56,85.79,15.56,81.79,15.61,81.8,16.11,76.3,16.18,76.29,15.68,71.03,15.74,70.85,0.24,55.35,0.4,55.34,-1.35,50.84,-1.3],["tel",307.46,-56.59,307.17,-45.09,289.77,-45.28,272.31,-45.49,272.67,-56.98,307.46,-56.59],["tra",224.17,-70.51,224,-68.01,226.56,-67.99,226.35,-64.08,230.17,-64.04,230.05,-61.46,232.59,-61.44,232.55,-60.44,249.03,-60.26,249.08,-61.26,251.54,-61.24,251.68,-63.82,254.2,-63.79,254.28,-65.21,255.54,-65.19,255.72,-67.69,258.24,-67.66,258.47,-70.16,224.17,-70.51],["tri",26.74,25.63,26.76,28.63,22.87,28.65,22.9,33.65,22.91,35.65,31.85,35.6,31.87,37.35,39.68,37.29,40.43,37.29,40.4,34.54,42.67,34.52,42.63,31.19,38.1,31.22,38.07,27.8,30.53,27.86,30.51,25.61,26.74,25.63],["tuc",352,-74.31,1.57,-74.3,12.33,-74.32,12.3,-75.32,20.65,-75.35,21.21,-57.85,351.78,-57.81,351.77,-56.31,332.11,-56.39,332.4,-66.89,351.86,-66.81,352,-74.31],["uma",145.71,41.43,139.51,41.48,139.59,46.48,128.44,46.58,128.8,59.58,122.13,59.64,123.09,73.14,140.62,72.97,171.96,72.81,171.85,65.81,181.58,65.8,181.58,63.3,203.55,63.36,203.57,62.36,217.05,62.44,217.25,54.94,211.58,54.9,211.7,47.9,203.8,47.86,203.74,52.36,182.82,52.3,182.83,44.3,181.59,44.3,181.59,33.3,181.6,28.3,179.61,28.3,166.69,28.33,166.71,33.32,163.49,33.34,163.52,39.34,154.36,39.38,154.38,41.38,145.71,41.43],["umi",195.82,76.33,196.1,69.33,210.65,69.4,210.82,65.4,235.33,65.6,235.05,69.6,247.84,69.74,247.22,74.73,261.54,74.9,260.22,79.9,267.66,79.99,261.72,85.95,308.72,86.47,308.33,86.63,343.51,86.84,339.26,88.66,135.83,87.57,130.4,86.1,213.02,85.93,216.78,79.44,203.81,79.36,204.16,76.36,195.82,76.33],["vel",166.34,-57.17,166.46,-40.42,141.73,-40.29,141.77,-37.29,126.68,-37.16,126.57,-43.41,121.04,-43.35,120.86,-51.1,123.38,-51.13,123.32,-53.38,127.61,-53.42,127.57,-54.92,133.38,-54.97,133.32,-56.97,166.34,-57.17],["vir",174.35,-0.69,174.37,10.31,179.6,10.3,179.6,13.3,194.06,13.32,194.06,14.32,204.03,14.36,204.06,7.36,227.78,7.53,227.85,-0.47,221.6,-0.53,221.67,-8.53,215.41,-8.57,215.51,-22.57,194.17,-22.68,194.13,-11.68,179.1,-11.7,179.1,-6.7,174.34,-6.69,174.35,-0.69],["vol",98.94,-64.11,98.45,-70.1,97.77,-75.1,114.21,-75.29,135.24,-75.5,136.09,-64.5,102.7,-64.15,98.94,-64.11],["vul",284.34,21.25,284.28,25.66,290.16,25.73,290.13,27.73,296.27,27.8,296.25,29.3,315.07,29.49,315.08,28.49,322.62,28.55,322.66,24.05,320.15,24.03,320.19,20.03,317.18,20,309.91,19.94,309.9,20.94,305.13,20.89,305.13,21.64,298.86,21.58,298.89,19.5,290.12,19.4,290.1,21.31,284.34,21.25]]'),U_={boundaries:P_},Fo={};function I_(t,e,n,i,s,r,a){if(!a)return;const o=new St;o.name="constellation_boundraies";const c=U_.boundaries;if(!c||c.length===0)return;const l=i*.2,u=new _n({color:Dt.normal.constellationboundary,transparent:!0,opacity:.6});return c.forEach((d,m)=>{if(!d||d.length===0)return;const h=`${m}_${r?"ground":"noground"}`;let f=[];if(Fo[h])f=Fo[h];else{let p=null;const _=new Set;for(let D=1;D<d.length;D+=2){const T=[d[D],d[D+1]];if(p){const S=`${p[0]},${p[1]}-${T[0]},${T[1]}`,L=`${T[0]},${T[1]}-${p[0]},${p[1]}`;if(!_.has(S)){_.add(S),_.add(L);let A=(T[0]-p[0])%360;A>180&&(A-=360),A<-180&&(A+=360);const w=T[1]-p[1],F=Math.max(2,Math.ceil(Math.max(Math.abs(A),Math.abs(w))/2));for(let y=0;y<=F;y++){const v=y/F;let b=p[0]+A*v;b<0&&(b+=360),b>=360&&(b-=360);const q=p[1]+w*v,W=Qt(b,q,t,e,n,i);r&&W.y<0||f.push(W)}}}p=T}if(f.length>2){const D=f[0],T=f[f.length-1];D.distanceTo(T)<=l&&f.push(D.clone())}Fo[h]=f}const g=[];if(f.length>0){g.push(f[0]);for(let p=1;p<f.length;p++){const _=f[p-1],D=f[p];_.distanceTo(D)<l&&g.push(D)}}if(g.length>1){const p=new vt().setFromPoints(g),_=new Tn(p,u);o.add(_)}}),s.add(o),o}const O_=JSON.parse('[["#396bad",178.558,-74.096,175.117,-73.859,171.321,-73.952,167.775,-73.797,164,-73.769,160.258,-73.679,157.308,-73.189,154.983,-72.276,152.758,-71.56,150.683,-70.821,149.471,-69.75,148.013,-68.826,146.317,-68.044,145.067,-67.097,143.9,-66.143,142.479,-65.326,140.813,-64.64,139.55,-63.799,138.354,-62.949,137.075,-62.018,135.85,-61.217,134.983,-60.276,134.313,-59.266,133.083,-58.509,132.196,-57.617,131.058,-56.843,129.963,-56.061,129.192,-55.152,128.721,-54.119,128.004,-53.204,127.308,-52.284,126.379,-51.477,125.475,-50.664,124.604,-49.845,123.533,-49.711,122.062,-50.085,120.092,-49.936,118.142,-49.758,117.004,-49.048,116.554,-48.093,115.863,-47.231,115.438,-46.273,115.525,-45.123,115.604,-43.972,116.146,-42.624,115.967,-41.566,115.558,-40.606,114.929,-39.74,114.087,-38.969,113.708,-38.004,114.396,-36.916,114.579,-36.152,113.771,-35.38,112.763,-34.7,112.088,-33.874,110.792,-33.323,109.825,-32.628,108.979,-31.883,108.667,-30.911,108.458,-29.893,108.15,-28.92,107.846,-27.946,107.442,-27.017,106.496,-26.445,105.308,-25.869,103.979,-25.464,102.913,-24.836,102.45,-23.948,102.283,-22.931,102.55,-21.829,102.763,-20.635,102.967,-19.439,102.979,-18.329,103.079,-17.174,103.175,-16.018,103.079,-14.95,102.617,-14.062,102.158,-13.174,101.879,-12.197,101.242,-11.399,100.692,-10.556,99.967,-9.804,99.329,-9.007,98.246,-8.436,97.346,-7.776,96.538,-7.072,95.637,-6.415,94.65,-5.805,93.754,-5.152,92.95,-4.457,92.675,-3.49,92.758,-2.339,93.188,-1.001,93.892,-0.187,94.592,0.629,94.663,1.788,94.021,2.574,93.554,3.452,92.908,4.234,92.171,4.967,91.383,5.785,90.55,6.463,89.892,7.235,89.05,7.906,88.208,8.573,87.363,9.235,86.688,9.992,86.004,10.745,85.146,11.393,84.454,12.138,83.583,12.774,82.879,13.509,81.996,14.133,81.279,14.858,80.554,15.577,80,16.4,80.225,17.715,80.767,18.758,81.538,19.469,82.317,20.178,82.871,21.219,83.667,21.924,83.363,22.926,82.775,23.764,82.179,24.6,81.575,25.432,81.083,26.455,80.275,27.169,79.637,27.99,78.992,28.808,78.521,29.738,78.417,30.898,77.925,31.825,77.425,32.75,76.717,33.553,76.188,34.472,75.454,35.268,74.704,36.057,74.129,36.966,73.742,37.996,72.446,38.457,71.233,38.966,70.004,39.461,68.754,39.941,67.679,40.542,66.013,40.716,64.338,40.581,62.671,40.418,61.017,40.229,59.442,40.367,58.454,41.013,57.796,41.956,56.763,42.584,55.121,42.649,53.4,42.605,51.917,42.776,50.658,43.17,49.233,43.38,48.092,43.907,46.925,44.42,45.738,44.917,44.392,45.224,43.163,45.688,41.908,46.136,40.638,46.567,39.463,47.163,38.496,48.11,37.25,48.678,35.754,48.857,34.196,48.919,32.733,49.146,31.213,49.255,29.767,49.533,28.229,49.596,26.758,49.829,25.338,50.236,24.004,51.016,22.513,51.382,21.042,51.925,19.533,52.446,18.042,53.343,16.458,54.018,14.792,54.27,13.1,54.497,11.388,54.896,10.05,54.178,9.121,53.154,7.579,52.295,6.429,51.333,4.925,50.933,3.517,50.214,2.179,49.377,0.9,48.522,359.671,47.65,358.396,47.056,357.083,46.639,355.8,46.204,354.379,46.134,352.783,46.424,351.071,46.874,349.429,47.106,347.879,47.123,346.325,47.114,345.017,46.717,343.475,46.662,341.938,46.583,340.542,46.302,339.163,46.001,337.354,46.196,335.688,46.188,334.496,45.652,333.492,44.936,332.754,43.964,332.204,42.825,331.446,41.925,330.713,41.019,330.004,40.108,329.242,39.27,328.662,38.271,327.704,37.653,326.604,37.177,325.517,36.688,324.446,36.184,323.558,35.522,322.688,34.851,321.837,34.171,321,33.483,320.35,32.646,319.887,31.667,319.267,30.823,318.325,30.246,317.571,29.525,316.825,28.798,316.267,27.933,315.55,27.193,314.846,26.448,314.15,25.698,313.471,24.941,312.975,24.055,312.492,23.166,312.017,22.275,311.379,21.502,310.925,20.604,310.396,19.764,309.875,18.921,309.279,18.132,308.175,17.683,307.596,16.882,307.196,15.966,306.892,14.992,306.538,13.937,305.992,13.126,305.279,12.42,304.4,11.815,303.7,11.097,303.179,10.269,302.492,9.542,301.55,8.964,300.696,8.328,300.108,7.535,299.004,7.038,298.079,6.434,297.504,5.628,296.762,4.916,296.108,4.152,295.546,3.337,294.987,2.519,294.346,1.747,293.879,0.878,293.417,0.008,293.137,-0.956,292.858,-1.921,292.137,-2.656,291.063,-3.211,290.608,-4.089,290.696,-5.24,290.788,-6.389,290.883,-7.536,290.988,-8.681,290.913,-9.736,291.025,-10.877,291.142,-12.015,291.083,-13.065,291.025,-14.113,290.788,-15.076,290.742,-16.122,291.079,-17.333,291.237,-18.457,291.212,-19.497,290.8,-20.374,290.392,-21.253,290.179,-22.211,290.167,-23.248,290.367,-24.361,290.371,-25.393,289.867,-26.234,289.258,-27.039,288.433,-27.769,287.917,-28.615,287.504,-29.498,287.733,-30.607,287.979,-31.711,287.792,-32.667,287.613,-33.622,287.658,-34.647,287.254,-35.532,286.85,-36.416,286.204,-37.232,285.313,-37.978,284.288,-38.688,283.488,-39.467,282.554,-40.21,281.725,-40.988,280.879,-41.764,280.396,-42.651,279.521,-43.426,278.375,-44.12,277.329,-44.849,275.875,-45.452,274.65,-46.127,273.796,-46.922,272.783,-47.671,271.75,-48.416,270.958,-49.243,270.012,-50.022,268.617,-50.659,267.463,-51.378,265.996,-51.992,263.925,-52.389,261.821,-52.756,259.675,-53.092,257.913,-53.567,257.079,-54.431,257.217,-55.699,257.679,-57.079,257.554,-58.227,257.113,-59.261,256.983,-60.406,255.713,-61.284,255.017,-62.252,254.467,-63.275,253.567,-64.314,252.562,-65.211,251.113,-65.976,249.971,-66.857,248.358,-67.601,246.646,-68.331,244.429,-68.906,241.704,-69.312,238.321,-69.452,234.717,-69.453,230.962,-69.303,228,-69.505,225.267,-69.834,222.725,-70.302,219.571,-70.371,216.625,-70.574,213.621,-70.732,210.754,-71.035,207.804,-71.295,205.617,-72.274,203.317,-73.425,200.979,-74.337,197.488,-74.843,193.746,-74.895,190,-74.889,186.442,-74.328,183.121,-73.716,180.242,-50.273,181.233,-51.202,182.737,-51.557,184.183,-52.287,185.683,-52.996,187.238,-53.683,188.921,-53.548,190.596,-53.287,192.413,-53.3,194.104,-54.084,195.513,-54.752,197.171,-54.289,198.821,-54.001,200.446,-53.688,201.946,-52.956,203.388,-52.203,204.963,-52.02,206.704,-52.3,208.683,-53.035,210.638,-53.54,212.433,-53.629,213.958,-53.217,214.746,-52.196,214.788,-51.121,215.688,-49.838,216.871,-49.104,218.013,-48.357,219.237,-47.78,220.558,-47.367,221.987,-47.117,223.404,-46.844,224.663,-46.377,225.608,-45.546,226.671,-44.879,227.846,-44.369,229.379,-44.265,230.767,-44.688,232.354,-44.757,233.229,-43.936,234.158,-43.188,235.229,-42.589,236.613,-42.289,238.317,-42.415,239.812,-42.784,241.35,-42.849,242.479,-43.446,242.525,-44.789,241.875,-45.761,241.396,-46.877,239.817,-47.167,238.671,-47.177,238.721,-48.456,238.338,-49.711,238.138,-51.119,237.096,-51.906,236.217,-52.84,235.1,-53.609,233.737,-54.205,232.533,-54.949,231.088,-55.514,229.217,-55.724,227.146,-55.733,225.596,-56.231,223.837,-56.532,222.708,-57.523,222.717,-58.641,225.05,-58.795,226.717,-58.303,228.338,-57.791,230.321,-57.593,231.858,-57.036,232.933,-56.136,234.375,-55.549,235.35,-54.628,236.283,-53.699,237.592,-53.075,239.075,-52.589,240.1,-51.785,240.454,-50.524,240.588,-49.113,241.308,-48.148,242,-47.179,242.471,-46.059,242.921,-44.938,243.154,-43.671,243.854,-42.622,244.808,-41.922,246.029,-41.421,246.654,-40.495,246.979,-39.359,247.192,-38.155,247.121,-36.748,246.717,-35.632,245.658,-35.089,244.279,-34.816,243.254,-34.249,242.575,-33.401,241.908,-32.549,241.417,-31.561,241.092,-30.439,240.929,-29.186,240.604,-28.069,240.279,-26.955,240.104,-25.711,240.454,-24.695,240.946,-23.819,241.425,-22.94,241.971,-22.127,242.658,-21.446,243.333,-20.759,244,-20.065,244.654,-19.364,245.783,-19.047,246.963,-19.123,247.913,-19.131,248.379,-18.27,249.058,-17.456,250.163,-17.076,251.429,-16.803,252.863,-16.63,253.788,-16.087,254.875,-15.65,255.788,-15.087,256.692,-14.514,257.417,-13.822,258.308,-13.234,259.025,-12.529,259.904,-11.926,261.125,-11.526,262.517,-11.219,263.554,-10.691,264.663,-10.426,265.171,-9.578,266.021,-8.929,267.346,-8.657,268.317,-8.179,268.983,-7.414,269.821,-6.743,271.004,-6.26,271.571,-5.436,271.958,-4.515,272.783,-3.83,273.908,-3.64,274.9,-3.264,275.896,-2.663,276.892,-2.058,277.887,-1.452,278.617,-0.705,279.521,-0.049,280.246,0.7,280.971,1.449,281.963,1.838,283.033,1.733,284.108,1.851,284.217,2.923,284.321,3.994,284.783,4.881,285.429,5.676,285.892,6.562,286.363,7.448,287.008,8.24,287.663,9.031,288.133,9.914,288.613,10.797,289.183,11.631,289.938,12.37,290.425,13.249,290.738,14.223,291.233,15.101,291.55,16.074,291.321,17.335,291.458,18.404,292.058,19.232,292.854,19.959,293.471,20.782,294.188,21.553,292.908,21.076,291.829,20.494,290.483,20.271,289.342,20.393,289.313,19.276,289.283,18.16,289.533,17.124,289.867,15.817,289.921,14.653,289.25,13.867,288.4,13.173,288.371,12.056,288.163,11.032,287.867,10.055,287.213,9.264,286.383,8.565,285.379,7.958,284.554,7.255,283.421,6.825,282.383,6.571,282.012,5.637,281.729,4.657,281.538,3.632,281.079,2.744,280.087,2.132,278.875,1.971,277.667,1.81,276.496,1.294,275.508,0.688,275.225,-0.286,274.762,-1.166,273.412,-1.579,272.204,-1.724,271.183,-1.516,270.163,-1.306,269.188,-1.007,268.304,-0.534,267.792,0.625,267.092,1.438,266.654,2.543,266.925,3.491,267.371,4.348,267.813,5.207,268.608,5.887,269.767,6.392,270.746,6.991,271.363,7.773,272.163,8.468,272.779,9.255,273.583,9.955,274.017,10.834,274.454,11.712,275.258,12.419,276.529,12.688,277.525,13.31,278.667,13.756,279.675,13.935,279.754,14.998,279.454,16.236,279.337,17.383,278.833,18.7,279.275,19.586,279.721,20.473,280.167,21.36,280.613,22.248,280.867,23.22,281.321,24.107,281.975,24.91,282.883,25.717,283.554,26.519,284.229,27.321,284.708,28.208,285.192,29.094,285.054,30.239,284.587,31.508,284.533,32.604,285.021,33.491,285.729,34.294,286.229,35.18,287.408,35.81,287.654,36.691,287.262,37.915,287.554,38.883,288.442,39.64,289.458,40.35,290.379,41.099,290.954,41.977,291.783,42.765,291.892,43.819,292.25,44.783,292.871,45.656,293.504,46.528,294.417,47.306,295.488,48.033,296.317,48.848,297.379,49.697,298.396,50.454,299.167,51.306,300.521,51.949,301.633,52.686,302.067,53.68,302.512,54.672,302.971,55.662,303.142,56.757,304.417,57.475,305.738,58.184,308.038,58.181,310.038,58.262,312.221,58.113,313.792,57.552,314.475,56.451,314.892,55.195,315.05,53.787,314.467,52.633,314.592,51.506,315.679,50.766,317.046,50.236,318.042,50.181,318.462,51.317,319.017,52.38,319.237,53.512,318.621,54.569,318.087,55.693,317.271,56.67,316.929,57.792,317.512,58.859,318.275,59.855,319.225,60.777,320.079,61.763,320.671,62.885,322.087,63.646,324.65,63.873,326.817,64.289,327.104,65.69,328.217,66.701,331.125,66.826,334.204,66.458,337.613,66.137,340.496,65.876,341.604,64.99,341.121,63.87,339.363,63.223,338.108,62.211,336.504,61.53,335.188,60.663,334.7,59.559,336.9,59.079,339.071,59.145,340.617,59.797,342.221,60.43,343.354,61.586,345.104,62.185,346.925,62.762,349.046,63.034,351.483,62.894,353.587,63.194,355.733,63.462,357.817,63.893,359.696,64.883,1.867,65.453,4.25,65.595,6.783,65.102,9.2,64.769,11.112,63.896,11.15,62.896,12.467,62.6,13.142,63.397,12.713,64.399,13.925,65.391,16.383,65.745,18.85,65.862,21.267,65.741,23.746,65.78,26.125,65.585,28.463,65.355,30.758,65.09,33.158,64.981,35.533,64.836,38.058,64.838,40.383,64.619,42.671,64.364,44.692,63.901,46.65,63.413,48.542,62.899,50.013,62.111,51.417,61.309,53.104,60.738,53.9,59.586,53.387,58.542,51.983,57.84,49.75,57.673,47.758,57.861,45.938,58.192,43.988,58.186,42.708,57.747,42.621,56.763,41.9,55.957,40.817,55.142,39.779,54.317,39.154,53.496,39.967,52.399,41.15,51.616,42.292,50.82,43.392,50.012,44.596,49.368,45.617,48.537,46.9,48.041,48.554,47.952,48.85,49.01,49.417,49.961,50.967,50.386,52.338,49.905,53.679,49.406,54.717,48.652,55.358,47.572,56.333,46.802,57.275,46.023,58.375,45.389,59.563,45.598,59.446,46.724,59.408,48.068,60.171,48.954,61.417,49.567,62.471,50.303,63.554,51.029,65.358,51.32,66.579,50.674,66.108,49.548,65.55,48.491,64.596,47.714,65.225,46.725,66.446,46.15,67.746,45.631,69.55,45.429,71.233,45.135,73.121,44.943,74.754,45.097,76.225,45.389,77.546,45.823,79.379,45.753,81.004,45.324,82.013,44.604,83,43.876,84.196,43.248,85.371,42.61,86.292,41.861,86.963,41.006,87.846,40.248,89.05,39.633,90.008,38.912,90.837,38.139,91.767,37.409,93.338,37.171,94.121,36.384,95.329,35.772,96.963,35.327,97.904,34.394,99.45,34.018,100.592,33.378,101.717,32.735,102.396,31.928,103.067,31.12,103.517,30.232,103.963,29.344,104.408,28.457,105.054,27.651,105.696,26.844,106.538,26.118,107.571,25.471,108.396,24.745,108.613,23.784,108.333,22.621,107.771,21.331,107.229,20.033,106.613,18.905,106.1,17.594,105.975,16.449,105.95,15.346,105.929,14.242,105.821,13.092,105.538,11.851,105.529,10.742,106.163,9.946,106.975,9.239,107.421,8.355,108.05,7.561,108.679,6.768,109.308,5.976,109.938,5.187,110.387,4.307,110.479,3.246,110.492,2.138,110.592,1.075,110.829,-0.03,111.292,-0.907,111.579,-1.877,111.867,-2.847,112.163,-3.816,112.454,-4.785,112.929,-5.658,113.633,-6.521,114.117,-7.39,114.425,-8.356,114.913,-9.223,115.233,-10.186,115.463,-11.199,115.7,-12.211,116.029,-13.174,116.721,-13.934,117.596,-14.59,118.475,-15.241,119.183,-15.988,119.9,-16.732,120.8,-17.366,121.888,-17.886,122.979,-18.396,123.904,-19.006,124.892,-19.689,125.654,-20.394,126.425,-21.093,127.208,-21.786,127.821,-22.589,128.625,-23.271,129.258,-24.064,129.904,-24.852,130.563,-25.636,131.054,-26.538,131.554,-27.437,131.892,-28.458,132.242,-29.478,132.417,-30.624,132.604,-31.77,132.987,-32.789,133.196,-33.935,133.783,-34.823,134.575,-35.577,135.663,-36.124,136.763,-36.659,137.883,-37.182,138.838,-37.83,139.717,-38.539,140.433,-39.382,140.992,-40.362,141.842,-41.122,142.992,-41.655,144.067,-42.248,145.075,-42.904,145.933,-43.703,147.079,-44.262,148.25,-44.807,149.617,-45.18,151,-45.533,152.321,-45.948,153.658,-46.345,155.142,-46.777,156.675,-46.965,158.221,-47.129,159.771,-47.267,161.196,-47.559,162.763,-47.65,164.337,-47.716,165.671,-48.122,167.029,-48.51,168.408,-48.879,170.125,-48.664,171.721,-48.609,173.225,-48.719,174.733,-48.806,176.171,-49.062,177.621,-49.297,179.088,-49.511,178.983,-74.018],["#396bad",191.629,-60.998,191.425,-60.997,191.217,-60.996,191.013,-60.994,190.804,-60.992,190.6,-60.99,190.392,-60.987,190.187,-60.984,189.979,-60.981,189.767,-61.077,189.758,-61.177,189.75,-61.277,189.533,-61.372,189.317,-61.468,189.096,-61.563,189.088,-61.663,189.075,-61.763,188.854,-61.858,188.629,-61.952,188.404,-62.046,188.392,-62.146,188.167,-62.24,188.154,-62.339,188.138,-62.439,188.125,-62.539,188.113,-62.639,188.096,-62.739,187.863,-62.832,187.85,-62.932,187.833,-63.031,187.821,-63.131,187.804,-63.231,187.788,-63.331,187.775,-63.431,187.758,-63.53,187.742,-63.63,187.725,-63.73,187.713,-63.829,187.696,-63.929,187.679,-64.029,187.663,-64.129,187.646,-64.229,187.629,-64.328,187.613,-64.428,187.596,-64.528,187.579,-64.627,187.563,-64.727,187.546,-64.827,187.529,-64.927,187.746,-65.034,187.763,-64.934,187.983,-65.04,187.967,-65.14,188.204,-65.147,188.429,-65.252,188.442,-65.153,188.667,-65.258,188.904,-65.264,189.142,-65.269,189.383,-65.273,189.392,-65.173,189.629,-65.178,189.638,-65.077,189.65,-64.978,189.883,-64.982,189.892,-64.882,190.129,-64.885,190.138,-64.785,190.379,-64.688,190.383,-64.588,190.617,-64.591,190.625,-64.491,190.858,-64.393,191.096,-64.295,191.325,-64.297,191.329,-64.197,191.558,-64.198,191.788,-64.199,192.017,-64.2,192.25,-64.2,192.475,-64.1,192.704,-64.099,192.704,-63.999,192.933,-63.998,193.158,-63.997,193.388,-63.996,193.617,-63.994,193.613,-63.894,193.837,-63.891,194.058,-63.789,194.283,-63.786,194.513,-63.782,194.738,-63.779,194.729,-63.679,194.954,-63.675,194.946,-63.575,195.171,-63.571,195.392,-63.566,195.383,-63.466,195.604,-63.461,195.829,-63.456,196.054,-63.45,196.042,-63.35,196.263,-63.344,196.483,-63.338,196.471,-63.238,196.454,-63.138,196.442,-63.038,196.663,-63.031,196.646,-62.932,196.867,-62.925,196.85,-62.825,197.067,-62.818,197.05,-62.718,197.038,-62.618,197.021,-62.519,197.004,-62.419,196.988,-62.319,196.971,-62.219,196.958,-62.119,196.942,-62.02,196.925,-61.92,196.908,-61.82,196.896,-61.721,196.671,-61.628,196.654,-61.528,196.642,-61.428,196.433,-61.435,196.212,-61.341,196.2,-61.242,195.979,-61.148,195.967,-61.048,195.75,-60.954,195.533,-60.859,195.329,-60.864,195.113,-60.769,194.9,-60.673,194.696,-60.677,194.492,-60.681,194.288,-60.684,194.088,-60.687,193.888,-60.79,193.688,-60.892,193.479,-60.894,193.275,-60.896,193.071,-60.897,192.863,-60.898,192.658,-60.999,192.454,-61,192.25,-61,192.042,-61,191.838,-60.999,191.629,-60.998],["#396bad",299.842,27.804,299.779,27.72,299.721,27.635,299.658,27.551,299.6,27.466,299.542,27.381,299.479,27.296,299.421,27.211,299.363,27.127,299.304,27.042,299.242,26.957,299.183,26.872,299.125,26.787,298.971,26.755,298.817,26.722,298.662,26.689,298.508,26.657,298.45,26.571,298.392,26.486,298.238,26.453,298.083,26.42,297.933,26.386,297.779,26.353,297.721,26.267,297.663,26.181,297.604,26.096,297.546,26.01,297.396,25.976,297.242,25.942,297.183,25.856,297.129,25.77,296.975,25.736,296.825,25.701,296.767,25.615,296.708,25.529,296.558,25.494,296.408,25.459,296.35,25.373,296.296,25.287,296.238,25.201,296.275,25.064,296.317,24.927,296.258,24.841,296.204,24.754,296.15,24.668,296.092,24.582,296.038,24.496,295.979,24.41,295.925,24.324,295.871,24.237,295.817,24.151,295.758,24.065,295.704,23.978,295.65,23.892,295.596,23.806,295.538,23.719,295.483,23.633,295.429,23.546,295.375,23.46,295.321,23.373,295.267,23.287,295.208,23.2,295.154,23.114,295.1,23.027,295.046,22.941,294.992,22.854,294.937,22.768,294.883,22.681,294.829,22.594,294.775,22.508,294.721,22.421,294.667,22.334,294.613,22.248,294.563,22.161,294.508,22.074,294.454,21.987,294.4,21.901,294.442,21.764,294.587,21.801,294.733,21.838,294.788,21.925,294.842,22.011,294.896,22.098,294.95,22.184,295.004,22.271,295.058,22.358,295.113,22.444,295.167,22.531,295.221,22.617,295.275,22.704,295.329,22.79,295.383,22.877,295.438,22.963,295.492,23.05,295.546,23.136,295.6,23.222,295.75,23.258,295.9,23.294,295.954,23.381,296.008,23.467,296.067,23.553,296.121,23.639,296.175,23.725,296.229,23.811,296.288,23.898,296.342,23.984,296.4,24.07,296.454,24.156,296.508,24.242,296.567,24.328,296.621,24.414,296.679,24.5,296.733,24.586,296.792,24.672,296.942,24.707,297.092,24.741,297.15,24.827,297.204,24.913,297.354,24.947,297.508,24.981,297.563,25.067,297.621,25.153,297.775,25.186,297.925,25.22,297.983,25.306,298.042,25.391,298.096,25.476,298.154,25.562,298.308,25.595,298.458,25.628,298.612,25.661,298.767,25.694,298.917,25.726,299.071,25.759,299.225,25.791,299.375,25.823,299.529,25.855,299.683,25.887,299.837,25.918,299.929,25.865,300.025,25.812,300.175,25.843,300.238,25.928,300.387,25.959,300.296,26.012,300.542,25.989,300.604,26.074,300.567,26.212,300.475,26.265,300.533,26.349,300.596,26.434,300.654,26.518,300.713,26.602,300.775,26.686,300.833,26.771,300.8,26.909,300.767,27.047,300.825,27.131,300.887,27.215,300.854,27.353,300.821,27.491,300.783,27.629,300.75,27.767,300.717,27.905,300.683,28.043,300.742,28.128,300.804,28.212,300.867,28.296,300.925,28.38,300.988,28.464,301.05,28.548,301.113,28.632,301.171,28.716,301.137,28.854,301.104,28.993,301.167,29.077,301.229,29.161,301.292,29.245,301.354,29.329,301.417,29.412,301.479,29.496,301.542,29.58,301.604,29.664,301.667,29.748,301.729,29.831,301.792,29.915,301.854,29.999,301.917,30.082,301.983,30.166,302.046,30.249,302.108,30.333,302.171,30.416,302.238,30.5,302.3,30.583,302.362,30.667,302.429,30.75,302.492,30.833,302.558,30.917,302.621,31,302.688,31.083,302.75,31.166,302.817,31.249,302.879,31.333,302.946,31.416,303.012,31.499,303.075,31.582,303.142,31.664,303.208,31.748,303.275,31.83,303.342,31.913,303.404,31.996,303.471,32.079,303.538,32.161,303.604,32.244,303.671,32.327,303.738,32.409,303.804,32.492,303.871,32.575,303.938,32.657,304.004,32.74,304.071,32.822,304.142,32.904,304.208,32.987,304.275,33.069,304.342,33.151,304.413,33.234,304.479,33.316,304.546,33.398,304.617,33.48,304.683,33.562,304.75,33.644,304.821,33.726,304.887,33.808,304.958,33.89,305.029,33.972,305,34.111,304.967,34.251,305.038,34.333,305.108,34.414,305.079,34.554,305.05,34.693,305.117,34.775,305.188,34.856,305.258,34.938,305.329,35.02,305.4,35.101,305.471,35.183,305.442,35.323,305.413,35.462,305.483,35.544,305.554,35.625,305.525,35.764,305.496,35.904,305.321,35.88,305.25,35.798,305.179,35.717,305.108,35.635,305.038,35.553,304.967,35.471,304.9,35.389,304.929,35.25,304.958,35.111,304.887,35.029,304.817,34.947,304.75,34.865,304.679,34.783,304.608,34.701,304.542,34.619,304.571,34.479,304.6,34.34,304.533,34.258,304.463,34.176,304.496,34.037,304.525,33.898,304.454,33.816,304.387,33.733,304.321,33.651,304.25,33.569,304.183,33.486,304.117,33.404,304.046,33.322,303.979,33.239,303.913,33.157,303.846,33.074,303.779,32.991,303.708,32.909,303.642,32.826,303.575,32.744,303.508,32.661,303.442,32.578,303.375,32.495,303.213,32.468,303.046,32.441,302.983,32.358,302.917,32.275,302.85,32.192,302.783,32.109,302.721,32.026,302.654,31.943,302.587,31.859,302.525,31.776,302.458,31.693,302.492,31.554,302.525,31.416,302.458,31.332,302.396,31.249,302.329,31.166,302.267,31.082,302.2,30.999,302.137,30.915,302.075,30.832,302.008,30.748,301.946,30.665,301.883,30.581,301.817,30.498,301.754,30.414,301.692,30.33,301.629,30.246,301.567,30.162,301.5,30.079,301.438,29.995,301.375,29.911,301.313,29.827,301.25,29.743,301.188,29.659,301.125,29.575,301.063,29.491,301,29.407,300.938,29.323,300.879,29.239,300.817,29.155,300.658,29.125,300.5,29.094,300.438,29.01,300.375,28.926,300.317,28.841,300.254,28.757,300.192,28.672,300.229,28.534,300.262,28.396,300.204,28.312,300.142,28.228,300.083,28.143,300.021,28.058,299.963,27.974,299.9,27.889,299.842,27.804],["#396bad",255.863,-39.289,255.887,-39.429,255.913,-39.569,255.938,-39.709,255.963,-39.849,255.988,-39.989,255.908,-40.069,255.829,-40.148,255.746,-40.228,255.667,-40.307,255.588,-40.387,255.508,-40.466,255.533,-40.606,255.558,-40.746,255.475,-40.826,255.396,-40.905,255.317,-40.984,255.233,-41.063,255.258,-41.204,255.283,-41.344,255.2,-41.423,255.117,-41.502,255.142,-41.642,255.167,-41.782,255.192,-41.923,255.296,-41.984,255.404,-42.045,255.429,-42.185,255.45,-42.326,255.558,-42.386,255.667,-42.447,255.775,-42.508,255.883,-42.569,255.992,-42.629,256.1,-42.69,256.125,-42.83,256.15,-42.97,256.179,-43.11,256.096,-43.189,256.012,-43.269,255.929,-43.349,255.846,-43.428,255.762,-43.508,255.679,-43.587,255.704,-43.727,255.733,-43.867,255.646,-43.947,255.563,-44.026,255.479,-44.106,255.392,-44.185,255.308,-44.264,255.221,-44.343,255.137,-44.422,254.942,-44.44,254.746,-44.457,254.546,-44.474,254.35,-44.491,254.262,-44.569,254.288,-44.71,254.396,-44.772,254.508,-44.834,254.621,-44.895,254.817,-44.878,255.017,-44.861,255.213,-44.843,255.413,-44.825,255.608,-44.806,255.692,-44.727,255.779,-44.647,255.975,-44.628,256.171,-44.609,256.258,-44.529,256.342,-44.449,256.425,-44.37,256.508,-44.29,256.704,-44.269,256.9,-44.249,256.983,-44.169,257.067,-44.088,257.146,-44.008,257.117,-43.868,257.087,-43.729,257.171,-43.648,257.254,-43.568,257.225,-43.428,257.196,-43.288,257.275,-43.208,257.358,-43.127,257.437,-43.047,257.517,-42.966,257.6,-42.885,257.679,-42.805,257.758,-42.724,257.837,-42.643,257.917,-42.562,258,-42.481,258.079,-42.4,258.158,-42.319,258.238,-42.238,258.313,-42.157,258.392,-42.076,258.471,-41.995,258.55,-41.913,258.629,-41.832,258.704,-41.751,258.783,-41.669,258.75,-41.53,258.721,-41.391,258.796,-41.309,258.875,-41.228,258.842,-41.088,258.813,-40.949,258.779,-40.809,258.671,-40.751,258.567,-40.693,258.533,-40.554,258.504,-40.414,258.396,-40.356,258.292,-40.298,258.262,-40.158,258.233,-40.019,258.125,-39.96,258.021,-39.901,257.992,-39.762,257.963,-39.622,257.858,-39.563,257.754,-39.504,257.646,-39.446,257.467,-39.467,257.283,-39.488,257.179,-39.429,257.079,-39.369,256.975,-39.31,256.871,-39.25,256.767,-39.19,256.663,-39.131,256.558,-39.071,256.458,-39.011,256.354,-38.951,256.25,-38.89,256.071,-38.91,255.992,-38.989,255.917,-39.069,255.837,-39.148,255.863,-39.289],["#396bad",259.429,-34.193,259.358,-34.275,259.288,-34.357,259.221,-34.438,259.15,-34.52,259.079,-34.602,259.008,-34.683,258.938,-34.765,258.867,-34.846,258.8,-34.928,258.729,-35.009,258.658,-35.091,258.583,-35.172,258.417,-35.195,258.246,-35.218,258.171,-35.299,258.1,-35.38,257.929,-35.402,257.758,-35.424,257.587,-35.446,257.417,-35.468,257.342,-35.548,257.367,-35.688,257.467,-35.747,257.567,-35.806,257.667,-35.865,257.767,-35.924,257.867,-35.983,257.967,-36.042,258.067,-36.101,258.238,-36.078,258.412,-36.055,258.313,-35.997,258.512,-36.113,258.613,-36.172,258.788,-36.148,258.958,-36.125,259.133,-36.101,259.304,-36.077,259.475,-36.053,259.65,-36.028,259.821,-36.003,259.992,-35.978,260.163,-35.953,260.233,-35.871,260.304,-35.788,260.375,-35.706,260.446,-35.624,260.512,-35.541,260.583,-35.459,260.654,-35.376,260.721,-35.294,260.792,-35.211,260.858,-35.128,261.029,-35.102,261.2,-35.075,261.267,-34.992,261.337,-34.909,261.404,-34.826,261.471,-34.743,261.538,-34.66,261.608,-34.577,261.675,-34.494,261.642,-34.355,261.542,-34.3,261.442,-34.244,261.408,-34.105,261.375,-33.966,261.342,-33.827,261.308,-33.689,261.275,-33.55,261.246,-33.411,261.212,-33.272,261.179,-33.133,261.15,-32.995,261.117,-32.856,261.083,-32.717,261.054,-32.578,260.954,-32.522,260.858,-32.466,260.825,-32.327,260.663,-32.353,260.596,-32.436,260.525,-32.518,260.458,-32.601,260.392,-32.683,260.425,-32.822,260.454,-32.961,260.387,-33.044,260.321,-33.126,260.25,-33.208,260.183,-33.291,260.117,-33.373,260.046,-33.455,259.979,-33.537,259.913,-33.619,259.842,-33.701,259.775,-33.783,259.704,-33.866,259.637,-33.947,259.567,-34.029,259.496,-34.111,259.429,-34.193],["#396bad",261.754,-24.464,261.783,-24.602,261.817,-24.74,261.846,-24.878,261.879,-25.016,261.817,-25.099,261.758,-25.183,261.792,-25.321,261.821,-25.459,261.762,-25.542,261.7,-25.626,261.637,-25.709,261.579,-25.792,261.517,-25.875,261.454,-25.958,261.392,-26.041,261.333,-26.124,261.363,-26.262,261.396,-26.401,261.333,-26.483,261.363,-26.622,261.458,-26.677,261.55,-26.733,261.642,-26.788,261.8,-26.76,261.858,-26.677,262.017,-26.649,262.171,-26.621,262.229,-26.537,262.292,-26.454,262.354,-26.37,262.413,-26.287,262.567,-26.258,262.721,-26.229,262.783,-26.145,262.842,-26.061,262.996,-26.032,263.15,-26.002,263.213,-25.918,263.271,-25.834,263.425,-25.804,263.579,-25.774,263.637,-25.69,263.604,-25.552,263.571,-25.414,263.538,-25.276,263.504,-25.138,263.471,-25,263.438,-24.862,263.342,-24.808,263.25,-24.754,263.158,-24.7,263.067,-24.646,262.971,-24.592,262.879,-24.538,262.788,-24.484,262.696,-24.429,262.604,-24.375,262.512,-24.32,262.421,-24.266,262.267,-24.295,262.117,-24.324,261.963,-24.352,261.813,-24.38,261.754,-24.464],["#396bad",276.092,-9.773,276.133,-9.909,276.175,-10.044,276.217,-10.179,276.258,-10.314,276.35,-10.361,276.392,-10.496,276.433,-10.632,276.525,-10.678,276.613,-10.725,276.704,-10.772,276.792,-10.819,276.883,-10.866,276.975,-10.912,277.063,-10.959,277.154,-11.006,277.292,-10.964,277.429,-10.922,277.567,-10.88,277.704,-10.838,277.842,-10.796,277.979,-10.754,278.025,-10.666,278.075,-10.577,278.213,-10.535,278.346,-10.493,278.396,-10.404,278.442,-10.316,278.488,-10.227,278.446,-10.092,278.404,-9.957,278.45,-9.869,278.408,-9.734,278.317,-9.687,278.229,-9.641,278.137,-9.594,278.05,-9.548,277.958,-9.502,277.867,-9.455,277.779,-9.409,277.688,-9.362,277.554,-9.404,277.417,-9.446,277.325,-9.399,277.237,-9.352,277.146,-9.306,277.058,-9.259,276.921,-9.301,276.783,-9.343,276.646,-9.384,276.508,-9.426,276.371,-9.467,276.233,-9.508,276.187,-9.597,276.137,-9.685,276.092,-9.773],["#396bad",249.667,-35.661,249.587,-35.736,249.508,-35.81,249.425,-35.885,249.438,-36.026,249.45,-36.166,249.367,-36.241,249.379,-36.381,249.475,-36.447,249.567,-36.513,249.658,-36.579,249.754,-36.645,249.929,-36.636,250.104,-36.626,250.279,-36.616,250.454,-36.606,250.629,-36.596,250.804,-36.585,250.887,-36.509,250.967,-36.433,251.046,-36.357,251.125,-36.282,251.204,-36.206,251.283,-36.129,251.363,-36.053,251.442,-35.977,251.617,-35.965,251.792,-35.952,251.871,-35.876,251.946,-35.799,252.025,-35.723,252.008,-35.582,251.992,-35.442,251.975,-35.301,251.958,-35.161,251.867,-35.097,251.771,-35.033,251.675,-34.969,251.504,-34.982,251.333,-34.994,251.163,-35.006,250.992,-35.017,250.821,-35.028,250.646,-35.039,250.571,-35.115,250.492,-35.19,250.413,-35.266,250.333,-35.341,250.158,-35.351,249.987,-35.361,249.908,-35.436,249.829,-35.511,249.746,-35.586,249.667,-35.661],["#396bad",263.95,-29.899,263.987,-30.037,264.021,-30.176,263.958,-30.26,263.896,-30.344,263.933,-30.482,263.967,-30.62,263.904,-30.705,263.842,-30.789,263.879,-30.927,263.913,-31.065,263.95,-31.203,263.983,-31.341,264.021,-31.479,264.121,-31.533,264.221,-31.587,264.317,-31.64,264.417,-31.694,264.517,-31.747,264.617,-31.801,264.717,-31.854,264.879,-31.822,264.842,-31.684,264.742,-31.631,264.804,-31.546,264.867,-31.462,264.829,-31.324,264.729,-31.271,264.629,-31.217,264.596,-31.08,264.558,-30.942,264.521,-30.804,264.583,-30.719,264.646,-30.635,264.608,-30.497,264.575,-30.359,264.538,-30.221,264.5,-30.083,264.563,-29.998,264.625,-29.914,264.688,-29.829,264.746,-29.744,264.713,-29.607,264.613,-29.553,264.454,-29.584,264.296,-29.616,264.137,-29.646,264.075,-29.731,264.012,-29.815,263.95,-29.899],["#396bad",97.6,34.925,97.654,34.837,97.6477,34.8422,97.6,34.925]]'),z3={galaxy:O_};function N_(t,e,n,i,s,r,a){s.children=s.children.filter(l=>!l.isGalaxyLine);const o=new St;if(o.name="galaxy_lines",!r||!z3)return;const c=Dt.normal.galaxy;for(const l of z3.galaxy){if(!l||l.length<3)continue;l[0];const u=l.slice(1),d=new vt,m=new Float32Array(u.length/2*3);for(let g=0,p=0;g<u.length;g+=2,p+=3){const _=u[g],D=u[g+1],T=Qt(_,D,t,e,n,i);m[p]=T.x,m[p+1]=T.y,m[p+2]=T.z}d.setAttribute("position",new on(m,3));const h=new _n({color:c,transparent:!0,opacity:.5}),f=new Tn(d,h);f.isGalaxyLine=!0,o.add(f)}return o.renderOrder=0,s.add(o),o}const G3=[["M1",83.6330833,22.0145],["M2",323.3625417,-.823333],["M3",205.5485417,28.3775],["M4",245.8964583,-26.525],["M5",229.6389583,2.081],["M6",265.071,-32.216],["M7",265.983125,-34.8],["M8",270.9257917,-24.38],["M9",258.114625,-18.516],["M10",254.2870417,-4.1],["M11",282.7720417,-6.27],["M12",250.4210833,-1.95],["M13",250.4235,36.461],["M14",264.400875,-3.245],["M15",322.49375,12.1668],["M16",274.7,-13.8067],["M17",275.0520833,-16.1719],["M18",275.3229583,-17.312],["M19",261.9015,-26.267],["M20",270.66,-23.013],["M21",270.13,-22.483],["M22",279.1,-23.9],["M23",269.15,-19.0167],["M24",270.45,-18.5167],["M25",279.55,-19.1167],["M26",279.85,-9.4],["M27",299.90125,22.7217],["M28",276.1370833,-24.8697],["M29",308.5635417,38.5167],["M30",326.174375,-23.18],["M31",10.6847083,41.2692],["M32",10.67425,40.8667],["M33",23.4620833,30.6599],["M34",40.5147083,42.78],["M35",92.3845417,24.35],["M36",83.79,34.133],["M37",88.05,32.55],["M38",85.27,35.85],["M39",322.6,48.5],["M40",183.45,58.0833],["M41",101.5,-20.75],["M42",83.8220833,-5.3911],["M43",83.82125,-5.2833],["M44",130.025,19.6667],["M45",56.75,24.1167],["M46",116.15,-14.8167],["M47",119.6,-14.4833],["M48",123.4,-5.8],["M49",187.4441667,8.0004],["M50",105.75,-8.3333],["M51",202.4695833,47.1952],["M52",359.25,61.6],["M53",198.2295833,18.1697],["M54",283.7635417,-30.478],["M55",294.9954167,-30.966],["M56",289.1475,30.184],["M57",283.39625,33.028],["M58",187.2352083,11.5531],["M59",187.8629167,11.6492],["M60",189.36625,11.5525],["M61",185.47875,4.4733],["M62",255.3033333,-30.113],["M63",198.96,42.0286],["M64",193.52,21.6833],["M65",169.5454167,13.0925],["M66",170.06375,12.9914],["M67",132.825,11.8],["M68",186.5483333,-26.745],["M69",277.84625,-32.35],["M70",277.84625,-32.3],["M71",298.44375,18.7833],["M72",313.3666667,-12.533],["M73",313.75,-12.633],["M74",24.174375,15.7833],["M75",300.18375,-21.92],["M76",10.2291667,51.583],["M77",40.6695417,.0133],["M78",86.1870833,3.75],["M79",83.0745833,-24.524],["M80",244.26125,-22.976],["M81",148.8885417,69.0653],["M82",148.9689583,69.6797],["M83",204.2535417,-29.867],["M84",186.26625,12.8872],["M85",186.35,18.1914],["M86",186.5545833,12.945],["M87",187.705,12.3911],["M88",187.9602083,14.4203],["M89",188.915,12.5569],["M90",189.045,13.1667],["M91",188.7620833,14.4964],["M92",259.28125,43.1369],["M93",114.6,-23.8667],["M94",192.7210417,41.1197],["M95",161.69125,11.7047],["M96",161.6883333,11.8192],["M97",168.6989583,55.0197],["M98",185.0225,14.4131],["M99",185.7295833,14.4181],["M100",185.7283333,15.8222],["M101",210.8020833,54.3489],["M102",230.17125,55.3822],["M103",10.7225,60.7167],["M104",189.9970833,-11.623],["M105",161.6645833,12.5817],["M106",184.7395833,47.3042],["M107",247.15125,-13.058],["M108",165.5795833,55.6761],["M109",167.8458333,53.3742],["M110",10.09125,41.6847]];function F_(t,e,n,i,s,r,a){s.children=s.children.filter(l=>!l.isMessierObject);const o=new St;if(o.name="messier",!r||!G3)return;const c=Dt.normal.pointers;for(const[l,u,d]of G3){const m=Qt(u,d,t,e,n,i);if(a&&m.y<0)continue;const h=new Os(.5,.5,.5),f=new kn({color:c}),g=new Nt(h,f);g.position.copy(m),g.isMessierObject=!0,o.add(g);const p=rs(l,c);p.position.copy(m.clone().add(new O(0,1,0))),o.add(p),bt.register("messier",{ra:u*lt,dec:d*lt,label:l,xyz:m})}return s.add(o),o}function B_(t,e,n,i){if(!i)return new St;const s=new St,r=15,a=15;for(let o=0;o<=90;o+=r){const c=[];for(let m=0;m<=360;m+=1){const h=cr(m,e),f=o*lt;c.push(wi(h,f,t))}const l=new vt().setFromPoints(c),u=new _n({color:Dt.normal.azLines,transparent:!0,opacity:.6}),d=new Tn(l,u);s.add(d)}for(let o=0;o<360;o+=a){const c=[];for(let m=0;m<=90;m+=1){const h=cr(o,e),f=m*lt;c.push(wi(h,f,t))}const l=new vt().setFromPoints(c),u=new _n({color:Dt.normal.azLines,transparent:!0,opacity:.6}),d=new Tn(l,u);s.add(d)}return s}function z_(t,e,n,i,s){if(!s)return new St;const r=new St,a=15,o=15;for(let c=-90;c<=90;c+=a){if(Math.abs(c)>85)continue;const l=[];for(let d=0;d<=360;d+=1){const m=Qt(d,c,i,e,n,t);l.push(m)}const u=new Tn(new vt().setFromPoints(l),new _n({color:Dt.normal.eqLines,transparent:!0,opacity:.6}));r.add(u)}for(let c=0;c<360;c+=o){const l=[];for(let h=-90;h<=90;h+=1){const f=Qt(c,h,i,e,n,t);l.push(f)}const m=new Tn(new vt().setFromPoints(l),new _n({color:Dt.normal.eqLines,transparent:!0,opacity:.6}));r.add(m)}return r}function G_(t,e,n,i){if(!i)return new St;const s=new St,r=[];for(let l=-90;l<=90;l+=1){const u=n>=0?0:180,d=cr(u,e),m=l*lt;r.push(wi(d,m,t))}for(let l=90;l>=-90;l-=1){const u=(n>=0,180),d=cr(u,e),m=l*lt;r.push(wi(d,m,t))}const a=new vt().setFromPoints(r),o=new _n({color:Dt.normal.meridian,transparent:!0,opacity:.4}),c=new Tn(a,o);return s.add(c),s}function H_(t,e,n,i,s,r){if(!r)return new St;const a=new St,o=2,{LST:c}=ya(t,i),l=n*lt,u=[];for(let h=0;h<=360;h+=o){const f=I3(h,0,c,l,e,s);u.push(f)}const d=I3(0,0,c,l,e,s);u.push(d);const m=new Tn(new vt().setFromPoints(u),new _n({color:Dt.normal.ec,transparent:!0,opacity:.4}));return a.add(m),a}function k_(t,e,n){if(!n)return;const i=new ti(t,64,32,0,Math.PI*2,Math.PI/2,Math.PI/2),s=new kn({color:0,side:Ft,transparent:!1,opacity:1,depthWrite:!0,depthTest:!0}),r=new Nt(i,s);return r.renderOrder=999,e.add(r),r}function V_(t,e,n,i,s,r,a,o){const c=e.domElement.getBoundingClientRect(),l=new qc,u=new Fe;u.x=(t.clientX-c.left)/c.width*2-1,u.y=-((t.clientY-c.top)/c.height)*2+1,l.setFromCamera(u,n);const d=l.intersectObject(i);if(d.length>0){const m=d[0].point,h=Math.PI/2-r*lt,f=m.clone();f.applyAxisAngle(new O(1,0,0),-h);const g=f.length(),p=Math.asin(f.y/g),D=Math.atan2(-f.x,f.z)+o*lt,{LST:T}=ya(s,a);let S=Math.PI*T/12-D;return S<0&&(S+=2*Math.PI),S>2*Math.PI&&(S-=2*Math.PI),{ra:S,dec:p}}return null}function J_(t,e,n){let i=null,s=1/0;for(const r in n)for(const a of n[r]){const o=W_(t,e,a.ra,a.dec);o<s&&(i={type:r,label:a.label,distance:o,ra:a.ra,dec:a.dec},s=o)}return i&&(i.distance=i.distance/lt),i}function W_(t,e,n,i){return Math.acos(Math.cos(e)*Math.cos(i)*Math.cos(t-n)+Math.sin(e)*Math.sin(i))}const Q_=10,Et=100,$s=180,X_=50;class q_{constructor(e,n){Le(this,"scene");Le(this,"camera");Le(this,"renderer");Le(this,"controls");Le(this,"skySphere");Le(this,"starField");Le(this,"galaxyMesh");Le(this,"constellationLines");Le(this,"constellationBoundaries");Le(this,"meteorShowers");Le(this,"messierObjects");Le(this,"planets",{});Le(this,"planetOrbitLines");Le(this,"sunMesh");Le(this,"moonMesh");Le(this,"azAltLines");Le(this,"raDecLines");Le(this,"meridian");Le(this,"eclipticLine");Le(this,"ground");Le(this,"longPressTimeout",null);Le(this,"touchStartTime",0);Le(this,"config");Le(this,"destroyed",!1);Le(this,"cleanupList",[]);this.config=structuredClone(n),this.scene=new Lc,this.scene.background=new $e(0);const i=e.clientWidth,s=e.clientHeight;this.camera=new rn(X_,i/s,.1,Et*10),this.renderer=new Pu({antialias:!0}),this.renderer.domElement.style.touchAction="none",this.renderer.setSize(i,s),e.appendChild(this.renderer.domElement),this.controls=new Iu(this.camera,this.renderer.domElement),this.controls.enableZoom=!0,this.controls.zoomSpeed=.5,this.controls.rotateSpeed=.6,this.controls.enableDamping=!0,this.controls.minDistance=1,this.controls.maxDistance=Et*.6,this.controls.minPolarAngle=Math.PI/2,this.controls.maxPolarAngle=Math.PI/2,this.controls.target.set(0,Et*.5+20,0),this.controls.update(),this.camera.position.set(0,0,Q_),this.camera.updateProjectionMatrix(),this.initSky(),this.initStars(),this.initPlanets(),this.initSunMoon(),this.initMeteorShowers(),this.initConstellationLines(),this.initConstellationBoundaries(),this.initGalaxy(),this.initAzAltLines(),this.initRaDecLines(),this.initMeridian(),this.initEclipticLine(),this.initCardinalPoints(),this.initGround();const r=this.onWindowResize.bind(this);window.addEventListener("resize",r),this.cleanupList.push(()=>{window.removeEventListener("resize",r)}),this.bindLongPress(),this.animate()}initSky(){this.skySphere=Xu(Et),this.scene.add(this.skySphere)}async initStars(){this.starField=await fh(this.config.magnitude,this.config.clock,this.config.latitude,this.config.longitude,Et,this.config.showGround),this.scene.add(this.starField)}initPlanets(){const e=["Mercury","Venus","Mars","Jupiter","Saturn","Uranus","Neptune"],n={},i={};e.forEach(s=>{n[s]=g_(s,this.config.clock,this.config.latitude,this.config.longitude,Et,this.scene,this.config.showPlanets.planets,this.config.showPlanets.labels,this.config.showGround),i[s]=__(s,this.config.clock,Et,this.scene,this.config.latitude,this.config.longitude,this.config.showPlanets.orbits)}),this.planets=n,this.planetOrbitLines=i}initSunMoon(){this.sunMesh=S_(this.config.clock,this.config.latitude,this.config.longitude,Et,this.scene,this.config.showPlanets.planets,this.config.showPlanets.labels,this.config.showGround),this.moonMesh=T_(this.config.clock,this.config.latitude,this.config.longitude,Et,this.scene,this.config.showPlanets.planets,this.config.showPlanets.labels,this.config.showGround)}initMeteorShowers(){this.meteorShowers=A_(this.config.clock,this.config.latitude,this.config.longitude,Et,this.scene,this.config.meteorshowers)}initCardinalPoints(){new b_({scene:this.scene,az:$s,radius:Et})}initConstellationLines(){this.constellationLines=R_(this.config.clock,this.config.latitude,this.config.longitude,Et,this.scene,this.config.showGround,this.config.constellation.lines,this.config.constellation.labels)}initConstellationBoundaries(){this.constellationBoundaries=I_(this.config.clock,this.config.latitude,this.config.longitude,Et,this.scene,this.config.showGround,this.config.showBoundraies)}initGalaxy(){this.galaxyMesh=N_(this.config.clock,this.config.latitude,this.config.longitude,Et,this.scene,this.config.showGalaxy,this.config.showGround)}initMessier(){this.messierObjects=F_(this.config.clock,this.config.latitude,this.config.longitude,Et,this.scene,this.config.showMessier,this.config.showGround)}initAzAltLines(){this.azAltLines=B_(Et,$s,this.config.latitude,this.config.showAzAlt),this.scene.add(this.azAltLines)}initRaDecLines(){this.raDecLines=z_(Et,this.config.latitude,this.config.longitude,this.config.clock,this.config.showRaDec),this.scene.add(this.raDecLines)}initMeridian(){this.meridian=G_(Et,$s,this.config.latitude,this.config.showMeridian),this.scene.add(this.meridian)}initEclipticLine(){this.eclipticLine=H_(this.config.clock,Et,this.config.latitude,this.config.longitude,$s,this.config.showEcliptic),this.scene.add(this.eclipticLine)}initGround(){this.ground=k_(Et,this.scene,this.config.showGround)}updateConfig(e){const n=new Date(this.config.clock.getTime()),i=this.config.magnitude,s=this.config.longitude,r=this.config.latitude;if(e.clock!==void 0){const a=n.getTime(),o=e.clock.getTime();Math.abs(o-a)>1e3&&(this.updateStars(),this.config.showPlanets&&this.updatePlanets(),this.config.constellation.lines&&this.updateConstellations(),this.config.showBoundraies&&this.updateConstellationBoundaries(),this.config.meteorshowers&&this.updateMeteorShowers(),this.config.showGalaxy&&this.updateGalaxy(),this.config.showMessier&&this.updateMessier())}this.config={...this.config,...e},(e.longitude!==void 0&&e.longitude!==s||e.latitude!==void 0&&e.latitude!==r)&&(this.updateAzAltLines(),this.updateGround(),this.updateRaDecLines(),this.config.showPlanets&&this.updatePlanets(),this.config.constellation.lines&&this.updateConstellations(),this.config.showBoundraies&&this.updateConstellationBoundaries(),this.config.meteorshowers&&this.updateMeteorShowers(),this.config.showGalaxy&&this.updateGalaxy(),this.config.showMessier&&this.updateMessier()),e.showGround!==void 0&&(this.updateStars(),this.updateGround(),this.config.showPlanets&&this.updatePlanets(),this.config.constellation.lines&&this.updateConstellations(),this.config.showBoundraies&&this.updateConstellationBoundaries(),this.config.meteorshowers&&this.updateMeteorShowers(),this.config.showGalaxy&&this.updateGalaxy(),this.config.showMessier&&this.updateMessier()),e.magnitude!==void 0&&e.magnitude!==i&&this.updateStars(),e.showPlanets!==void 0&&this.updatePlanets(),e.constellation!==void 0&&this.updateConstellations(),e.showBoundraies!==void 0&&this.updateConstellationBoundaries(),e.meteorshowers!==void 0&&this.updateMeteorShowers(),e.showGalaxy!==void 0&&this.updateGalaxy(),e.showMessier!==void 0&&this.updateMessier(),e.showAzAlt!==void 0&&this.updateAzAltLines(),e.showRaDec!==void 0&&this.updateRaDecLines(),e.showMeridian!==void 0&&this.updateMeridian(),e.showEcliptic!==void 0&&this.updateEclipticLine()}updateStars(){this.starField&&this.scene.remove(this.starField),this.initStars()}updatePlanets(){Object.values(this.planets).forEach(e=>this.scene.remove(e)),Object.values(this.planetOrbitLines).forEach(e=>this.scene.remove(e)),this.sunMesh&&this.scene.remove(this.sunMesh),this.moonMesh&&this.scene.remove(this.moonMesh),this.initPlanets(),this.initSunMoon()}async updateConstellations(){this.constellationLines&&this.scene.remove(await this.constellationLines),this.initConstellationLines()}async updateConstellationBoundaries(){this.constellationBoundaries&&this.scene.remove(this.constellationBoundaries),this.initConstellationBoundaries()}updateMeteorShowers(){this.meteorShowers&&this.scene.remove(this.meteorShowers),this.initMeteorShowers()}updateGalaxy(){this.galaxyMesh&&this.scene.remove(this.galaxyMesh),this.initGalaxy()}updateMessier(){this.messierObjects&&this.scene.remove(this.messierObjects),this.initMessier()}updateAzAltLines(){this.azAltLines&&this.scene.remove(this.azAltLines),this.initAzAltLines()}updateRaDecLines(){this.raDecLines&&this.scene.remove(this.raDecLines),this.initRaDecLines()}updateMeridian(){this.meridian&&this.scene.remove(this.meridian),this.initMeridian()}updateEclipticLine(){this.eclipticLine&&this.scene.remove(this.eclipticLine),this.initEclipticLine()}updateGround(){this.ground&&this.scene.remove(this.ground),this.initGround()}onWindowResize(){var i,s;const e=((i=this.renderer.domElement.parentElement)==null?void 0:i.clientWidth)||window.innerWidth,n=((s=this.renderer.domElement.parentElement)==null?void 0:s.clientHeight)||window.innerHeight;this.camera.aspect=e/n,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,n)}bindLongPress(){this.renderer.domElement.addEventListener("click",this.onClick.bind(this))}onClick(e){const{ra:n,dec:i}=V_(e,this.renderer,this.camera,this.skySphere,this.config.clock,this.config.latitude,this.config.longitude,$s),s=J_(n,i,bt.lookup);console.log(s)}onTouchStart(e){this.touchStartTime=Date.now()}onTouchEnd(e){Date.now()-this.touchStartTime}animate(){this.destroyed||(requestAnimationFrame(()=>this.animate()),this.controls.update(),this.renderer.render(this.scene,this.camera))}destroy(){this.destroyed=!0,this.cleanupList.forEach(e=>e()),this.renderer.dispose(),this.scene.clear()}}const $_={longitude:120.5853,latitude:31.2989,clock:new Date,magnitude:5,showPlanets:{planets:!0,labels:!0,orbits:!1},constellation:{lines:!1,labels:!1},showBoundraies:!1,showGalaxy:!1,meteorshowers:!1,showMessier:!1,showGround:!0,showAzAlt:!1,showRaDec:!1,showMeridian:!1,showEcliptic:!1},Y_=""+new URL("calendar-yCaLhMsW.svg",import.meta.url).href,j_="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2455'%3e%3crect%20x='24'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20transform='matrix(-1,0,0,1,48,0)'%20clip-path='url(%23master_svg0_287_2455)'%3e%3cg%3e%3cpath%20d='M24,18.0702C24,18.7239,24.403773,19,24.831757,19C25.02039,19,25.20211,18.9476,25.37,18.8552L35.4505,12.76103C35.8319,12.5366,36.0274,12.3281,36.0274,12.003499999999999C36.0274,11.67891,35.8319,11.470410000000001,35.4505,11.245989999999999L25.37,5.151815C25.20211,5.0566872,25.02039,5,24.831757,5C24.403773,5,24,5.280332,24,5.927193L24,18.0702ZM35.9794,18.0702C35.9794,18.7239,36.3805,19,36.8112,19C36.9902,19,37.1816,18.9476,37.3425,18.8552L47.4202,12.76103C47.8114,12.5366,48,12.3281,48,12.003499999999999C48,11.67891,47.8114,11.470410000000001,47.4202,11.245989999999999L37.3425,5.151815C37.1816,5.0566872,36.9902,5,36.8112,5C36.3805,5,35.9794,5.280332,35.9794,5.927193L35.9794,18.0702Z'%20fill='%23FFFFFF'%20fill-opacity='0.699999988079071'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",Z_="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2453'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2453)'%3e%3cg%3e%3cpath%20d='M5.48466,23L8.70612,23C9.73591,23,10.19078,22.5863,10.19078,21.6127L10.19078,2.38345C10.19078,1.404187,9.73591,1,8.70612,1L5.48466,1C4.454873,1,4,1.419928,4,2.38345L4,21.6127C4,22.5863,4.454873,23,5.48466,23ZM15.3089,23L18.5154,23C19.5601,23,20,22.5863,20,21.6127L20,2.38345C20,1.404187,19.5601,1,18.5154,1L15.3089,1C14.2641,1,13.80917,1.419928,13.80917,2.38345L13.80917,21.6127C13.80917,22.5863,14.2641,23,15.3089,23Z'%20fill='%23FFFFFF'%20fill-opacity='0.699999988079071'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",K_="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2447'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2447)'%3e%3cg%3e%3cpath%20d='M0,18.0702C0,18.7239,0.403773,19,0.831757,19C1.02039,19,1.20211,18.9476,1.37,18.8552L11.4505,12.76103C11.8319,12.5366,12.0274,12.3281,12.0274,12.003499999999999C12.0274,11.67891,11.8319,11.470410000000001,11.4505,11.245989999999999L1.37,5.151815C1.20211,5.0566872,1.02039,5,0.831757,5C0.403773,5,0,5.280332,0,5.927193L0,18.0702ZM11.9794,18.0702C11.9794,18.7239,12.3805,19,12.8112,19C12.9902,19,13.1816,18.9476,13.3425,18.8552L23.4202,12.76103C23.8114,12.5366,24,12.3281,24,12.003499999999999C24,11.67891,23.8114,11.470410000000001,23.4202,11.245989999999999L13.3425,5.151815C13.1816,5.0566872,12.9902,5,12.8112,5C12.3805,5,11.9794,5.280332,11.9794,5.927193L11.9794,18.0702Z'%20fill='%23FFFFFF'%20fill-opacity='0.699999988079071'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",eM=""+new URL("now-BIgJoMvo.svg",import.meta.url).href,H3=""+new URL("now_disabled-s1_02jiq.svg",import.meta.url).href,Ys="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='16'%20height='16'%20viewBox='0%200%2016%2016'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2520'%3e%3crect%20x='0'%20y='0'%20width='16'%20height='16'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2520)'%3e%3cg%3e%3cpath%20d='M8.6869240234375,7.06066L11.9798240234375,10.35355Q12.0501440234375,10.42388,12.1420340234375,10.46194Q12.2339140234375,10.5,12.3333740234375,10.5Q12.3826140234375,10.5,12.4309140234375,10.49039Q12.4792140234375,10.48078,12.5247140234375,10.46194Q12.5702140234375,10.44309,12.6111540234375,10.41573Q12.6521040234375,10.38837,12.6869240234375,10.35355Q12.7217440234375,10.31873,12.7491040234375,10.27778Q12.7764640234375,10.23684,12.7953140234375,10.19134Q12.8141540234375,10.14584,12.8237640234375,10.09755Q12.8333740234375,10.04925,12.8333740234375,10Q12.8333740234375,9.90054,12.7953140234375,9.80866Q12.7572540234375,9.71677,12.6869240234375,9.64645L9.3940340234375,6.353553Q8.9546940234375,5.9142136,8.3333740234375,5.9142136Q7.7120540234375,5.9142136,7.2727140234375,6.353554L3.9798210234375,9.64645Q3.9094940234375,9.71677,3.8714340234374998,9.80866Q3.8333740234375,9.90054,3.8333740234375,10Q3.8333740234375,10.04925,3.8429810234375,10.09755Q3.8525890234375,10.14584,3.8714340234374998,10.19134Q3.8902800234375,10.23684,3.9176390234375,10.27778Q3.9449990234375,10.31873,3.9798210234375,10.35355Q4.0146430234375,10.38837,4.0555890234375,10.41573Q4.0965350234375,10.44309,4.1420320234375,10.46194Q4.1875290234375,10.48078,4.2358289234375,10.49039Q4.2841283234375,10.5,4.3333740234375,10.5Q4.4328302234375,10.5,4.5247160234375,10.46194Q4.6166010234375,10.42388,4.6869270234375,10.35355L4.6871410234375,10.35334L7.9798240234375,7.06066Q8.1262640234375,6.914214,8.3333740234375,6.914214Q8.5404840234375,6.914214,8.6869240234375,7.06066Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='0.30000001192092896'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",js="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='15.774648666381836'%20height='16'%20viewBox='0%200%2015.774648666381836%2016'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_1773'%3e%3crect%20x='0'%20y='16'%20width='15.774648666381836'%20height='16'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20transform='matrix(1,0,0,-1,0,32)'%20clip-path='url(%23master_svg0_287_1773)'%3e%3cg%3e%3cpath%20d='M11.8034788671875,26.35091L11.8036088671875,26.35104Q11.8740888671875,26.42252,11.9666888671875,26.46126Q12.059288867187501,26.5,12.159658867187499,26.5Q12.2089088671875,26.5,12.2572088671875,26.490389999999998Q12.3055088671875,26.48078,12.3510088671875,26.46194Q12.3964988671875,26.443089999999998,12.4374488671875,26.41573Q12.4783888671875,26.388370000000002,12.5132188671875,26.35355Q12.5480388671875,26.318730000000002,12.5753988671875,26.27778Q12.6027588671875,26.23684,12.6215988671875,26.19134Q12.6404488671875,26.14584,12.6500588671875,26.09755Q12.6596588671875,26.04925,12.6596588671875,26Q12.6596588671875,25.90146,12.6222788671875,25.810299999999998Q12.5848888671875,25.71913,12.5157188671875,25.64896L12.5153988671875,25.64864L9.2841588671875,22.37124Q8.8435588671875,21.9243509,8.2159988671875,21.9243508Q7.5884388671875005,21.9243508,7.1478488671875,22.37124L3.9162868671875,25.64896Q3.8471078671875,25.71913,3.8097238671875,25.810299999999998Q3.7723388671875,25.90146,3.7723388671875,26Q3.7723388671875,26.04925,3.7819458671875,26.09755Q3.7915538671875,26.14584,3.8103988671874998,26.19134Q3.8292448671875,26.23684,3.8566038671875,26.27778Q3.8839638671875,26.318730000000002,3.9187858671875,26.35355Q3.9536078671875,26.388370000000002,3.9945538671875,26.41573Q4.0354998671875,26.443089999999998,4.0809968671875,26.46194Q4.1264938671875,26.48078,4.1747937671875,26.490389999999998Q4.2230931671875,26.5,4.2723388671875,26.5Q4.3727168671875,26.5,4.4653178671875,26.46126Q4.5579178671875,26.42252,4.6283908671875,26.35104L4.6285208671875,26.35091L7.8599488671875,23.07331Q8.0068188671875,22.924351,8.2159988671875,22.924351Q8.4251888671875,22.924351,8.572048867187501,23.07331L11.8034788671875,26.35091Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='0.30000001192092896'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",k3="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2457'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2457)'%3e%3cg%3e%3cpath%20d='M3,21.5889C3,22.5891,3.5826219999999998,23,4.1959800000000005,23C4.46465,23,4.74633,22.9216,4.99053,22.77L20.1549,13.1469C20.7292,12.7919,21,12.485,21,12.005C21,11.5112,20.7292,11.2082,20.1549,10.86311L4.99053,1.230035C4.74633,1.0846042,4.46465,1,4.1959800000000005,1C3.5826219999999998,1,3,1.420811,3,2.42113L3,21.5889Z'%20fill='%23FFFFFF'%20fill-opacity='0.699999988079071'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e";class tM{constructor(){Le(this,"clock",new Date);Le(this,"playTimer",null);Le(this,"playSpeed",1);Le(this,"playDirection",null);Le(this,"isNowActive",!1)}getHTML(){const e=this.getDateParts(this.clock);return`
            <div class="datetime-picker">
                <div class="datetime-picker-now">
                    <span>${this.formatDate(this.clock)}</span>
                    <img id="open-datetime-picker" src="${Y_}">
                </div> 
                <div class="datetime-picker-control">
                    <div class="datetime-picker-control-left">
                        <img id="datetime-backward" src="${j_}">
                        <img id="datetime-pause" src="${k3}" data-state="paused">
                        <img id="datetime-forward" src="${K_}">
                    </div>
                    <img id="datetime-now" src="${H3}">
                </div>
            </div>
            <div class="datetime-picker-showbox" id="datetime-picker-showbox">
                <div id="datetime-year" class="datetime-showbox-num">
                    <img class="datetime-up" src="${Ys}">
                    <span class="datetime-year datetime-change">${String(e.year).padStart(4,"0")}</span>
                    <img class="datetime-down" src="${js}">
                </div>
                <div id="datetime-month" class="datetime-showbox-num">
                    <img class="datetime-up" src="${Ys}">
                    <span class="datetime-change">${String(e.month).padStart(2,"0")}</span>
                    <img class="datetime-down" src="${js}">
                </div>
                <div id="datetime-day" class="datetime-showbox-num">
                    <img class="datetime-up" src="${Ys}">
                    <span class="datetime-change">${String(e.day).padStart(2,"0")}</span>
                    <img class="datetime-down" src="${js}">
                </div>
                <div id="datetime-hour" class="datetime-showbox-num">
                    <img class="datetime-up" src="${Ys}">
                    <span class="datetime-change">${String(e.hour).padStart(2,"0")}</span>
                    <img class="datetime-down" src="${js}">
                </div>
                <div id="datetime-min" class="datetime-showbox-num">
                    <img class="datetime-up" src="${Ys}">
                    <span class="datetime-min datetime-change">${String(e.min).padStart(2,"0")}</span>
                    <img class="datetime-down" src="${js}">
                </div>
            </div>
        `}formatDate(e){const n=e.getFullYear(),i=String(e.getMonth()+1).padStart(2,"0"),s=String(e.getDate()).padStart(2,"0"),r=String(e.getHours()).padStart(2,"0"),a=String(e.getMinutes()).padStart(2,"0"),o=String(e.getSeconds()).padStart(2,"0");return`${n}·${i}·${s} ${r}:${a}:${o}`}getDateParts(e){return{year:e.getFullYear(),month:e.getMonth()+1,day:e.getDate(),hour:e.getHours(),min:e.getMinutes()}}updateHTML(e){const n=this.getDateParts(this.clock);e.querySelector(".datetime-picker-now span").textContent=this.formatDate(this.clock),e.querySelector("#datetime-year .datetime-change").textContent=String(n.year).padStart(4,"0"),e.querySelector("#datetime-month .datetime-change").textContent=String(n.month).padStart(2,"0"),e.querySelector("#datetime-day .datetime-change").textContent=String(n.day).padStart(2,"0"),e.querySelector("#datetime-hour .datetime-change").textContent=String(n.hour).padStart(2,"0"),e.querySelector("#datetime-min .datetime-change").textContent=String(n.min).padStart(2,"0"),this.isNowActive=!0,this.updateNowButton(e)}togglePicker(e){const n=e.querySelector("#open-datetime-picker"),i=e.querySelector("#datetime-picker-showbox");n&&i&&n.addEventListener("click",()=>{const s=i.style.display==="none"||getComputedStyle(i).display==="none";i.style.display=s?"flex":"none"})}bindControlEvents(e,n){const i=(s,r)=>{const a=new Date(this.clock);switch(s){case"year":const o=a.getFullYear()+r;o>=2020&&o<=2120&&a.setFullYear(o);break;case"month":a.setMonth(a.getMonth()+r);break;case"day":a.setDate(a.getDate()+r);break;case"hour":a.setHours(a.getHours()+r);break;case"min":a.setMinutes(a.getMinutes()+r);break}a.setSeconds(0),this.clock=a,this.updateHTML(e),n("toggleTime",this.clock)};e.querySelectorAll(".datetime-up, .datetime-down").forEach(s=>{s.addEventListener("click",()=>{const r=s.parentElement.id,o=s.classList.contains("datetime-up")?1:-1;r.includes("year")?i("year",o):r.includes("month")?i("month",o):r.includes("day")?i("day",o):r.includes("hour")?i("hour",o):r.includes("min")&&i("min",o)})})}toNowDate(e,n){e.querySelector("#datetime-now").addEventListener("click",()=>{this.clock=new Date,this.updateHTML(e),this.isNowActive=!1,this.updateNowButton(e),n("toggleTime",this.clock)})}bindPlayEvents(e,n){const i=e.querySelector("#datetime-backward"),s=e.querySelector("#datetime-forward"),r=e.querySelector("#datetime-pause");i==null||i.addEventListener("click",()=>{this.playTime(e,"backward",n),this.updatePauseIcon(r,!0)}),s==null||s.addEventListener("click",()=>{this.playTime(e,"forward",n),this.updatePauseIcon(r,!0)}),r==null||r.addEventListener("click",()=>{this.stopPlaying(),this.updatePauseIcon(r,!1)})}updatePauseIcon(e,n){e&&(e.src=n?Z_:k3,e.setAttribute("data-state",n?"playing":"paused"))}playTime(e,n,i){this.playDirection!==n?this.playSpeed=1:this.playSpeed<1e4&&(this.playSpeed*=10),this.stopPlaying(),this.playDirection=n,this.playTimer=window.setInterval(()=>{const s=new Date(this.clock),r=this.playSpeed;n==="forward"?s.setSeconds(s.getSeconds()+r):s.setSeconds(s.getSeconds()-r),this.clock=s,this.updateHTML(e),i("toggleTime",this.clock)},1e3)}stopPlaying(){this.playTimer!==null&&(clearInterval(this.playTimer),this.playTimer=null),this.playDirection=null}updateNowButton(e){const n=e.querySelector("#datetime-now");n&&(n.src=this.isNowActive?eM:H3)}bindEvents(e,n){this.togglePicker(e),this.bindControlEvents(e,n),this.toNowDate(e,n),this.bindPlayEvents(e,n)}}const Bo=bt.t.bind(bt);class nM{getHTML(){return`
        <div class="location-input">
            <input type="number" id="longitudeInput" placeholder="${Bo("longitude")}" step="0.0001" min="0" max="360">
            <input type="number" id="latitudeInput" placeholder="${Bo("latitude")}" step="0.0001" min="-90" max="90">
            <button id="setLocation">${Bo("positionchange")}</button>
        </div>
    `}bindEvents(e,n){const i=e.querySelector("#setLocation"),s=e.querySelector("#longitudeInput"),r=e.querySelector("#latitudeInput");i&&s&&r&&i.addEventListener("click",()=>{const a=parseFloat(s.value),o=parseFloat(r.value);if(isNaN(a)||isNaN(o)){alert("请输入有效的经纬度数值");return}if(a<0||a>360||o<-90||o>90){alert("经纬度范围超出限制");return}n("setLocation",{longitude:a,latitude:o})})}}const V3="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2527'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2527)'%3e%3cg%3e%3cpath%20d='M4.57538,4.57538Q1.5,7.65076,1.5,12Q1.5,16.3492,4.57538,19.4246Q7.65075,22.5,12,22.5Q16.3492,22.5,19.4246,19.4246Q22.5,16.3492,22.5,12Q22.5,7.65075,19.4246,4.57538Q16.3492,1.5,12,1.5Q7.65075,1.5,4.57538,4.57538ZM9.80171,2.73691Q7.25306,3.31191,5.28248,5.28248Q4.699059999999999,5.86591,4.23797,6.5L8.13345,6.5Q8.37452,5.57526,8.707329999999999,4.74324Q9.20346,3.5029,9.80171,2.73691ZM9.16911,6.5Q9.37177,5.77472,9.63581,5.11463Q10.68166,2.5,12,2.5Q13.3183,2.5,14.3642,5.11463Q14.6282,5.77472,14.8309,6.5L9.16911,6.5ZM7.90493,7.5L3.60399,7.5Q2.6124099999999997,9.31555,2.51144,11.5L7.50427,11.5Q7.5416,9.335270000000001,7.90493,7.5ZM8.50442,11.5Q8.54335,9.317820000000001,8.92535,7.5L15.0747,7.5Q15.4566,9.317820000000001,15.4956,11.5L8.50442,11.5ZM7.50427,12.5L2.51144,12.5Q2.6124099999999997,14.6845,3.60399,16.5L7.90493,16.5Q7.5416,14.6647,7.50427,12.5ZM8.92535,16.5Q8.54335,14.6822,8.50442,12.5L15.4956,12.5Q15.4566,14.6822,15.0747,16.5L8.92535,16.5ZM8.13345,17.5L4.23797,17.5Q4.699059999999999,18.1341,5.28248,18.7175Q7.25306,20.6881,9.8017,21.2631Q9.20346,20.4971,8.707329999999999,19.2568Q8.37452,18.4247,8.13345,17.5ZM14.1983,21.2631Q16.7469,20.6881,18.7175,18.7175Q19.3009,18.1341,19.762,17.5L15.8665,17.5Q15.6255,18.4247,15.2927,19.2568Q14.7965,20.4971,14.1983,21.2631ZM14.8309,17.5Q14.6282,18.2253,14.3642,18.8854Q13.3183,21.5,12,21.5Q10.68165,21.5,9.63581,18.8854Q9.37177,18.2253,9.16911,17.5L14.8309,17.5ZM16.095100000000002,16.5L20.396,16.5Q21.3876,14.6845,21.4886,12.5L16.4957,12.5Q16.458399999999997,14.6647,16.095100000000002,16.5ZM16.4957,11.5L21.4886,11.5Q21.3876,9.31555,20.396,7.5L16.095100000000002,7.5Q16.458399999999997,9.335270000000001,16.4957,11.5ZM15.8665,6.5L19.762,6.5Q19.3009,5.86591,18.7175,5.28248Q16.7469,3.31191,14.1983,2.73691Q14.7965,3.5029,15.2927,4.74324Q15.6255,5.57526,15.8665,6.5Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",iM="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2565'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2565)'%3e%3cg%3e%3cpath%20d='M4.57538,4.57538Q1.5,7.65076,1.5,12Q1.5,16.3492,4.57538,19.4246Q7.65075,22.5,12,22.5Q16.3492,22.5,19.4246,19.4246Q22.5,16.3492,22.5,12Q22.5,7.65075,19.4246,4.57538Q16.3492,1.5,12,1.5Q7.65075,1.5,4.57538,4.57538ZM9.80171,2.73691Q7.25306,3.31191,5.28248,5.28248Q4.699059999999999,5.86591,4.23797,6.5L8.13345,6.5Q8.37452,5.57526,8.707329999999999,4.74324Q9.20346,3.5029,9.80171,2.73691ZM9.16911,6.5Q9.37177,5.77472,9.63581,5.11463Q10.68166,2.5,12,2.5Q13.3183,2.5,14.3642,5.11463Q14.6282,5.77472,14.8309,6.5L9.16911,6.5ZM7.90493,7.5L3.60399,7.5Q2.6124099999999997,9.31555,2.51144,11.5L7.50427,11.5Q7.5416,9.335270000000001,7.90493,7.5ZM8.50442,11.5Q8.54335,9.317820000000001,8.92535,7.5L15.0747,7.5Q15.4566,9.317820000000001,15.4956,11.5L8.50442,11.5ZM7.50427,12.5L2.51144,12.5Q2.6124099999999997,14.6845,3.60399,16.5L7.90493,16.5Q7.5416,14.6647,7.50427,12.5ZM8.92535,16.5Q8.54335,14.6822,8.50442,12.5L15.4956,12.5Q15.4566,14.6822,15.0747,16.5L8.92535,16.5ZM8.13345,17.5L4.23797,17.5Q4.699059999999999,18.1341,5.28248,18.7175Q7.25306,20.6881,9.8017,21.2631Q9.20346,20.4971,8.707329999999999,19.2568Q8.37452,18.4247,8.13345,17.5ZM14.1983,21.2631Q16.7469,20.6881,18.7175,18.7175Q19.3009,18.1341,19.762,17.5L15.8665,17.5Q15.6255,18.4247,15.2927,19.2568Q14.7965,20.4971,14.1983,21.2631ZM14.8309,17.5Q14.6282,18.2253,14.3642,18.8854Q13.3183,21.5,12,21.5Q10.68165,21.5,9.63581,18.8854Q9.37177,18.2253,9.16911,17.5L14.8309,17.5ZM16.095100000000002,16.5L20.396,16.5Q21.3876,14.6845,21.4886,12.5L16.4957,12.5Q16.458399999999997,14.6647,16.095100000000002,16.5ZM16.4957,11.5L21.4886,11.5Q21.3876,9.31555,20.396,7.5L16.095100000000002,7.5Q16.458399999999997,9.335270000000001,16.4957,11.5ZM15.8665,6.5L19.762,6.5Q19.3009,5.86591,18.7175,5.28248Q16.7469,3.31191,14.1983,2.73691Q14.7965,3.5029,15.2927,4.74324Q15.6255,5.57526,15.8665,6.5Z'%20fill-rule='evenodd'%20fill='%23F48123'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",J3=""+new URL("atmosphere-DSd8U3FD.svg",import.meta.url).href,W3=""+new URL("atmosphere_active-5PmuUlR7.svg",import.meta.url).href,Q3=""+new URL("cons-Bkiu2dr1.svg",import.meta.url).href,sM=""+new URL("cons_active-B0SXLYp3.svg",import.meta.url).href,vn="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2546'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2546)'%3e%3cg%3e%3cpath%20d='M19.5,5.46665Q19.5,4.6520399999999995,18.924,4.07602Q18.348,3.5,17.5333,3.5L12.5,3.5L12.5,20.5L16,20.5Q16.0492,20.5,16.0975,20.5096Q16.1458,20.5192,16.1913,20.5381Q16.236800000000002,20.5569,16.2778,20.5843Q16.3187,20.6116,16.3536,20.6464Q16.3884,20.6813,16.4157,20.7222Q16.4431,20.7632,16.4619,20.8087Q16.480800000000002,20.8542,16.4904,20.9025Q16.5,20.9508,16.5,21Q16.5,21.0492,16.4904,21.0975Q16.480800000000002,21.1458,16.4619,21.1913Q16.4431,21.2368,16.4157,21.2778Q16.3884,21.3187,16.3536,21.3536Q16.3187,21.3884,16.2778,21.4157Q16.236800000000002,21.4431,16.1913,21.4619Q16.1458,21.4808,16.0975,21.4904Q16.0492,21.5,16,21.5L8,21.5Q7.95075,21.5,7.90245,21.4904Q7.85415,21.4808,7.80866,21.4619Q7.76316,21.4431,7.72221,21.4157Q7.68127,21.3884,7.64645,21.3536Q7.61162,21.3187,7.58426,21.2778Q7.55691,21.2368,7.53806,21.1913Q7.51921,21.1458,7.50961,21.0975Q7.5,21.0492,7.5,21Q7.5,20.9508,7.50961,20.9025Q7.51921,20.8542,7.53806,20.8087Q7.55691,20.7632,7.58426,20.7222Q7.61162,20.6813,7.64645,20.6464Q7.68127,20.6116,7.72221,20.5843Q7.76316,20.5569,7.80866,20.5381Q7.85415,20.5192,7.90245,20.5096Q7.95075,20.5,8,20.5L11.5,20.5L11.5,3.5L6.46665,3.5Q5.6520399999999995,3.5,5.07602,4.07602Q4.5,4.6520399999999995,4.5,5.46665Q4.5,5.5159,4.490393,5.56419Q4.480785,5.61249,4.46194,5.65799Q4.443094,5.70349,4.415735,5.7444299999999995Q4.388375,5.78538,4.353553,5.8202Q4.318731,5.85503,4.277785,5.8823799999999995Q4.236839,5.90974,4.191342,5.92859Q4.145845,5.94744,4.097545,5.95704Q4.049246,5.96665,4,5.96665Q3.950754,5.96665,3.902455,5.95704Q3.854155,5.94744,3.808658,5.92859Q3.763161,5.90974,3.722215,5.8823799999999995Q3.681269,5.85503,3.646447,5.8202Q3.611625,5.78538,3.5842652,5.7444299999999995Q3.5569057,5.70349,3.5380602,5.65799Q3.5192147,5.61249,3.50960736,5.56419Q3.5,5.5159,3.5,5.46665Q3.5,4.23782,4.368912,3.368912Q5.23782,2.5,6.46665,2.5L17.5333,2.5Q18.7622,2.5,19.6311,3.368912Q20.5,4.23782,20.5,5.46665Q20.5,5.5159,20.4904,5.56419Q20.4808,5.61249,20.4619,5.65799Q20.4431,5.70349,20.4157,5.7444299999999995Q20.3884,5.78538,20.3536,5.8202Q20.3187,5.85503,20.2778,5.8823799999999995Q20.2368,5.90974,20.1913,5.92859Q20.1458,5.94744,20.0975,5.95704Q20.0492,5.96665,20,5.96665Q19.9508,5.96665,19.9025,5.95704Q19.8542,5.94744,19.8087,5.92859Q19.7632,5.90974,19.7222,5.8823799999999995Q19.6813,5.85503,19.6464,5.8202Q19.6116,5.78538,19.5843,5.7444299999999995Q19.5569,5.70349,19.5381,5.65799Q19.5192,5.61249,19.5096,5.56419Q19.5,5.5159,19.5,5.46665Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",rM="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2555'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2555)'%3e%3cg%3e%3cpath%20d='M19.5,5.46665Q19.5,4.6520399999999995,18.924,4.07602Q18.348,3.5,17.5333,3.5L12.5,3.5L12.5,20.5L16,20.5Q16.0492,20.5,16.0975,20.5096Q16.1458,20.5192,16.1913,20.5381Q16.236800000000002,20.5569,16.2778,20.5843Q16.3187,20.6116,16.3536,20.6464Q16.3884,20.6813,16.4157,20.7222Q16.4431,20.7632,16.4619,20.8087Q16.480800000000002,20.8542,16.4904,20.9025Q16.5,20.9508,16.5,21Q16.5,21.0492,16.4904,21.0975Q16.480800000000002,21.1458,16.4619,21.1913Q16.4431,21.2368,16.4157,21.2778Q16.3884,21.3187,16.3536,21.3536Q16.3187,21.3884,16.2778,21.4157Q16.236800000000002,21.4431,16.1913,21.4619Q16.1458,21.4808,16.0975,21.4904Q16.0492,21.5,16,21.5L8,21.5Q7.95075,21.5,7.90245,21.4904Q7.85415,21.4808,7.80866,21.4619Q7.76316,21.4431,7.72221,21.4157Q7.68127,21.3884,7.64645,21.3536Q7.61162,21.3187,7.58426,21.2778Q7.55691,21.2368,7.53806,21.1913Q7.51921,21.1458,7.50961,21.0975Q7.5,21.0492,7.5,21Q7.5,20.9508,7.50961,20.9025Q7.51921,20.8542,7.53806,20.8087Q7.55691,20.7632,7.58426,20.7222Q7.61162,20.6813,7.64645,20.6464Q7.68127,20.6116,7.72221,20.5843Q7.76316,20.5569,7.80866,20.5381Q7.85415,20.5192,7.90245,20.5096Q7.95075,20.5,8,20.5L11.5,20.5L11.5,3.5L6.46665,3.5Q5.6520399999999995,3.5,5.07602,4.07602Q4.5,4.6520399999999995,4.5,5.46665Q4.5,5.5159,4.490393,5.56419Q4.480785,5.61249,4.46194,5.65799Q4.443094,5.70349,4.415735,5.7444299999999995Q4.388375,5.78538,4.353553,5.8202Q4.318731,5.85503,4.277785,5.8823799999999995Q4.236839,5.90974,4.191342,5.92859Q4.145845,5.94744,4.097545,5.95704Q4.049246,5.96665,4,5.96665Q3.950754,5.96665,3.902455,5.95704Q3.854155,5.94744,3.808658,5.92859Q3.763161,5.90974,3.722215,5.8823799999999995Q3.681269,5.85503,3.646447,5.8202Q3.611625,5.78538,3.5842652,5.7444299999999995Q3.5569057,5.70349,3.5380602,5.65799Q3.5192147,5.61249,3.50960736,5.56419Q3.5,5.5159,3.5,5.46665Q3.5,4.23782,4.368912,3.368912Q5.23782,2.5,6.46665,2.5L17.5333,2.5Q18.7622,2.5,19.6311,3.368912Q20.5,4.23782,20.5,5.46665Q20.5,5.5159,20.4904,5.56419Q20.4808,5.61249,20.4619,5.65799Q20.4431,5.70349,20.4157,5.7444299999999995Q20.3884,5.78538,20.3536,5.8202Q20.3187,5.85503,20.2778,5.8823799999999995Q20.2368,5.90974,20.1913,5.92859Q20.1458,5.94744,20.0975,5.95704Q20.0492,5.96665,20,5.96665Q19.9508,5.96665,19.9025,5.95704Q19.8542,5.94744,19.8087,5.92859Q19.7632,5.90974,19.7222,5.8823799999999995Q19.6813,5.85503,19.6464,5.8202Q19.6116,5.78538,19.5843,5.7444299999999995Q19.5569,5.70349,19.5381,5.65799Q19.5192,5.61249,19.5096,5.56419Q19.5,5.5159,19.5,5.46665Z'%20fill-rule='evenodd'%20fill='%23F48123'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",nn=bt.t.bind(bt);class aM{constructor(e){this.config=e}getHTML(){return`
        <ul id="sky-controls" class="controls-ul">
          <li id="togglePlanets"><span>${nn("planet")}</span><img src="${vn}"></li>
          <li id="togglePlanetOrbits"><span>${nn("orbits")}</span><img src="${vn}"></li>
          <li id="toggleConstellations"><span>${nn("con")}</span><img src="${vn}"></li>
          <li id="toggleBoundaries"><span>${nn("conbound")}</span><img src="${Q3}"></li>
          <li id="toggleGalaxy"><span>${nn("gal")}</span><img src="${vn}"></li>
          <li id="toggleShowers"><span>${nn("meteorshowers")}</span><img src="${vn}"></li>
          <li id="toggleMessier"><span>${nn("messier")}</span><img src="${vn}"></li>
          <li id="toggleEquator"><span>${nn("eq")}</span><img src="${V3}"></li>
          <li id="toggleAzAlt"><span>${nn("az")}</span><img src="${vn}"></li>
          <li id="toggleMeridian"><span>${nn("meridian")}</span><img src="${vn}"></li>
          <li id="toggleEclipticLine"><span>${nn("ec")}</span><img src="${vn}"></li>
          <li id="toggleGround"><span>${nn("ground")}</span><img src="${this.config.showGround?W3:J3}"></li>
        </ul>
    `}bindEvents(e,n){e.querySelectorAll("#sky-controls li").forEach(i=>{i.addEventListener("click",()=>{n(i.id)})})}updateIcon(e,n,i){const s=e.querySelector(`#${n}`);if(!s)return;const r=s.querySelector("img");if(r)switch(n){case"togglePlanets":r.src=i?rM:vn;break;case"toggleBoundaries":r.src=i?sM:Q3;break;case"toggleEquator":r.src=i?iM:V3;break;case"toggleGround":r.src=i?W3:J3;break}}}const oM=""+new URL("search-j7CXq7uj.svg",import.meta.url).href,cM=""+new URL("close-D_wsktwx.svg",import.meta.url).href,ia="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='16'%20height='16'%20viewBox='0%200%2016%2016'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2154'%3e%3cpath%20d='M0%200C0%200%200%200%200%200L16%200C16%200%2016%200%2016%200L16%2016C16%2016%2016%2016%2016%2016L0%2016C0%2016%200%2016%200%2016Z'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%3e%3cg%20clip-path='url(%23master_svg0_287_2154)'%3e%3cg%3e%3crect%20x='0'%20y='0'%20width='16'%20height='16'%20rx='0'%20fill='%23FFFFFF'%20fill-opacity='0'/%3e%3c/g%3e%3cg%3e%3cpath%20d='M14.6860259765625,4.0210717529296875Q14.7567259765625,3.9506947529296874,14.7950259765625,3.8585677529296873Q14.8333259765625,3.7664396529296873,14.8333259765625,3.6666717529296875Q14.8333259765625,3.6174260529296873,14.8237259765625,3.5691266529296874Q14.8141259765625,3.5208267529296875,14.7952259765625,3.4753297529296874Q14.7764259765625,3.4298327529296877,14.7490259765625,3.3888867529296873Q14.7216259765625,3.3479407529296874,14.6868259765625,3.3131187529296877Q14.6520259765625,3.2782967529296876,14.6111259765625,3.2509367529296873Q14.5701259765625,3.2235777529296876,14.5246259765625,3.2047317529296873Q14.4791259765625,3.1858867529296875,14.4308259765625,3.1762787529296874Q14.3825259765625,3.1666717529296875,14.3333259765625,3.1666717529296875Q14.2341259765625,3.1666717529296875,14.1425259765625,3.2045027529296877Q14.0508259765625,3.2423337529296874,13.9806259765625,3.3122717529296875L13.9801259765625,3.3126827529296876L5.9776659765625,11.276901752929687Q5.6249559765625,11.627921752929687,5.2722559765625,11.276901752929687L2.0193309765625,8.039541752929686Q1.9490569765624999,7.969601752929687,1.8574139765625,7.931771752929688Q1.7657706765625,7.893941752929687,1.6666259765625,7.893941752929687Q1.6173802765625,7.893941752929687,1.5690808765625,7.903551752929688Q1.5207809765625,7.9131517529296875,1.4752839765624999,7.932001752929687Q1.4297869765625,7.950841752929687,1.3888409765625,7.978201752929688Q1.3478949765625,8.005561752929687,1.3130729765625,8.040381752929687Q1.2782509765625,8.075211752929688,1.2508909765625,8.116151752929689Q1.2235319765625001,8.157101752929687,1.2046859765625,8.202591752929688Q1.1858409765625,8.248091752929687,1.1762329765625,8.296391752929686Q1.1666259765625,8.344691752929688,1.1666259765625,8.393941752929688Q1.1666259765625,8.493701752929688,1.2049159765625,8.585831752929687Q1.2432059765624999,8.677961752929686,1.3139209765625,8.748341752929687L1.3142329765625,8.748651752929687L4.5668459765625,11.985701752929687Q5.005745976562499,12.422501752929687,5.6249559765625,12.422501752929687Q6.2441759765625,12.422501752929687,6.6830759765625,11.985701752929687L14.6856259765625,4.021482752929687L14.6860259765625,4.0210717529296875L14.6860259765625,4.0210717529296875Z'%20fill-rule='evenodd'%20fill='%232ABB39'%20fill-opacity='1'/%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/svg%3e",lM=""+new URL("observe_disabled-rc6_JXnZ.svg",import.meta.url).href,uM=""+new URL("loading-DOYXQFGz.svg",import.meta.url).href;class hM{getHTML(){return` 
      <div class="search-panel">
          <section class="search-panel-input">
            <div class="search-panel-input-left">
              <img class="search-panel-img-search" src="${oM}">
              <input type="text" placeholder="Search" autocomplete="off">
            </div>
            <img id="searchClose" class="search-panel-close" src="${cM}">
          </section>
          <ul class="search-panel-result control-panel-bg">
            <li><span>NGC 7000</span><img src="${ia}"></li>
            <li><span>NGC 700</span><img src="${ia}"></li>
            <li><span>NGC 70</span><img src="${ia}"></li>
            <li><span>NGC 7</span><img src="${ia}"></li>
          </ul>

          <section class="search-panel-confirm control-panel-bg">
            <span>Observer</span>
            <img class="search-panel-img-confirm" src="${lM}">
          </section>
          <section class="search-panel-slewing control-panel-bg">
            <img src="${uM}">
            <span>Slewing to NGC 7000</span>
            <span class="search-panel-slewing-line">|</span>
            <span class="search-panel-slewing-stop">停止</span>
          </section>
      </div>
    `}bindEvents(e,n){const i=e.querySelector("#searchClose");i&&i.addEventListener("click",()=>{n("closeSearch")})}}const dM=""+new URL("rqc_rotator-B6sLGkPq.svg",import.meta.url).href,J0=""+new URL("qc_stop-BK1i7AbO.svg",import.meta.url).href,fM="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2381/287_2339'%3e%3crect%20x='4'%20y='4'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%3e%3cg%3e%3cg%3e%3cellipse%20cx='16'%20cy='16'%20rx='14'%20ry='14'%20fill='%23F48123'%20fill-opacity='1'/%3e%3c/g%3e%3cg%20clip-path='url(%23master_svg0_287_2381/287_2339)'%3e%3cg%3e%3cpath%20d='M18.353613,13.646506L19.92929,15.22218Q20.25147,15.54436,20.25147,16Q20.25147,16.45563,19.92929,16.77782L18.353741,18.353369999999998L18.353553,18.35355Q18.283227,18.42388,18.191342,18.46194Q18.0994562,18.5,18,18.5Q17.9507543,18.5,17.9024549,18.490389999999998Q17.854155,18.48078,17.808658,18.46194Q17.763161,18.443089999999998,17.722215,18.41573Q17.681269,18.388370000000002,17.646447,18.35355Q17.611625,18.318730000000002,17.584265,18.27778Q17.556906,18.23684,17.53806,18.19134Q17.519215,18.14584,17.509607,18.09755Q17.5,18.04925,17.5,18Q17.5,17.90054,17.53806,17.80866Q17.57612,17.71677,17.646447,17.64645L19.22218,16.07071Q19.29289,16,19.22218,15.92929L17.646447,14.353553Q17.57612,14.283227,17.53806,14.191342Q17.5,14.0994562,17.5,14Q17.5,13.9507543,17.509607,13.9024549Q17.519215,13.854155,17.53806,13.808658Q17.556906,13.763161,17.584265,13.722215Q17.611625,13.681269,17.646447,13.646447Q17.681269,13.611625,17.722215,13.584265Q17.763161,13.556906,17.808658,13.53806Q17.854155,13.519214999999999,17.9024549,13.509607Q17.9507543,13.5,18,13.5Q18.0994562,13.5,18.191342,13.53806Q18.283227,13.57612,18.353553,13.646447L18.353613,13.646506Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3cg%3e%3cpath%20d='M14.35355,14.353553Q14.42388,14.283227,14.46194,14.191342Q14.5,14.0994562,14.5,14Q14.5,13.9507543,14.49039,13.9024549Q14.48078,13.854155,14.46194,13.808658Q14.44309,13.763161,14.41573,13.722215Q14.38838,13.681269,14.35355,13.646447Q14.31873,13.611625,14.27779,13.584265Q14.23684,13.556906,14.19134,13.53806Q14.14584,13.519214999999999,14.09754,13.509607Q14.04925,13.5,14,13.5Q13.90054,13.5,13.80866,13.53806Q13.71677,13.57612,13.64645,13.646447L12.0707108,15.22218Q11.748528,15.54436,11.748528,16Q11.748528,16.45564,12.0707108,16.77782L13.64645,18.35355Q13.71677,18.42388,13.80866,18.46194Q13.90054,18.5,14,18.5Q14.04925,18.5,14.09754,18.490389999999998Q14.14584,18.48078,14.19134,18.46194Q14.23684,18.443089999999998,14.27778,18.41573Q14.31873,18.388370000000002,14.35355,18.35355Q14.38838,18.318730000000002,14.41573,18.27778Q14.44309,18.23684,14.46194,18.19134Q14.48078,18.14584,14.49039,18.09755Q14.5,18.04925,14.5,18Q14.5,17.90054,14.46194,17.80866Q14.42388,17.71677,14.35355,17.64645L12.777818,16.07071Q12.748528,16.04142,12.748528,16Q12.748528,15.95858,12.777817,15.92929L14.3534,14.35371L14.35355,14.353553L14.35355,14.353553Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/svg%3e";class pM{getHTML(){return`
        <div class="rotate-mount-conatiner">
            <section class="rotate-mount">
                <div class="rotate-mount-action">
                    <img src="${J0}" />
                    <img src="${dM}" />  
                </div>
                <div class="rotate-mount-control">
                    <span class="rotate-mount-control-gray"></span>
                    <span class="rotate-mount-control-move"></span>
                    <img class="rotate-mount-cursor" src="${fM}">
                </div>
            </section>
            <section class="rotate-mount-data-container">
                <div class="rotate-mount-data control-panel-bg">
                    <p class="rotate-mount-data-h1">CW 145°</p>
                    <p>45°</p>
                </div>
                <div class="rotate-mount-data control-panel-bg">
                    <p class="rotate-mount-data-h1">0</p>
                    <p>45°</p>
                </div>
            </section>
        </div>
      `}bindEvents(e,n){}}const mM=""+new URL("qmc_north-66oGIbtk.svg",import.meta.url).href,gM=""+new URL("qmc_south-Nf2BnazD.svg",import.meta.url).href,_M=""+new URL("qmc_east-DcE7QWlR.svg",import.meta.url).href,MM=""+new URL("qmc_west-A_50RKJS.svg",import.meta.url).href;class vM{getHTML(){const e=Array.from({length:4},(n,i)=>`<span class="scale-point" data-level="${4-i}"></span>`).join("");return`
        <div class="fov-mount">
          <section class="fov-mount-left">
            <img src="${J0}">
            <div class="fov-mount-left-direction">
              <img src="${mM}">
              <img src="${gM}">
            </div>
          </section>
          <section class="fov-mount-right">
            <div class="fov-mount-right-1">
              <div class="to-home">
                <p class="to-home-showbox control-panel-bg">
                  <span>Slew to Home Postion and stop.</span>
                  <span class="to-home-link">HOME</span>
                </p>
              </div>
              <p class="fov-mount-right-direction">
                <img src="${MM}">
                <img src="${_M}">
              </p>
            </div>
            <div class="fov-mount-right-2">
              <div class="fov-mount-right-scale">
                <div class="scale-point-box">${e}</div>
                <span class="scale-num">1X</span>
              </div>
              <span class="fov-mount-right-shot"></span>
            </div>
          </section>
        </div>
      `}updateScale(e,n){e.querySelectorAll(".scale-point").forEach(r=>{Number(r.dataset.level)<=n?r.classList.add("active"):r.classList.remove("active")});const s=e.querySelector(".scale-num");s&&(s.textContent=`${n}X`)}bindEvents(e,n){this.updateScale(e,1)}}const xM="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='17'%20height='9'%20viewBox='0%200%2017%209'%3e%3cg%3e%3cpath%20d='M0.853613,0.14650600000000003L8.28787,7.58076Q8.393930000000001,7.68683,8.5,7.68683Q8.60606,7.68683,8.71213,7.58076L16.146,0.146874L16.1464,0.146447Q16.2168,0.07612000000000002,16.3087,0.03805999999999998Q16.4005,0,16.5,0Q16.5492,0,16.5975,0.009606999999999977Q16.6458,0.019214999999999982,16.6913,0.03805999999999998Q16.7368,0.05690600000000001,16.7778,0.08426499999999998Q16.8187,0.11162499999999997,16.8536,0.146447Q16.8884,0.181269,16.9157,0.222215Q16.9431,0.263161,16.9619,0.308658Q16.9808,0.354155,16.9904,0.4024549Q17,0.4507543,17,0.5Q17,0.5994562,16.9619,0.691342Q16.9239,0.783227,16.8536,0.853553L9.41924,8.28787Q9.03848,8.66863,8.5,8.66863Q7.96152,8.66863,7.58076,8.28787L0.146447,0.853553Q0.07612000000000002,0.783227,0.03805999999999998,0.691342Q0,0.5994562,0,0.5Q0,0.4507543,0.009606999999999977,0.4024549Q0.019214999999999982,0.354155,0.03805999999999998,0.308658Q0.05690600000000001,0.263161,0.08426499999999998,0.222215Q0.11162499999999997,0.181269,0.146447,0.146447Q0.181269,0.11162499999999997,0.222215,0.08426499999999998Q0.263161,0.05690600000000001,0.308658,0.03805999999999998Q0.354155,0.019214999999999982,0.4024549,0.009606999999999977Q0.4507543,0,0.5,0Q0.5994562,0,0.691342,0.03805999999999998Q0.783227,0.07612000000000002,0.853553,0.146447L0.853613,0.14650600000000003Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'/%3e%3c/g%3e%3c/svg%3e",SM="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2441'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2441)'%3e%3cg%3e%3cpath%20d='M17.9807,4.70856896484375Q13.7338,2.49993896484375,12,2.49993896484375Q10.26619,2.49993896484375,6.0193,4.70856896484375Q1.4999980000000002,7.05886896484375,1.4999989999999999,8.43259896484375Q1.5,9.806088964843749,6.01413,12.22124896484375Q10.2732,14.49993896484375,12,14.49993896484375Q13.7268,14.49993896484375,17.9859,12.22124896484375Q22.5,9.80609896484375,22.5,8.43259896484375Q22.5,7.05886896484375,17.9807,4.70856896484375ZM6.4807,5.59575896484375Q10.51068,3.49993896484375,12,3.49993896484375Q13.4893,3.49993996484375,17.5193,5.59575896484375Q19.3135,6.528858964843749,20.4208,7.35062896484375Q21.5,8.151618964843749,21.5,8.43259896484375Q21.5,8.717158964843751,20.4166,9.53871896484375Q19.3066,10.38051896484375,17.5141,11.33950896484375Q13.4761,13.49993896484375,12,13.49993896484375Q10.5239,13.49993896484375,6.48587,11.33950896484375Q4.69342,10.380508964843749,3.58337,9.53871896484375Q2.5,8.717158964843751,2.499999,8.43259896484375Q2.499999,8.151618964843749,3.57924,7.35062896484375Q4.68649,6.528858964843749,6.4807,5.59575896484375Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'/%3e%3c/g%3e%3cg%3e%3cpath%20d='M2.2650040000000002,15.076004Q10.1434,20.00012,12,20.00012Q13.8566,20.00012,21.735,15.076004Q21.8566,15,22,15Q22.0492,15,22.0975,15.009607Q22.1458,15.019214999999999,22.1913,15.03806Q22.2368,15.056906,22.2778,15.084265Q22.3187,15.111625,22.3536,15.146447Q22.3884,15.181269,22.4157,15.222215Q22.4431,15.263161,22.4619,15.308658Q22.4808,15.354155,22.4904,15.4024549Q22.5,15.4507543,22.5,15.5Q22.5,15.5636249,22.4841,15.625222Q22.4681,15.68682,22.4373,15.742463Q22.4064,15.798107,22.3626,15.84425Q22.3188,15.890393,22.2648,15.924095L22.263,15.925258Q14.1431,21.00012,12,21.00012Q9.8566,21.00012,1.734996,15.923996Q1.856599,16,2,16Q2.0492457,16,2.0975451,15.990393Q2.145845,15.980785000000001,2.191342,15.96194Q2.236839,15.943094,2.277785,15.915735Q2.318731,15.888375,2.353553,15.853553Q2.388375,15.818731,2.415735,15.777785Q2.443094,15.736839,2.4619400000000002,15.691342Q2.480785,15.645845,2.490393,15.5975451Q2.5,15.5492457,2.5,15.5Q2.5,15.4363986,2.484077,15.374823Q2.468154,15.313247,2.437323,15.257618Q2.406491,15.20199,2.362714,15.155851Q2.318938,15.109713,2.2650040000000002,15.076004Q2.143401,15,2,15Q1.9507543,15,1.9024549,15.009607Q1.854155,15.019214999999999,1.8086579999999999,15.03806Q1.763161,15.056906,1.722215,15.084265Q1.681269,15.111625,1.646447,15.146447Q1.611625,15.181269,1.584265,15.222215Q1.5569060000000001,15.263161,1.53806,15.308658Q1.519215,15.354155,1.509607,15.4024549Q1.5,15.4507543,1.5,15.5Q1.5,15.5636014,1.515923,15.625177Q1.531846,15.686753,1.5626769999999999,15.742382Q1.593509,15.79801,1.637286,15.844149Q1.681062,15.890287,1.734996,15.923996L2.2650040000000002,15.076004Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",TM="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2438'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%20clip-path='url(%23master_svg0_287_2438)'%3e%3cg%3e%3cpath%20d='M4.57538,4.57538Q1.5,7.65076,1.5,12Q1.5,16.3492,4.57538,19.4246Q7.65075,22.5,12,22.5Q16.3492,22.5,19.4246,19.4246Q22.5,16.3492,22.5,12Q22.5,7.65075,19.4246,4.57538Q16.3492,1.5,12,1.5Q7.65075,1.5,4.57538,4.57538ZM5.28248,18.7175Q2.5,15.935,2.5,12Q2.5,8.064969999999999,5.28248,5.28248Q8.064969999999999,2.5,12,2.5Q15.935,2.5,18.7175,5.28248Q21.5,8.064969999999999,21.5,12Q21.5,15.935,18.7175,18.7175Q15.935,21.5,12,21.5Q8.064969999999999,21.5,5.28248,18.7175Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3cg%3e%3cpath%20d='M11.5041410390625,5.9999499688Q11.5041460390625,5.9507074,11.5137570390625,5.9024119Q11.5233680390625,5.854116,11.5422150390625,5.808624Q11.5610630390625,5.763131,11.5884230390625,5.722189Q11.6157840390625,5.681247,11.6506050390625,5.646429Q11.6854270390625,5.611611,11.7263710390625,5.584255Q11.7673160390625,5.556899,11.8128110390625,5.538055Q11.8583050390625,5.519212,11.9066018390625,5.509606Q11.9548983390625,5.5,12.0041408540625,5.5Q12.0533865390625,5.5,12.1016860390625,5.509607Q12.1499850390625,5.519215,12.1954820390625,5.53806Q12.2409800390625,5.556906,12.2819260390625,5.584265Q12.3228720390625,5.611625,12.3576940390625,5.646447Q12.3925160390625,5.681269,12.4198760390625,5.722215Q12.4472350390625,5.763161,12.4660810390625,5.808658Q12.4849260390625,5.854155,12.4945330390625,5.9024549Q12.5041410390625,5.9507543,12.5041410390625,6L12.5041410390625,6.0000500312L12.5035610390625,11.79731L16.5965400390625,15.89029L16.5967900390625,15.89055Q16.6671200390625,15.96087,16.7051800390625,16.052799999999998Q16.7432400390625,16.1446,16.7432400390625,16.2441Q16.7432400390625,16.293300000000002,16.7336300390625,16.3416Q16.724030039062498,16.3899,16.7051800390625,16.4354Q16.6863300390625,16.4809,16.6589800390625,16.521900000000002Q16.6316200390625,16.5628,16.5967900390625,16.5977Q16.5619700390625,16.6325,16.5210300390625,16.6598Q16.4800800390625,16.6872,16.4345800390625,16.706Q16.3890800390625,16.724899999999998,16.3407900390625,16.7345Q16.2924900390625,16.7441,16.2432400390625,16.7441Q16.1437800390625,16.7441,16.0519000390625,16.706Q15.9600100390625,16.668,15.8896900390625,16.5977L11.6499870390625,12.357949999999999Q11.5796510390625,12.28762,11.5415910390625,12.19572Q11.5035300390625,12.103819999999999,11.5035400390625,12.004349999999999L11.5041410390625,5.999999999999499L11.5041410390625,5.9999499688Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e",yM="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='none'%20version='1.1'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cdefs%3e%3cclipPath%20id='master_svg0_287_2405'%3e%3crect%20x='0'%20y='0'%20width='24'%20height='24'%20rx='0'/%3e%3c/clipPath%3e%3c/defs%3e%3cg%3e%3cg%20clip-path='url(%23master_svg0_287_2405)'%3e%3cg%3e%3cpath%20d='M19.529600000000002,21.4607Q20.1176,20.9478,19.8278,20.2233L13.02132,3.20702Q12.74474,2.515549,12,2.515549Q11.25526,2.515549,10.97868,3.20702L4.172181,20.2233Q3.882375,20.9478,4.470413,21.4607Q5.05845,21.9737,5.73691,21.5882L11.06138,18.5629Q12,18.0296,12.93862,18.5629L18.2631,21.5882Q18.941499999999998,21.9737,19.529600000000002,21.4607ZM12.09285,3.57841L18.8993,20.5946Q18.9257,20.6605,18.8722,20.7071Q18.8188,20.7538,18.7571,20.7187L13.43263,17.6935Q12,16.8795,10.56737,17.6935L5.24291,20.7187Q5.18123,20.7538,5.12777,20.7071Q5.0743100000000005,20.6605,5.1006599999999995,20.5946L11.90715,3.57841Q11.9323,3.51555,12,3.51555Q12.0677,3.51555,12.09285,3.57841Z'%20fill-rule='evenodd'%20fill='%23FFFFFF'%20fill-opacity='1'%20style='mix-blend-mode:passthrough'/%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/svg%3e",EM=""+new URL("objects_quick_search-Cz9698D6.svg",import.meta.url).href,DM=""+new URL("rqc_default-DcxThlkJ.svg",import.meta.url).href,AM=""+new URL("mqc_default-BcVD_9vr.svg",import.meta.url).href;class bM{constructor(e,n){Le(this,"container");Le(this,"onAction");Le(this,"config");Le(this,"panels");Le(this,"activePanel",null);Le(this,"mounts");Le(this,"mountActivePanel",null);const i=document.getElementById(e);if(!i)throw new Error(`Cannot find container element #${e}`);this.container=i,this.onAction=n.onAction,this.config=n.config,this.panels={datetime:new tM,nav:new nM,layer:new aM(this.config),search:new hM},this.mounts={rotate:new pM,fov:new vM},this.render(),this.bindEvents()}render(){this.container.innerHTML=`
      <div class="sky-atlas-controls1">
          <section class="return">
              <img id="down-close" src="${xM}">
          </section>
          <section class="fov control-panel-bg">FOV 2.3° × 3.2°</section>

          <section class="controls">
            <span class="controls-img" data-panel="layer"><img src="${SM}"></span>
            <span class="controls-img" data-panel="datetime"><img src="${TM}"></span>
            <span class="controls-img controls-nav" data-panel="nav">
              <span class="controls-nav-nw">NW</span>
              <img src="${yM}">
            </span>
            <span class="controls-img" data-panel="search"><img src="${EM}"></span>

            <div class="controls-showbox control-panel-bg" id="controls-showbox">
                ${this.getShowBoxHTML()}
            </div>
          </section>

          <section class="search-container" style="display: none;"></section>
      </div>

      <section class="search-point-1"><span></span></section>
      <section class="search-point-2"><span></span></section>
      <section class="mount-rotate-1"><span></span></section>
      <section class="mount-rotate-2"><span></span></section>
      <section class="mount-fov-center">
        <p class="border"></p>
        <p class="text">FOV 2.3° x 3.2°</p>
      </section>

      <div class="sky-atlas-controls2">
          <section class="mount-control" id="mount-control">
            <img src="${DM}"> 
            <img src="${AM}"> 
          </section>
          <div class="mount-showbox" id="mount-showbox"></div>
      </div> 
    `}bindMountControl(){const e=this.container.querySelector("#mount-control");if(!e)return;const n=e.querySelectorAll("img");n[0].addEventListener("click",()=>{this.mountActivePanel=this.mountActivePanel==="rotate"?null:"rotate",this.showMountPanel()}),n[1].addEventListener("click",()=>{this.mountActivePanel=this.mountActivePanel==="fov"?null:"fov",this.showMountPanel()})}showMountPanel(){const e=this.container.querySelector("#mount-showbox");e&&(this.mountActivePanel&&this.mounts[this.mountActivePanel]?(e.style.display="block",e.innerHTML=this.mounts[this.mountActivePanel].getHTML(),this.mounts[this.mountActivePanel].bindEvents(e,this.config)):(e.style.display="none",e.innerHTML=""))}getShowBoxHTML(){return this.activePanel&&this.panels[this.activePanel]?this.panels[this.activePanel].getHTML():""}bindControlsPanel(){const e=this.container.querySelector(".controls");e&&e.querySelectorAll(".controls-img").forEach(n=>{n.addEventListener("click",()=>{const i=n.getAttribute("data-panel");i&&(this.activePanel===i?this.activePanel=null:this.activePanel=i,this.updateShowBox())})})}updateShowBox(){const e=this.container.querySelector("#controls-showbox"),n=this.container.querySelector(".controls"),i=this.container.querySelector(".search-container");this.activePanel==="search"?(n.style.display="none",i.style.display="block",i.innerHTML=this.panels.search.getHTML(),this.panels.search.bindEvents(i,this.onAction)):this.activePanel?(n.style.display="flex",i.style.display="none",e.style.display=this.activePanel?"block":"none",this.activePanel&&(e.innerHTML=this.getShowBoxHTML(),this.panels[this.activePanel].bindEvents(e,this.onAction))):(n.style.display="flex",i.style.display="none",e.style.display="none")}updateIcon(e,n){if(!this.panels.layer)return;const i=this.container.querySelector("#controls-showbox");i&&this.panels.layer.updateIcon(i,e,n)}bindClose(){const e=this.container.querySelector("#down-close");e&&e.addEventListener("click",()=>{this.onAction("closePage")})}bindEvents(){this.bindControlsPanel(),this.bindMountControl(),this.bindClose();const e=this.onAction;this.onAction=(n,i)=>{n==="closeSearch"?(this.activePanel=null,this.updateShowBox()):e(n,i)}}}class wM{constructor(e,n){Le(this,"view");Le(this,"commEnabled",!1);Le(this,"config");Le(this,"tonightObjects",[]);this.mainCallback=e,this.config=n,this.view=new bM("control-panel",{onAction:(i,s)=>this.handleAction(i,s),config:this.config}),this.initCommunication()}initCommunication(){this.commEnabled=!0,window.unigo_app?window.unigo_app.onUnigoCommandReceived=e=>this.handleCommandResponse(e):console.warn("unigo_app 未定义，通信可能无法进行！"),console.log("JS通信已初始化"),this.sendCommand("/getLanguage:"),this.sendCommand("/getLatLon:")}sendCommand(e){var n;if(console.log("发送到 Flutter:",e),!this.commEnabled){console.warn("通信未就绪");return}(n=window.unigo_app)==null||n.postMessage(e)}handleCommandResponse(e){const n=e.indexOf(":");if(n===-1){console.warn("命令格式不正确，没有冒号");return}const s=e.slice(0,n).substring(1),r=e.slice(n+1);switch(s){case"tonightObjects":this.tonightObjects=JSON.parse(r),this.mainCallback("toggleMessier",this.tonightObjects);break;case"getLanguage":bt.setLanguage(JSON.parse(r));break;case"getLatLon":this.mainCallback("setLocation",JSON.parse(r));break;default:console.warn("未知命令:",s)}}handleAction(e,n){switch(console.log(`用户操作: ${e}`,n),e){case"closePage":this.sendCommand("/closePage:");break;case"toggleMessier":console.log(this.config.showMessier),this.sendCommand("/tonightObjects:");break;case"toggleTime":this.sendCommand(`/${e}:${n.toISOString()}`);break;default:this.sendCommand(`/${e}:`)}e!=="toggleMessier"&&this.mainCallback(e,n)}updateViewIcon(e,n){this.view.updateIcon(e,n)}}let Oe=null,Pe={...$_};function CM(){const t=document.getElementById("app");if(!t)throw new Error("Cannot find container element #app");Oe&&(Oe.destroy(),Oe=null),Oe=new q_(t,Pe),Oe.animate()}CM();const sa=new wM((t,e)=>{switch(t){case"setLocation":Pe.longitude=e.lon,Pe.latitude=e.lat,Oe==null||Oe.updateConfig({longitude:e.lon,latitude:e.lat});break;case"toggleTime":e instanceof Date&&(Oe==null||Oe.updateConfig({clock:new Date(e)}));break;case"togglePlanets":Pe.showPlanets.planets=!Pe.showPlanets.planets,Pe.showPlanets.labels=!Pe.showPlanets.labels,Oe==null||Oe.updateConfig({showPlanets:Pe.showPlanets}),sa.updateViewIcon("togglePlanets",Pe.showPlanets.planets);break;case"togglePlanetOrbits":Pe.showPlanets.orbits=!Pe.showPlanets.orbits,Oe==null||Oe.updateConfig({showPlanets:Pe.showPlanets});break;case"toggleConstellations":Oe==null||Oe.updateConfig({constellation:Pe.constellation}),Pe.constellation.lines=!Pe.constellation.lines,Pe.constellation.labels=!Pe.constellation.labels;break;case"toggleBoundaries":Oe==null||Oe.updateConfig({showBoundraies:!Pe.showBoundraies}),Pe.showBoundraies=!Pe.showBoundraies,sa.updateViewIcon("toggleBoundaries",Pe.showBoundraies);break;case"toggleGalaxy":Oe==null||Oe.updateConfig({showGalaxy:!Pe.showGalaxy}),Pe.showGalaxy=!Pe.showGalaxy;break;case"toggleShowers":Oe==null||Oe.updateConfig({meteorshowers:!Pe.meteorshowers}),Pe.meteorshowers=!Pe.meteorshowers;break;case"toggleMessier":Oe==null||Oe.updateConfig({showMessier:!Pe.showMessier}),Pe.showMessier=!Pe.showMessier;break;case"toggleEquator":Oe==null||Oe.updateConfig({showRaDec:!Pe.showRaDec}),Pe.showRaDec=!Pe.showRaDec,sa.updateViewIcon("toggleEquator",Pe.showRaDec);break;case"toggleAzAlt":Oe==null||Oe.updateConfig({showAzAlt:!Pe.showAzAlt}),Pe.showAzAlt=!Pe.showAzAlt;break;case"toggleMeridian":Oe==null||Oe.updateConfig({showMeridian:!Pe.showMeridian}),Pe.showMeridian=!Pe.showMeridian;break;case"toggleEclipticLine":Oe==null||Oe.updateConfig({showEcliptic:!Pe.showEcliptic}),Pe.showEcliptic=!Pe.showEcliptic;break;case"toggleGround":Oe==null||Oe.updateConfig({showGround:!Pe.showGround}),Pe.showGround=!Pe.showGround,sa.updateViewIcon("toggleGround",Pe.showGround);break}},Pe);
